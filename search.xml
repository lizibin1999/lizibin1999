<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>uni-app小项目-每日图文app</title>
      <link href="/lizibin1999.github.io/article/6f7ba094.html"/>
      <url>/lizibin1999.github.io/article/6f7ba094.html</url>
      
        <content type="html"><![CDATA[<h1 id="uni-app小项目-每日图文app"><a href="#uni-app小项目-每日图文app" class="headerlink" title="uni-app小项目-每日图文app"></a>uni-app小项目-每日图文app</h1><ul><li>前言： 学了一段时间的uni-app 做了一个超简单的app，练习一下基础语法，后端用的是node.js</li></ul><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><p><img src="https://gitee.com/lizibin1999/img/raw/master/imgs/20210227165918.png" alt=""></p><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><p><img src="https://gitee.com/lizibin1999/img/raw/master/imgs/20210227170020.png" alt=""></p><p><a href="https://www.bilibili.com/video/BV1uy4y1e7w6/" target="_blank" rel="noopener">视频演示<a><br>https://www.bilibili.com/video/BV1uy4y1e7w6</p>]]></content>
      
      
      <categories>
          
          <category> uni-app </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uni-app小项目-每日图文app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uni-app学习</title>
      <link href="/lizibin1999.github.io/article/18d29b28.html"/>
      <url>/lizibin1999.github.io/article/18d29b28.html</url>
      
        <content type="html"><![CDATA[<h1 id="uni-app"><a href="#uni-app" class="headerlink" title="uni-app"></a>uni-app</h1><h2 id="单位"><a href="#单位" class="headerlink" title="单位"></a>单位</h2><ul><li>rpx小程序的单位 750rpx = 屏幕宽</li><li>vw h5的单位  100vw = 屏幕宽</li></ul><h2 id="全局共享数据"><a href="#全局共享数据" class="headerlink" title="全局共享数据"></a>全局共享数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js中</span></span><br><span class="line">Vue.prototype.baseurl=<span class="string">"www"</span>;</span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line"><span class="keyword">this</span>.baseurl</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//App.vue</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">globalData:&#123;</span><br><span class="line">base:<span class="string">"aaaa"</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/使用</span></span><br></pre></td></tr></table></figure><h2 id="组件插槽"><a href="#组件插槽" class="headerlink" title="组件插槽"></a>组件插槽</h2><ul><li>父给子动态的传递标签 slot</li></ul><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><p>onLunch 全局App启动<br>onLoad onShow 页面加载完毕和显示<br>mounted 组件挂载完毕<br>onRwachBottom 触底触发</p><h2 id="uni-ui"><a href="#uni-ui" class="headerlink" title="uni-ui"></a>uni-ui</h2><ul><li>安装 npm install @dcloudio/uni-ui</li></ul><h2 id="uni-api"><a href="#uni-api" class="headerlink" title="uni api"></a>uni api</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">uni.request(&#123;</span><br><span class="line">url:<span class="string">''</span>,</span><br><span class="line">data:&#123;&#125;,</span><br><span class="line">method:<span class="string">'GET'</span>,</span><br><span class="line">success:<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="请求封装"><a href="#请求封装" class="headerlink" title="请求封装"></a>请求封装</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> BASE_URL = <span class="string">'http://hostlost:3000'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> myRequest = <span class="function">(<span class="params">options</span>) =&gt;</span> &#123;</span><br><span class="line">uni.request(&#123;</span><br><span class="line">uel:BASE_URL+options.url,</span><br><span class="line">method: options.method || <span class="string">'GET'</span>,</span><br><span class="line">data: options.data || &#123;&#125;,</span><br><span class="line">success: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(res.data.status !== <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> uni.showToast(&#123;</span><br><span class="line">title:<span class="string">'获取数据失败'</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">resolve(res)</span><br><span class="line">&#125;,</span><br><span class="line">fail: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">uni.showToast(&#123;</span><br><span class="line">title: <span class="string">'请求接口失败'</span></span><br><span class="line">&#125;)</span><br><span class="line">reject(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 挂载到main.js 中</span></span><br><span class="line"><span class="keyword">import</span> &#123; myRequest &#125; <span class="keyword">from</span> <span class="string">''</span></span><br><span class="line">Vue.prototype.$myRuquest = myRequest</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用</span></span><br><span class="line"><span class="keyword">async</span> getSwipers () &#123;</span><br><span class="line"><span class="keyword">const</span> res = <span class="keyword">await</span> <span class="keyword">this</span>.$myRuquest(&#123;</span><br><span class="line">url: <span class="string">''</span>,</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="扩展运算符解决下拉获取数据保存之前的数据"><a href="#扩展运算符解决下拉获取数据保存之前的数据" class="headerlink" title="扩展运算符解决下拉获取数据保存之前的数据"></a>扩展运算符解决下拉获取数据保存之前的数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.goos = [...this.goods,...res.data.message]</span><br></pre></td></tr></table></figure><h2 id="开启下拉刷新"><a href="#开启下拉刷新" class="headerlink" title="开启下拉刷新"></a>开启下拉刷新</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"enablePullDownRefresh"</span>: <span class="literal">true</span></span><br><span class="line">\\监听下拉刷新</span><br><span class="line">onPullDownRefresh() &#123;</span><br><span class="line"><span class="keyword">this</span>.pageindex = <span class="number">1</span></span><br><span class="line"><span class="keyword">this</span>.goos = []</span><br><span class="line"><span class="keyword">this</span>.flag = <span class="literal">false</span></span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span>=&gt;</span> &#123;</span><br><span class="line"><span class="keyword">this</span>.getgoos()</span><br><span class="line">&#125;,<span class="number">1000</span>).then(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">uni.stopPullDownRefresh()</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> uni-app </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uni-app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的Vue登录界面</title>
      <link href="/lizibin1999.github.io/article/f34ac8ac.html"/>
      <url>/lizibin1999.github.io/article/f34ac8ac.html</url>
      
        <content type="html"><![CDATA[<h1 id="简单的Vue登录界面"><a href="#简单的Vue登录界面" class="headerlink" title="简单的Vue登录界面"></a>简单的Vue登录界面</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;el-container&gt;</span><br><span class="line">      &lt;el-header height&#x3D;&quot;200px&quot;</span><br><span class="line">        &gt;&lt;div class&#x3D;&quot;top_text&quot;&gt;</span><br><span class="line">          &lt;h1 style&#x3D;&quot;text-align: center;&quot;&gt;图书馆后台管理系统&lt;&#x2F;h1&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;&lt;&#x2F;el-header</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;el-main&gt;</span><br><span class="line">        &lt;el-row&gt;</span><br><span class="line">          &lt;el-col :span&#x3D;&quot;8&quot; :offset&#x3D;&quot;8&quot;</span><br><span class="line">            &gt;&lt;div class&#x3D;&quot;grid-content bg-purple&quot;&gt;</span><br><span class="line">             &lt;div class&#x3D;&quot;text&quot;&gt;&lt;h1 style&#x3D;&quot;text-align: center;&quot;&gt;欢迎登录&lt;&#x2F;h1&gt;&lt;&#x2F;div&gt;</span><br><span class="line">              &lt;div class&#x3D;&quot;main_text&quot;&gt;</span><br><span class="line">                &lt;el-form ref&#x3D;&quot;LoginFormRef&quot; :model&#x3D;&quot;LoginForm&quot; :rules&#x3D;&quot;LoginFormRules&quot; label-width&#x3D;&quot;80px&quot; class&#x3D;&quot;form&quot;&gt;</span><br><span class="line">                  &lt;!--用户名--&gt;</span><br><span class="line">                  &lt;el-form-item label&#x3D;&quot;学号:&quot; prop&#x3D;&quot;snumber&quot;&gt;</span><br><span class="line">                    &lt;el-input placeholder&#x3D;&quot;Snumber&quot; v-model&#x3D;&quot;LoginForm.snumber&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">                  &lt;&#x2F;el-form-item&gt;</span><br><span class="line">                  &lt;!--密码--&gt;</span><br><span class="line">                  &lt;el-form-item label&#x3D;&quot;密码:&quot; prop&#x3D;&quot;password&quot;&gt;</span><br><span class="line">                    &lt;el-input type&#x3D;&quot;password&quot; placeholder&#x3D;&quot;Password&quot; v-model&#x3D;&quot;LoginForm.password&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">                  &lt;&#x2F;el-form-item&gt;</span><br><span class="line">                  &lt;!--按钮--&gt;</span><br><span class="line">                  &lt;el-form-item class&#x3D;&quot;box_but&quot;&gt;</span><br><span class="line">                    &lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;login&quot;&gt;登录&lt;&#x2F;el-button&gt;</span><br><span class="line">                    &lt;el-button type&#x3D;&quot;info&quot; @click&#x3D;&quot;reset&quot;&gt;重置&lt;&#x2F;el-button&gt;</span><br><span class="line">                  &lt;&#x2F;el-form-item&gt;</span><br><span class="line">                &lt;&#x2F;el-form&gt;</span><br><span class="line">              &lt;&#x2F;div&gt;&lt;&#x2F;div</span><br><span class="line">          &gt;&lt;&#x2F;el-col&gt;</span><br><span class="line">        &lt;&#x2F;el-row&gt;</span><br><span class="line">      &lt;&#x2F;el-main&gt;</span><br><span class="line">      &lt;el-footer height&#x3D;&quot;300px&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;footer_text&quot;&gt;&lt;i&gt;创建时间：2021-2-3@李子彬&lt;&#x2F;i&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;el-footer&gt;</span><br><span class="line">    &lt;&#x2F;el-container&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Vue from &#39;vue&#39;;</span><br><span class="line">    export default &#123;</span><br><span class="line">        data() </span><br><span class="line">        &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                LoginForm: &#123;</span><br><span class="line">                  password: &#39;&#39;,</span><br><span class="line">                  snumber: &#39;&#39;</span><br><span class="line">                &#125;,</span><br><span class="line">                LoginFormRules: &#123;</span><br><span class="line">                  snumber: [</span><br><span class="line">                    &#123; required: true, message: &#39;请输入用户名&#39;, trigger: &#39;blur&#39; &#125;,</span><br><span class="line">                    &#123; min: 3, max: 10, message: &#39;用户名长度在3-10个字符&#39;, trigger: &#39;blur&#39; &#125;</span><br><span class="line">                  ],</span><br><span class="line">                  password: [</span><br><span class="line">                    &#123; required: true, message: &#39;请输入密码&#39;, trigger: &#39;blur&#39; &#125;,</span><br><span class="line">                    &#123; min: 6, max: 15, message: &#39;密码长度为6-15个字符&#39;, trigger: &#39;blur&#39; &#125;</span><br><span class="line">                  ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">       methods: &#123;</span><br><span class="line">          reset() &#123;</span><br><span class="line">            this.$refs.LoginFormRef.resetFields()</span><br><span class="line">          &#125;,</span><br><span class="line">          login() &#123;</span><br><span class="line">            this.$refs.LoginFormRef.validate(async valid &#x3D;&gt; &#123;</span><br><span class="line">              if (!valid) return</span><br><span class="line">              const &#123; data: res &#125; &#x3D; await this.$http.post(&#39;user&#39;, this.LoginForm)</span><br><span class="line">              if (res &#x3D;&#x3D;&#x3D; 1) return this.$message.error(&#39;用户名或密码错误！&#39;)</span><br><span class="line">              this.$message.success(&#39;登录成功，身份：学生，欢迎！&#39;)</span><br><span class="line">              this.$router.push(&#39;&#x2F;StudentHome&#x2F;&#39;+ this.LoginForm.snumber)</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">* &#123;</span><br><span class="line">  margin: 0;</span><br><span class="line">  padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">.text &#123;</span><br><span class="line"> padding-top: 40px;</span><br><span class="line">&#125;</span><br><span class="line">.main_text &#123;</span><br><span class="line">  width: 400px;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  padding-top: 40px;</span><br><span class="line">&#125;</span><br><span class="line">.footer_text &#123;</span><br><span class="line">  color: aqua;</span><br><span class="line">  width: 300px;</span><br><span class="line">  height: 20px;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  margin-top: 300px;</span><br><span class="line">  font-size: 22px;</span><br><span class="line">&#125;</span><br><span class="line">html,body,#app &#123;height: 100%;&#125;</span><br><span class="line">#app &#123;</span><br><span class="line">  background: url(..&#x2F;assets&#x2F;book.jpg);</span><br><span class="line">  background-size: 100% 100%;</span><br><span class="line">&#125;</span><br><span class="line">.el-header &#123;</span><br><span class="line"></span><br><span class="line">  color: #333;</span><br><span class="line">  text-align: center;</span><br><span class="line">  line-height: 200px;</span><br><span class="line">  font-size: 40px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.grid-content &#123;</span><br><span class="line">  border-radius: 4px;</span><br><span class="line">  min-height: 36px;</span><br><span class="line">  height: 350px;</span><br><span class="line">&#125;</span><br><span class="line">.bg-purple &#123;</span><br><span class="line">  background: #DCDFE6;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 简单的Vue登录界面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Element-ui</title>
      <link href="/lizibin1999.github.io/article/9ff1b42a.html"/>
      <url>/lizibin1999.github.io/article/9ff1b42a.html</url>
      
        <content type="html"><![CDATA[<h1 id="Element-ui"><a href="#Element-ui" class="headerlink" title="Element-ui"></a>Element-ui</h1><h2 id="属性写在标签里"><a href="#属性写在标签里" class="headerlink" title="属性写在标签里"></a>属性写在标签里</h2><h2 id="事件-事件名-””"><a href="#事件-事件名-””" class="headerlink" title="事件 @事件名=””"></a>事件 @事件名=””</h2><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-input v-model&#x3D;&quot;username&quot; ref&#x3D;&quot;inputs&quot;&gt;&lt;&#x2F;e;-input&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;调用</span><br><span class="line">this.$refs.inputs.fouces();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NODE操作MYSQL</title>
      <link href="/lizibin1999.github.io/article/c84e5b77.html"/>
      <url>/lizibin1999.github.io/article/c84e5b77.html</url>
      
        <content type="html"><![CDATA[<h1 id="node操作mysql数据库"><a href="#node操作mysql数据库" class="headerlink" title="node操作mysql数据库"></a>node操作mysql数据库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">const express &#x3D; require(&quot;express&quot;);</span><br><span class="line">const app &#x3D; express();</span><br><span class="line">const mysql &#x3D; require(&quot;mysql&quot;)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;链接数据库</span><br><span class="line">const db &#x3D; mysql.createConnection(&#123;</span><br><span class="line">    host:&quot;localhost&quot;,</span><br><span class="line">    user:&quot;root&quot;,</span><br><span class="line">    password:&quot;root&quot;,</span><br><span class="line">    database:&quot;nodemysql&quot;</span><br><span class="line">&#125;)</span><br><span class="line">db.connect( (err) &#x3D;&gt; &#123;</span><br><span class="line">    if(err) throw err;</span><br><span class="line">    console.log(&#39;连接成功&#39;)</span><br><span class="line">&#125;)</span><br><span class="line">&#x2F;&#x2F;创建数据库</span><br><span class="line">app.get(&quot;&#x2F;createdb&quot;, (req,res) &#x3D;&gt; &#123;</span><br><span class="line">    let sql &#x3D; &quot;create database nodemysql&quot;;</span><br><span class="line">    db.query(sql,(err,result) &#x3D;&gt; &#123;</span><br><span class="line">        if(err)&#123;</span><br><span class="line">            console.log(err);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            console.log(result);</span><br><span class="line">            res.send(&quot;database create success&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125; )</span><br><span class="line">&#x2F;&#x2F;创建表</span><br><span class="line">app.get(&quot;&#x2F;createtableadmin&quot;, (req,res) &#x3D;&gt; &#123;</span><br><span class="line">    let admin1 &#x3D; &#123;user:&quot;lizibin&quot;,password: 123456&#125;</span><br><span class="line">    let sql &#x3D; &quot;insert into admin set ? &quot; </span><br><span class="line">    db.query(sql,admin1,(err,result) &#x3D;&gt; &#123;</span><br><span class="line">        if(err)&#123;</span><br><span class="line">            console.log(err);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            console.log(result);</span><br><span class="line">            res.send(&quot;插入成功&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.listen(3000, () &#x3D;&gt; &#123;</span><br><span class="line">    console.log(&quot;服务器开启在3000端口&quot;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> NODE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NODE操作MYSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VueX</title>
      <link href="/lizibin1999.github.io/article/e02263fd.html"/>
      <url>/lizibin1999.github.io/article/e02263fd.html</url>
      
        <content type="html"><![CDATA[<h1 id="VueX作用"><a href="#VueX作用" class="headerlink" title="VueX作用"></a>VueX作用</h1><p><em>VueX</em>是实现组件全局状态（数据）管理的一种机制，可以方便的实现组件之间数据的共享。</p><p><em>注意</em>：一般将组件共享数据存在VueX中，私有数据存在组件的data中，但项目中也可以全部存在VueX中。</p><hr><h1 id="VueX基本使用"><a href="#VueX基本使用" class="headerlink" title="VueX基本使用"></a>VueX基本使用</h1><ul><li>下载安装用Vue ui即可</li></ul><h1 id="VueX核心概念"><a href="#VueX核心概念" class="headerlink" title="VueX核心概念"></a>VueX核心概念</h1><h2 id="State-提供唯一的公共数据源，所有共享的数据都要统一放到Store的State中进行存储。"><a href="#State-提供唯一的公共数据源，所有共享的数据都要统一放到Store的State中进行存储。" class="headerlink" title="State 提供唯一的公共数据源，所有共享的数据都要统一放到Store的State中进行存储。"></a>State 提供唯一的公共数据源，所有共享的数据都要统一放到Store的State中进行存储。</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">const store &#x3D; new Vuex.store(&#123;</span><br><span class="line">state: &#123;</span><br><span class="line">count: 0</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#x2F;&#x2F;使用</span><br><span class="line">this.$store.state.count</span><br></pre></td></tr></table></figure><ul><li>第二种使用方式，当计算属性使用，函数mapState<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; mapState &#125; from &#39;vuex&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">data () &#123;</span><br><span class="line">return &#123;&#125;</span><br><span class="line">&#125;,</span><br><span class="line">computed: &#123;</span><br><span class="line">...mapState([&#39;count&#39;])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&#x2F;&#x2F;使用</span><br><span class="line">&#123;&#123;count&#125;&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="Mutation-用于变更Store中的数据。"><a href="#Mutation-用于变更Store中的数据。" class="headerlink" title="Mutation 用于变更Store中的数据。"></a>Mutation 用于变更Store中的数据。</h2><p><strong>注意</strong>：Mutation函数中不能执行异步操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">const store &#x3D; new Vuex.store(&#123;</span><br><span class="line">state: &#123;</span><br><span class="line">count: 0</span><br><span class="line">&#125;,</span><br><span class="line">mutations: &#123;</span><br><span class="line">add(state) &#123;</span><br><span class="line">state.count++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#x2F;&#x2F;使用</span><br><span class="line">methods: &#123;</span><br><span class="line">hand1() &#123;</span><br><span class="line">this.$store.commit(&#39;add&#39;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>mutation传递参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">const store &#x3D; new Vuex.store(&#123;</span><br><span class="line">state: &#123;</span><br><span class="line">count: 0</span><br><span class="line">&#125;,</span><br><span class="line">mutations: &#123;</span><br><span class="line">add(state,step) &#123;</span><br><span class="line">state.count +&#x3D; step</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#x2F;&#x2F;使用</span><br><span class="line">methods: &#123;</span><br><span class="line">hand1() &#123;</span><br><span class="line">this.$store.commit(&#39;add&#39;,3)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>第二章触发mutation的方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import &#123; mapMutations &#125; from &#39;vuex&#39;</span><br><span class="line"></span><br><span class="line">methods: &#123;</span><br><span class="line">...mapMutations([&#39;add&#39;]),</span><br><span class="line">hand() &#123;</span><br><span class="line">this.add()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="Actions-处理异步任务，不能直接修改-state-中的数据，必须通过-context-commit-触发mutation才行"><a href="#Actions-处理异步任务，不能直接修改-state-中的数据，必须通过-context-commit-触发mutation才行" class="headerlink" title="Actions 处理异步任务，不能直接修改 state 中的数据，必须通过 context.commit()触发mutation才行"></a>Actions 处理异步任务，不能直接修改 state 中的数据，必须通过 context.commit()触发mutation才行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">actions: &#123;</span><br><span class="line">addAsync(context) &#123;</span><br><span class="line">settimeout(() &#x3D;&gt; &#123;</span><br><span class="line">context.commit(&#39;add&#39;)</span><br><span class="line">&#125;,1000)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;调用</span><br><span class="line">methods: &#123;</span><br><span class="line">hand() &#123;</span><br><span class="line">this.$store.dispatch(&#39;addAsync&#39;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><ul><li>Actions传递参数<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">actions: &#123;</span><br><span class="line">addAsync(context，step) &#123;</span><br><span class="line">settimeout(() &#x3D;&gt; &#123;</span><br><span class="line">context.commit(&#39;add&#39;,step)</span><br><span class="line">&#125;,1000)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;调用</span><br><span class="line">methods: &#123;</span><br><span class="line">hand() &#123;</span><br><span class="line">this.$store.dispatch(&#39;addAsync&#39;,3)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="GEtter-对state-中的数据进行加工处理形成新的数据，不改变state中的数据"><a href="#GEtter-对state-中的数据进行加工处理形成新的数据，不改变state中的数据" class="headerlink" title="GEtter 对state 中的数据进行加工处理形成新的数据，不改变state中的数据"></a>GEtter 对state 中的数据进行加工处理形成新的数据，不改变state中的数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">getters: &#123;</span><br><span class="line">showNum(state) &#123;</span><br><span class="line">return &#39;当前最新的数量是[&#39;+ state.count +&#39;]&#39;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;使用</span><br><span class="line">&#123;&#123;this.$store,getters.showNum&#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VueX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue脚手架</title>
      <link href="/lizibin1999.github.io/article/2b138fde.html"/>
      <url>/lizibin1999.github.io/article/2b138fde.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h1><ol><li><p>安装<br><code>npm install -g @vue/cli</code></p></li><li><p>创建项目-图形化<br><a src="https://www.bilibili.com/video/BV1gK411K7sb/">视频地址</a></p></li><li><p>element<br><a href="https://www.bilibili.com/video/bv1CV41127SR" target="_blank" rel="noopener">视频地址</a></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Vue脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack</title>
      <link href="/lizibin1999.github.io/article/b9f20a20.html"/>
      <url>/lizibin1999.github.io/article/b9f20a20.html</url>
      
        <content type="html"><![CDATA[<h1 id="webpack安装"><a href="#webpack安装" class="headerlink" title="webpack安装"></a>webpack安装</h1><ul><li>webpack依赖node.js环境</li></ul><ol><li><code>npm init -y</code></li><li><code>npm install webpack webpack-cli -D</code></li><li>在项目根目录创建 webpack.config.js的文件<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.export = &#123;</span><br><span class="line">    mode: <span class="string">'development'</span><span class="comment">//production</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在package.json配置<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"dev"</span>:<span class="string">"webpack"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在终端中运行<code>npm run dev</code> 打包</li></ol><h1 id="配置打包的入口和出口"><a href="#配置打包的入口和出口" class="headerlink" title="配置打包的入口和出口"></a>配置打包的入口和出口</h1><img src="https://s1.ax1x.com/2020/08/31/dOKifU.png" alt="dOKifU.png" border="0" /><h1 id="配置自动打包功能"><a href="#配置自动打包功能" class="headerlink" title="配置自动打包功能"></a>配置自动打包功能</h1><ol><li>运行<code>npm install webpack-dev-server -D</code> 安装打包插件 </li><li>在在package.json配置<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"dev"</span>:<span class="string">"webpack-dev-server"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">3.</span> 在webpack.config.js中配置</span><br><span class="line"><span class="string">``</span><span class="string">` js</span></span><br><span class="line"><span class="string">const path = require('path')</span></span><br><span class="line"><span class="string">module.exports = &#123;</span></span><br><span class="line"><span class="string">    mode: 'development',</span></span><br><span class="line"><span class="string">    entry: path.join(__dirname,'./src/index.js'),//输入文件地址</span></span><br><span class="line"><span class="string">    output: &#123;</span></span><br><span class="line"><span class="string">        path: path.join(__dirname, './dist'),//输出文件地址</span></span><br><span class="line"><span class="string">        filename: 'bundle.js'//输出文件名称</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></li><li>在index.html中引入<code>&lt;srcript src=&quot;/bundle.js&quot;&gt;&lt;/srcript&gt;</code></li><li>运行<code>npm run dev</code></li></ol><h1 id="配置html-webpack-plugin生成预览页面"><a href="#配置html-webpack-plugin生成预览页面" class="headerlink" title="配置html-webpack-plugin生成预览页面"></a>配置html-webpack-plugin生成预览页面</h1><ol><li>运行<code>npm install html-webpack-pludin</code></li><li>修改webpack.config.js文件头部区域，添加：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>)</span><br><span class="line"><span class="keyword">const</span> htmlPlugin = <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">    template: <span class="string">'./src/index.html'</span>,</span><br><span class="line">    filename: <span class="string">'index.html'</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode: <span class="string">'development'</span>,</span><br><span class="line">    entry: path.join(__dirname,<span class="string">'./src/index.js'</span>),<span class="comment">//输入文件地址</span></span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.join(__dirname, <span class="string">'./dist'</span>),<span class="comment">//输出文件地址</span></span><br><span class="line">        filename: <span class="string">'bundle.js'</span><span class="comment">//输出文件名称</span></span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [htmlPlugin]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="配置打包完自动打开浏览器"><a href="#配置打包完自动打开浏览器" class="headerlink" title="配置打包完自动打开浏览器"></a>配置打包完自动打开浏览器</h1><img src="https://s1.ax1x.com/2020/08/31/dOa1aD.png" alt="dOa1aD.png" border="0" /><h1 id="打包处理css-less-scss文件"><a href="#打包处理css-less-scss文件" class="headerlink" title="打包处理css,less,scss文件"></a>打包处理css,less,scss文件</h1><ol><li>运行<code>npm i style-loader css-loader -D</code><br> <code>npm i less-loader less -D</code><br> <code>npm i sass-loader node-sass -D</code></li><li>在webpack.config.js的module -&gt; rules数组中，添加loader规则如下：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>)</span><br><span class="line"><span class="keyword">const</span> htmlPlugin = <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">    template: <span class="string">'./src/index.html'</span>,</span><br><span class="line">    filename: <span class="string">'index.html'</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode: <span class="string">'development'</span>,</span><br><span class="line">    entry: path.join(__dirname,<span class="string">'./src/index.js'</span>),<span class="comment">//输入文件地址</span></span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.join(__dirname, <span class="string">'./dist'</span>),<span class="comment">//输出文件地址</span></span><br><span class="line">        filename: <span class="string">'bundle.js'</span><span class="comment">//输出文件名称</span></span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [htmlPlugin],</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;<span class="attr">test</span>: <span class="regexp">/\.css$/</span>,<span class="attr">use</span>: [<span class="string">'style-loader'</span>,<span class="string">'css-loader'</span>]&#125;,</span><br><span class="line">&#123;<span class="attr">test</span>: <span class="regexp">/\.less$/</span>,<span class="attr">use</span>: [<span class="string">'style-loader'</span>,<span class="string">'css-loader'</span>,<span class="string">'less-loader'</span>]&#125;,</span><br><span class="line">&#123;<span class="attr">test</span>: <span class="regexp">/\.scss$/</span>,<span class="attr">use</span>: [<span class="string">'style-loader'</span>,<span class="string">'css-loader'</span>,<span class="string">'sass-loader'</span>]&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="配置postCSS自动添加css的兼容前缀"><a href="#配置postCSS自动添加css的兼容前缀" class="headerlink" title="配置postCSS自动添加css的兼容前缀"></a>配置postCSS自动添加css的兼容前缀</h1><img src="https://s1.ax1x.com/2020/08/31/dOWPUA.png" alt="dOWPUA.png" border="0" /><h1 id="打包样式表中的图片和字体文件"><a href="#打包样式表中的图片和字体文件" class="headerlink" title="打包样式表中的图片和字体文件"></a>打包样式表中的图片和字体文件</h1><img src="https://s1.ax1x.com/2020/08/31/dO4Egx.png" alt="dO4Egx.png" border="0" /><h1 id="打包处理js文件中的高级语法"><a href="#打包处理js文件中的高级语法" class="headerlink" title="打包处理js文件中的高级语法"></a>打包处理js文件中的高级语法</h1><img src="https://s1.ax1x.com/2020/08/31/dOI1jP.png" alt="dOI1jP.png" border="0" /><h1 id="配置vue加载器"><a href="#配置vue加载器" class="headerlink" title="配置vue加载器"></a>配置vue加载器</h1><img src="https://s1.ax1x.com/2020/09/01/dv86wF.png" alt="dv86wF.png" border="0" /><h1 id="在webpack项目中使用vue"><a href="#在webpack项目中使用vue" class="headerlink" title="在webpack项目中使用vue"></a>在webpack项目中使用vue</h1><img src="https://s1.ax1x.com/2020/09/01/dvJeCd.png" alt="dvJeCd.png" border="0" />]]></content>
      
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础（四）-Vue前端交互</title>
      <link href="/lizibin1999.github.io/article/215bb16f.html"/>
      <url>/lizibin1999.github.io/article/215bb16f.html</url>
      
        <content type="html"><![CDATA[<h1 id="Promise用法"><a href="#Promise用法" class="headerlink" title="Promise用法"></a>Promise用法</h1><h2 id="Promise概述"><a href="#Promise概述" class="headerlink" title="Promise概述"></a>Promise概述</h2><p>Promise是异步编程的一种解决方案，从语法上讲，Promise是一个对象，从它可以获取异步操作的消息。<br>使用Promise主要有以下好处:</p><ul><li>可以避免多层异步调用嵌套问题(回调地狱)</li><li>Promise对象提供了简洁的API，使得控制异步操作更加容易</li></ul><hr><h2 id="Promise基本用法"><a href="#Promise基本用法" class="headerlink" title="Promise基本用法"></a>Promise基本用法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    Promise基本使用</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="comment">// console.log(typeof Promise)</span></span><br><span class="line">  <span class="comment">// console.dir(Promise);</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 这里用于实现异步任务</span></span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> flag = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">if</span>(flag) &#123;</span><br><span class="line">        <span class="comment">// 正常情况</span></span><br><span class="line">        resolve(<span class="string">'hello'</span>);</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// 异常情况</span></span><br><span class="line">        reject(<span class="string">'出错了'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">100</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  p.then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">  &#125;,<span class="function"><span class="keyword">function</span>(<span class="params">info</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(info)</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Promise常用的API"><a href="#Promise常用的API" class="headerlink" title="Promise常用的API"></a>Promise常用的API</h2><p>1.实例方法<br>p.then()得到异步任务的正确结果<br>p.catch()获取异常信息<br>p.finally()成功与否都会执行(尚且不是正式标准)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">queryData ()</span><br><span class="line">.then ( <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log (data) ;</span><br><span class="line">&#125;)</span><br><span class="line">.catch (<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data) ;</span><br><span class="line">&#125;)</span><br><span class="line">.finally(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log ( <span class="string">'finished'</span> ) ;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.对象方法<br>Promise.all()并发处理多个异步任务，所有任务都执行完成才能得到结果<br>Promise.race()并发处理多个异步任务，只要有一个任务完成就能得到结果</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.all([p1,p2,p3]).then ( <span class="function">(<span class="params">result</span>)=&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log (result)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">Promise</span>.race( [p1,p2,p3]).then ( (result)=→&gt;&#123;</span><br><span class="line">  <span class="built_in">console</span>.log (result)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><hr><h1 id="fetch-api"><a href="#fetch-api" class="headerlink" title="fetch api"></a>fetch api</h1><h2 id="基本特性"><a href="#基本特性" class="headerlink" title="基本特性"></a>基本特性</h2><p>更加简单的数据获取方式，功能更强大、更灵活，可以看做是xhr的升级版<br>基于Promise实现</p><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fetch(<span class="string">'http://localhost:3000/a'</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//text()方法属于fetchAPI的一部分，返回一个promise实例对象，用于接收后台返回的数据</span></span><br><span class="line">  <span class="keyword">return</span> data.text();</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="fetch请求参数"><a href="#fetch请求参数" class="headerlink" title="fetch请求参数"></a>fetch请求参数</h2><ol><li>Get和delete方式是一样的，传统的url采用url?id=1的方式</li></ol><ul><li>传统的url传参，服务器端用req.query.id接收</li><li>restful格式的url传参，服务器用req.params.id接收<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//restful形式的url</span></span><br><span class="line">fetch(<span class="string">'http://localhost:3000/user/123'</span>,&#123;</span><br><span class="line">  method: <span class="string">'delete'</span><span class="comment">//或者get</span></span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> data.text();</span><br><span class="line">&#125;).then(<span class="function"><span class="params">ret</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//这里才是得到的数据</span></span><br><span class="line">  <span class="built_in">console</span>.log(ret);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>post请求方式的参数传递</li></ol><ul><li>服务器端用中间件body-parser接收</li><li>req.body.uname</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//restful形式的url</span></span><br><span class="line">fetch(<span class="string">'http://localhost:3000/user'</span>,&#123;</span><br><span class="line">  method: <span class="string">'post'</span>,</span><br><span class="line">  body: <span class="string">'uname=list&amp;pwd=123'</span>,<span class="comment">//传递数据</span></span><br><span class="line">  headers: &#123;</span><br><span class="line">    <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> data.text();</span><br><span class="line">&#125;).then(<span class="function"><span class="params">ret</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//这里才是得到的数据</span></span><br><span class="line">  <span class="built_in">console</span>.log(ret);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="3"><li>post请求方式传递json数据</li></ol><ul><li><p>app.use(bodyParser.json());//提供服务器端接收json的支持</p></li><li><p>app.use(bodyParser.urlencoded({ extended: false }));</p></li><li><p>服务器端用中间件body-parser接收</p></li><li><p>req.body.uname</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//restful形式的url</span></span><br><span class="line">fetch(<span class="string">'http://localhost:3000/user'</span>,&#123;</span><br><span class="line">  method: <span class="string">'post'</span>,</span><br><span class="line">  body: <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">    uname: <span class="string">'张三'</span>,</span><br><span class="line">    pwd: <span class="string">'456'</span></span><br><span class="line">  &#125;)</span><br><span class="line">  headers: &#123;</span><br><span class="line">    <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> data.text();</span><br><span class="line">&#125;).then(<span class="function"><span class="params">ret</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//这里才是得到的数据</span></span><br><span class="line">  <span class="built_in">console</span>.log(ret);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="4"><li>put请求方式的参数传递</li></ol><ul><li>put与post类似也支持json和普通形式</li></ul><h2 id="fetch响应结果"><a href="#fetch响应结果" class="headerlink" title="fetch响应结果"></a>fetch响应结果</h2><ul><li>text() 将返回体处理成字符串类型</li><li>json() 返回结果和JSON.parse(responseText)一样</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fetch(<span class="string">'/abc'</span>). then(<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> data.json();</span><br><span class="line">&#125;).then(<span class="function"><span class="params">ret</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(ret.uname);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>服务器端：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/abc'</span>,(req,res)=&gt;&#123;</span><br><span class="line">  res.json(&#123;</span><br><span class="line">    uname: <span class="string">'aa'</span>,</span><br><span class="line">    age: <span class="number">189</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><hr><h1 id="axios-API"><a href="#axios-API" class="headerlink" title="axios API"></a>axios API</h1><h2 id="axios基本特性"><a href="#axios基本特性" class="headerlink" title="axios基本特性"></a>axios基本特性</h2><p>axios(官网: <a href="https://github.com/axios/axios)是一个基于Promise用于浏览器和node.js的HTTP客户端。">https://github.com/axios/axios)是一个基于Promise用于浏览器和node.js的HTTP客户端。</a><br>它具有以下特征:</p><ul><li>支持浏览器和node.js</li><li>支持promise</li><li>能拦截请求和响应</li><li>自动转换JSON数据</li></ul><h2 id="axios-基本用法"><a href="#axios-基本用法" class="headerlink" title="axios 基本用法"></a>axios 基本用法</h2><ul><li>需要因外部js的方式引入<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">axios.get(<span class="string">'/data'</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">ret</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(ret.data)</span><br><span class="line">  <span class="comment">//data属性名称是固定的</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h2 id="axios-常用api"><a href="#axios-常用api" class="headerlink" title="axios 常用api"></a>axios 常用api</h2><p>服务器接收方式：</p><ul><li>?id=123   req.query.id</li><li>/123 restful方式  app.get(‘/:id’)    req.params.id</li><li>parmas  req.query.id</li></ul><ol><li>get方式<img src="https://s1.ax1x.com/2020/08/28/dIVpzF.png" alt="dIVpzF.png" border="0" /></li></ol><ol start="2"><li>delete方式</li></ol><p><a href="https://imgchr.com/i/dIV3dI" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/08/28/dIV3dI.png" alt="dIV3dI.png" border="0" /></a></p><ol start="3"><li>post</li></ol><p>json形式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">axios.post(<span class="string">'url'</span>,&#123;</span><br><span class="line">  uname: <span class="string">''</span>,</span><br><span class="line">  pwd: <span class="number">456</span></span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">ret</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(ret.data);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>另一种：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> params = <span class="keyword">new</span> URLSearchParams();</span><br><span class="line">params.append( <span class="string">'uname'</span>, <span class="string">'zhangsan'</span>);</span><br><span class="line">params.append( <span class="string">'pwd'</span>,<span class="string">'111'</span>);</span><br><span class="line">axios.post(<span class="string">'http://localhost:3000/axios'</span>, params).then(<span class="function"><span class="keyword">function</span>(<span class="params">ret</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(ret.data)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>put</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">axios.put(<span class="string">'url/123'</span>,&#123;</span><br><span class="line">  uname: <span class="string">'张三'</span>,</span><br><span class="line">  pwd: <span class="number">456</span></span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">ret</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(ret.data);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><hr><h2 id="axios的响应结果"><a href="#axios的响应结果" class="headerlink" title="axios的响应结果"></a>axios的响应结果</h2><ul><li>data :实际响应回来的数据</li><li>headers :响应头信息</li><li>status :响应状态码</li><li>statusText :响应状态信息</li></ul><h2 id="axios全局配置"><a href="#axios全局配置" class="headerlink" title="axios全局配置"></a>axios全局配置</h2><ol><li>axios.defaults.timeout = 3000;//超时时间</li><li>axios.defaults.baseURL = ‘<a href="http://localhost:3000/app&#39;;//默认地址" target="_blank" rel="noopener">http://localhost:3000/app&#39;;//默认地址</a></li><li>axios.defaults.headers[‘mytoken’]= ‘aqwerwqwerqwer2ewrwe23eresdf23’//设置请求头</li></ol><h2 id="axios拦截器"><a href="#axios拦截器" class="headerlink" title="axios拦截器"></a>axios拦截器</h2><p><strong>请求拦截器</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">axios.interceptors.request.use(<span class="function"><span class="keyword">function</span>(<span class="params">config</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//在请求发出前进行一些信息的设置</span></span><br><span class="line">  <span class="keyword">return</span> config;</span><br><span class="line">&#125;),<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//错误处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>响应拦截器</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">axios.interceptors.response.use(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//在这里对返回的数据进行处理</span></span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;),<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//处理响应的错误信息</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="async-await"><a href="#async-await" class="headerlink" title="async/await"></a>async/await</h2><ul><li>async/await是ES7引入的新语法，可以更加方便的进行异步操作</li><li>async关键字用于函数上(async函数的返回值是Promise实例对象)</li><li>await关键字用于async函数当中(await可以得到异步的结果)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">queryData</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> ret = <span class="keyword">await</span> axios.get(<span class="string">'adata'</span>);</span><br><span class="line">  <span class="keyword">return</span> ret.data;</span><br><span class="line">&#125;</span><br><span class="line">queryData().then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue前端交互 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语四级考前突击大法</title>
      <link href="/lizibin1999.github.io/article/4a9b2b87.html"/>
      <url>/lizibin1999.github.io/article/4a9b2b87.html</url>
      
        <content type="html"><![CDATA[<h1 id="英语四级考前突击大法"><a href="#英语四级考前突击大法" class="headerlink" title="英语四级考前突击大法"></a>英语四级考前突击大法</h1><p><strong>9.17号考四级，慌的一批，可能是最后一次了，淦！</strong></p><img src="https://s1.ax1x.com/2020/08/21/dYIr6S.png" alt="dYIr6S.png" border="0" /><h2 id="作文替代词汇"><a href="#作文替代词汇" class="headerlink" title="作文替代词汇"></a>作文替代词汇</h2><p>1) 大多数人 most people® the majority of the population<br>2) 我相信 I believe® from my standpoint, from my perspective<br>         I believe most people… → from my perspective, the majority of the population…<br>3) 经常 often®frequently<br>4) 必须 must® it is a must for us to…<br>5) 知道 know® be aware of<br>6) 因为 because®in that<br>7) 最后 at last®eventually<br>8) 然而 but®however<br>9) 如果 if®provided that<br>10) 各行各业的人 all kinds of people®people from all walks of life<br>11) 引起，导致 lead to→contribute to<br>12) 人 people→individuals<br>13) 好的 good→desirable, beneficial<br>14) 坏的 bad→undesirable<br>15) 很多many→ numerous<br>16) 越来越 more and more→ a(n) increasing/mounting number of<br>17) 很 very→extremely<br>18) 方面 side→aspects<br>19) 表明 show→demonstrate, indicate<br>20) 利用 use→utilize<br>21) 因此/结果 so→therefore<br>22) 部分 part→proportion<br>23) 提高 improve→enhance<br>24) 改变 change→transform<br>25) 强调/重视 emphasize→ attach great importance to<br>26) 培养 develop→cultivate<br>27) 破坏 destroy→undermine<br>28) 解决 deal with →tackle /figure out<br>29) 普遍的 everywhere→universal<br>30) 明显的 obvious→apparent</p><hr><h2 id="作文万能句"><a href="#作文万能句" class="headerlink" title="作文万能句"></a>作文万能句</h2><p>一、常见开头</p><hr><ol><li>It is well-known to us that…… （我们都知道 …… ） ==As far as my knowledge is concerned, … （   就我所知 … ）</li></ol><ol start="2"><li>Recently the problem of…… has been brought into focus. ==Nowadays there is a growing concern over …… （最近 …… 问题引起了关注）</li></ol><ol start="3"><li>Nowadays （ overpopulation ） has become a problem we have to face. （现今，人口过剩已成为我们不得不面对的问题）</li></ol><ol start="4"><li>Internet has been playing an increasingly important role in our day-to-day life. It has brought a lot of benefits but has created some serious problems as well. （互联网已在我们的生活扮演着越来越重要的角色，它给我们带来了许多好处但也产生了一些严重的问题）</li></ol><ol start="5"><li>With the rapid development of science and technology ， more and more people believe that…… （随着科技的迅速发展，越来越多的人认为 …… ）</li></ol><ol start="6"><li>It is a common belief that……==It is commonly believed that…… （人们一般认为 …… ）</li></ol><hr><p>二、阐述观点</p><ol><li>People’s views on……vary from person to person. Some hold that……However, others believe that…… （人们对 …… 的观点因人而异，有些人认为 …… 然而其他人却认为 …… ）</li></ol><ol start="2"><li>People may have different opinions on…… （人们对 …… 可能会持有不同见解）</li></ol><ol start="3"><li>Attitudes towards  （ drugs ） vary from person to person.==Different people hold different attitudes towards （ failure ）（人们对待吸毒的态度因人而异）</li></ol><ol start="4"><li>There are different opinions among people as to…… （对于 …… 人们的观点大不相同）</li></ol><hr><p>三、结束语</p><ol><li>In short, it can be said that…… （总之，他的意思是 …… ）</li></ol><ol start="2"><li>From what has been mentioned above, we can come to the conclusion that…… （从上面提到的，我们可以得出结论 …… ）</li></ol><ol start="3"><li>Taking all these factors into consideration, we naturally/reasonably come to the conclusion that…… （把所有的这些因素加以考虑，我们自然可以得出结论 …… ）</li></ol><ol start="4"><li>Hence/Therefore, we’d better come to the conclusion that…… （因此，我们最好的出这样的结论 …… ）</li></ol><ol start="5"><li>There is no doubt that (job-hopping)has its drawbacks as well as merits. （毫无疑问，跳槽有优点也有缺点）</li></ol><ol start="6"><li>All in all, we cannot live without……,but at the same time we must try to find out new ways to cope with the problems that would arise. （总之，我们没有 …… 无法生活，但同时我们必须寻求新的解决办法来面对可能出现的新问题）</li></ol><p>四、提出建议</p><ol><li>It is high time that we put an end to the (trend). （该是我们停止这一趋势的时候了）</li></ol><ol start="2"><li>There is no doubt that enough concern must be paid to the problem of…… （毫无疑问，对 …… 问题应予以足够重视）</li></ol><ol start="3"><li>Obviously ,if we want to do something … it is essential that…… （显然，如果我们 想要做么事，很重要的是 …… ）</li></ol><ol start="4"><li>Only in this way can we …… （只有这样，我们才能 …… ）</li></ol><ol start="5"><li>Spare no effort to + V  （不遗余力的）</li></ol><p>五、推测后果</p><ol><li>Obviously ， if we don’t control the problem, the chances are that……will lead us in danger. （很明显，如果我们不能控制这一问题，很有可能我们会陷入危险）</li></ol><ol start="2"><li>No doubt, unless we take effective measures, it is very likely that …… （毫无疑问，除非我们采取有效措施，否则我们很可能会 …… ）</li></ol><ol start="3"><li>It is urgent that immediate measures should be taken to stop the situation （很紧迫的是应立即采取措施阻止这一事态的发展）</li></ol><p>六、表示论证</p><ol><li>From my point of view, it is more reasonable to support the first opinion rather than the second.( 在我看来，支持第一种观点比第二种更有道理 )</li></ol><ol start="2"><li>I cannot entirely agree with the idea that…… （我无法完全同意这一观点）</li></ol><ol start="3"><li>As far as I am concerned/In my opinion,…… （就我来说 …… ）</li></ol><ol start="4"><li>I sincerely believe that……==I am greatly convinced (that) 子句 . （我真诚地相信 …… ）</li></ol><ol start="5"><li>Finally, to speak frankly, there is also a more practical reason why …… （最后，坦率地说，还有另外一个实际的原因 …… ）</li></ol><p>七、给出原因</p><ol><li>The reason why +  句子  <del>~</del> is that +  句子   （ … 的原因是 … ）  </li></ol><ol start="2"><li>This phenomenon exists for a number of reasons .First,…….Second,…….Third ， …… 。这一现象存在有很多原因的，第一 …… 第二 …… 第三 ……</li></ol><ol start="3"><li>For one thing,…… For another thing ， …… ==On the one hand,……On the other hand…… 一方面 …… 另一方面 ……</li></ol><ol start="4"><li>I quite agree with the statement that……The reasons are chiefly as follows. 我十分赞同这一论述，即 …… 。其主要原因如下。</li></ol><p>八、列出解决办法和批判错误观点做法</p><ol><li>The best way to solve the troubles is…… 解决这些麻烦的最好办法是 ……</li></ol><ol start="2"><li>As far as something is concerned,…… 就某事而言， ……</li></ol><ol start="3"><li>It is obvious that…… 很显然 ……</li></ol><ol start="4"><li>It may be true that……but it doesn’t mean that…… 可能 …… 是对的，但这并不意味着 ……</li></ol><ol start="5"><li>It is natural to believe that……but we shouldn’t ignore that…… 认为 …… 是自然的，但我们不应忽视 ……</li></ol><ol start="6"><li>There is no evidence to suggest that…… 没有证据表明 ……</li></ol><p>九、表示好处和坏处</p><ol><li>It has the following advantages. 它有如下优势</li></ol><ol start="2"><li>It is beneficial/harmful to us.==It is of great benefit/harm to us. 它对我们有益处</li></ol><ol start="3"><li>It has more disadvantages than advantage. 他有很多不足之处</li></ol><p>十、表示重要、方便、可能</p><ol><li>It is important(necessary/difficult/convenient/possible)for sb to do sth. 对于某人做 …… 是 ……</li></ol><ol start="2"><li>It plays an important role in our life.</li></ol><p>十一、采取措施</p><ol><li>We should take some effective measures. 我们应该采取有效措施</li></ol><ol start="2"><li>We should try our best to overcome/conquer the difficulties. 我们应该尽最大努力去克服困难</li></ol><ol start="3"><li>We should do our utmost in doing sth. 我们应该尽力去做 ……</li></ol><ol start="4"><li>We should solve the problems that we are confronted/faced with. 我们应该解决我们面临的困难</li></ol><p>十二、显示变化</p><ol><li>Some changes have taken place in the past five years. 过去五年发生了很多变化</li></ol><ol start="2"><li>Great changes will certainly be produced in the international communications. 在国际交流中理所当然会发生很多大的变化</li></ol><ol start="3"><li>It has increased/decreased from…to… 他已经从 … 增加 / 减少到 …</li></ol><ol start="4"><li>The output of July in this factory increased by 15%. 这个工厂 7 月份产量以增加了 15%</li></ol><p>十三、表明事实现状</p><ol><li>We cannot ignore the fact that…… 我们不能忽略这个事实 ……</li></ol><ol start="2"><li>No one can deny the fact that…… 没人能否认这个事实 ……</li></ol><ol start="3"><li>This is a phenomenon that many people are interested in.</li></ol><ol start="4"><li>be closely related to ~~  （与 … 息息相关）  </li></ol><p>十四、进行比较</p><ol><li>Compared with A,B…… 与 A 比较， B……</li></ol><ol start="2"><li>I prefer to read rather than watch TV.</li></ol><p>十五、常用英语谚语</p><ol><li>Actions speak louder than words. 事实胜于雄辩</li></ol><ol start="2"><li>All is not gold that glitters. 发光的未必都是金子</li></ol><ol start="3"><li>All roads lead to Rome. 条条大路通罗马</li></ol><ol start="4"><li>A good beginning is half done. 良好的开端是成功的一半</li></ol><ol start="5"><li>Every advantage has its disadvantage 有利必有弊</li></ol><ol start="6"><li>A miss is as good as a mile. 失之毫厘，差之千里</li></ol><ol start="7"><li>Failure is the mother of success. 失败是成功之母</li></ol><ol start="8"><li>Industry is the parent of success. 勤奋是成功之母</li></ol><ol start="9"><li>It is never too old to learn. 活到老，学到老</li></ol><ol start="10"><li>Knowledge is power. 知识就是力量</li></ol><ol start="11"><li>Nothing in the world is difficult for one who sets his mind to it. 世上无难事，只怕有心人</li></ol>]]></content>
      
      
      <categories>
          
          <category> Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语四级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Express框架</title>
      <link href="/lizibin1999.github.io/article/4d62b629.html"/>
      <url>/lizibin1999.github.io/article/4d62b629.html</url>
      
        <content type="html"><![CDATA[<h1 id="Express框架"><a href="#Express框架" class="headerlink" title="Express框架"></a>Express框架</h1><h2 id="Express框架是什么"><a href="#Express框架是什么" class="headerlink" title="Express框架是什么"></a>Express框架是什么</h2><ul><li>Express是一个基于Node平台的web应用开发框架，它提供了一系列的强大特性，帮助你创建各种Web应用。<br>我们可以使用<code>npm install express</code>命令进行下载。</li></ul><hr><h2 id="Express框架特性"><a href="#Express框架特性" class="headerlink" title="Express框架特性"></a>Express框架特性</h2><ul><li>提供了方便简洁的路由定义方式</li><li>对获取HTTP请求参数进行了简化处理</li><li>对模板引擎支持程度高，方便渲染动态HTML页面</li><li>提供了中间件机制有效控制HTTP请求</li><li>拥有大量第三方中间件对功能进行扩展</li></ul><hr><h2 id="基本模板"><a href="#基本模板" class="headerlink" title="基本模板"></a>基本模板</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="comment">//创建网站服务器</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, (req,res)=&gt;&#123;</span><br><span class="line"><span class="comment">//send()</span></span><br><span class="line"><span class="comment">//send方法内部会检测响应内容的类型</span></span><br><span class="line"><span class="comment">//send方法会自动设置HTTP状态码</span></span><br><span class="line"><span class="comment">//send方法会帮我们自动设置响应的内容类型及编码</span></span><br><span class="line">res.send(<span class="string">'hello.express'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//监听端口</span></span><br><span class="line">app.listen(<span class="number">3000</span></span><br></pre></td></tr></table></figure><hr><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><ul><li>中间件就是一堆方法， 可以接收客户端发来的请求、可以对请求做出响应，也可以将请求继续交给下一一个中间件继续处理。</li><li>可以针对同-一个请求设置多个中间件，对同一个请求进行多次处理。</li><li>默认情况下，请求从上到下依次匹配中间件，一旦匹配成功， 终止匹配。</li><li>可以调用<strong>next</strong>方法将请求的控制权交给下一一个中间件，直到遇到结束请求的中间件。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'request'</span>, (req,res, next) =&gt; &#123;</span><br><span class="line">    req.name = <span class="string">'张三'</span>;</span><br><span class="line">&#125;);</span><br><span class="line">app.get(<span class="string">'request'</span>, (req,res) =&gt; &#123;</span><br><span class="line">    req.send(req.name);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><h2 id="app-ues中间件用法"><a href="#app-ues中间件用法" class="headerlink" title="app.ues中间件用法"></a>app.ues中间件用法</h2><ul><li>app.use匹配所有的请求方式，可以直接传入请求处理函数,代表接收所有的请求。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="function">(<span class="params">req,res,next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.url);</span><br><span class="line">    next();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>app.use第-一个参数也可以传入请求地址，代表不论什么请求方式，只要是这个请求地址就接收这个请求。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="string">'/admin'</span>,(req,res,next)=&gt;&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.url);</span><br><span class="line">    next();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><h2 id="中间件应用"><a href="#中间件应用" class="headerlink" title="中间件应用"></a>中间件应用</h2><ol><li><p>路由保护, 客户端在访问需要登录的页面时，可以先使用中间件判断用户登录状态，用户如果未登录，则拦截请求，直接响应，禁止用户进入需要登录的页面。</p></li><li><p>网站维护公告, 在所有路由的最上面定义接收所有请求的中间件，直接为客户端做出响应,网站正在维护中。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.ues(<span class="function">(<span class="params">req,res,next</span>) =&gt;</span> &#123;</span><br><span class="line">    res.end(<span class="string">'当前网站正在维护'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>自定义404页面 </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//写在所有路由最后</span></span><br><span class="line">app.use(<span class="function">(<span class="params">req,res,next</span>) =&gt;</span> &#123;</span><br><span class="line">    res.status(<span class="number">404</span>).send(<span class="string">'当前访问的页面是不存在的'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="错误处理中间件"><a href="#错误处理中间件" class="headerlink" title="错误处理中间件"></a>错误处理中间件</h2></li></ol><ul><li>在程序执行的过程中，可避免的会出现一些无法预料的错误，比如文件读取失败，数据库连接失败。<br>错误处理中间件是一个集中处理错误的地方。</li></ul><p><strong>同步</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="function">(<span class="params">err, req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    res.status (<span class="number">500</span>) .send(<span class="string">'err.message'</span>) ;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>异步</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="comment">//创建网站服务器</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/index'</span>, (req,res,next)=&gt;&#123;</span><br><span class="line">fs.readFile(<span class="string">'./demo.text'</span>,<span class="string">'utf8'</span>,(err,result) =&gt; &#123;</span><br><span class="line"><span class="keyword">if</span>(err != <span class="literal">null</span>)&#123;</span><br><span class="line">next(err);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">res.send(result);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">app.use(<span class="function">(<span class="params">err, req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    res.status (<span class="number">500</span>) .send(err.message) ;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//监听端口</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'网站服务器启动成功'</span>);</span><br></pre></td></tr></table></figure><hr><h2 id="捕获错误"><a href="#捕获错误" class="headerlink" title="捕获错误"></a>捕获错误</h2><p>-在node.js中，异步API的错误信息都是通过回调函数获取的，支持Promise对象的异步API发生错误可以通过catch方法捕获。异步函数执行如果发生错误要如何捕获错误呢?</p><ul><li>try catch可以捕获异步函数以及其他同步代码在执行过程中发生的错误，但是不能其他类型的API发生的错误。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> promisify = <span class="built_in">require</span>(<span class="string">'util'</span>).promisify;</span><br><span class="line"><span class="keyword">const</span> readFile = promisify(fs.readFile);</span><br><span class="line"><span class="comment">//创建网站服务器</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/index'</span>, <span class="keyword">async</span> (req,res,next)=&gt;&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">await</span> readFile(<span class="string">'./aaa.js'</span>)</span><br><span class="line">&#125;<span class="keyword">catch</span> (ex) &#123;</span><br><span class="line">next(ex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line">app.use(<span class="function">(<span class="params">err, req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">     res.status (<span class="number">500</span>) .send(err.message) ;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//监听端口</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'网站服务器启动成功'</span>);</span><br></pre></td></tr></table></figure><hr><h2 id="构建模块化路由"><a href="#构建模块化路由" class="headerlink" title="构建模块化路由"></a>构建模块化路由</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建路由对象</span></span><br><span class="line"><span class="keyword">const</span> home = express.Router();</span><br><span class="line"><span class="comment">//为路由对象匹配请求路径</span></span><br><span class="line">app.use(<span class="string">'/home'</span>,home);</span><br><span class="line"><span class="comment">//创建二级路由</span></span><br><span class="line">home.get(<span class="string">'/index'</span>,(req,res)=&gt;&#123;</span><br><span class="line">res.send(<span class="string">'欢迎来到首页'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//监听端口</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'网站服务器启动成功'</span>);</span><br></pre></td></tr></table></figure><hr><p><strong>模块化路由引入方法</strong></p><img src="https://s1.ax1x.com/2020/08/20/d8RwND.png" alt="d8RwND.png" border="0" />*************<h2 id="GET参数的获取"><a href="#GET参数的获取" class="headerlink" title="GET参数的获取"></a>GET参数的获取</h2><ul><li>Express框架中使用<code>req.query</code>即可获取GET参数，框架内部会将GET参数转换为对象并返回。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接收地址栏中问号后面的参数</span></span><br><span class="line"><span class="comment">//例如: http://localhost:3000/?name=zhanqsan&amp;age=30</span></span><br><span class="line">app.get(<span class="string">'/'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>. log (req.query); <span class="comment">// &#123;"name": "zhangsan", "age": "30"&#125;</span></span><br><span class="line">&#125;) ;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="post参数的获取"><a href="#post参数的获取" class="headerlink" title="post参数的获取"></a>post参数的获取</h2><p><strong>需下载第三方模块：</strong>Express中接收post请求参数需要借助第三方包<code>body-parser</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>( <span class="string">'express '</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>( <span class="string">' body-parser'</span> );</span><br><span class="line"><span class="comment">//创建网站服务器</span></span><br><span class="line"><span class="keyword">const</span> app = express() ;</span><br><span class="line"><span class="comment">//拦截所有请求</span></span><br><span class="line"><span class="comment">// extended: false 方法内部使用querystring模块处理请求参数的格式</span></span><br><span class="line"><span class="comment">// extended: true 方法内部使用第三方模块qs处理请求参数的格式</span></span><br><span class="line">app.use(bodyParser.urlencoded(&#123;<span class="attr">extended</span>: <span class="literal">false</span>&#125;))</span><br><span class="line">app.post( <span class="string">'/add'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    <span class="comment">//接收post请求参数</span></span><br><span class="line">    res.send(req.body)</span><br><span class="line">&#125;)</span><br><span class="line">I</span><br><span class="line"><span class="comment">//端口监听</span></span><br><span class="line">app.listen( <span class="number">3000</span>);</span><br></pre></td></tr></table></figure><hr><h2 id="Express路由参数"><a href="#Express路由参数" class="headerlink" title="Express路由参数"></a>Express路由参数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/find/:id/:name'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log (req.params) ; <span class="comment">// &#123;id: 123 name:lizibin&#125;</span></span><br><span class="line">&#125;);</span><br><span class="line">localhost:<span class="number">3000</span>/find/<span class="number">123</span>/lizibin</span><br></pre></td></tr></table></figure><h2 id="静态资源访问"><a href="#静态资源访问" class="headerlink" title="静态资源访问"></a>静态资源访问</h2><ul><li>通过Express内置的express.static可以方便地托管静态文件，例如img、CSS、JavaScript 文件等。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">' express '</span> ) ;</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="comment">//实现静态资源访问功能</span></span><br><span class="line"></span><br><span class="line">app.use(express.static(path.join(_ dirname, <span class="string">'public'</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">//app.use(express.static('sss',path.join(_ dirname, 'public')))</span></span><br><span class="line"><span class="comment">//端口监听</span></span><br><span class="line">app . listen( <span class="number">3000</span>);</span><br><span class="line"><span class="comment">//localhost:3000/css/</span></span><br></pre></td></tr></table></figure><hr><h2 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h2><ul><li>为了使art-template模板弓|擎能够更好的和Express框架配合,模板引擎官方在原art-template模板引擎的基础上封装了express- art- template。</li><li>使用<code>npm install art-template express-art-template</code>命令进行安装。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.告诉express框架使用什么模板引擎渲染什么后缀的模板文件</span></span><br><span class="line"><span class="comment">//1.模板后缀</span></span><br><span class="line"><span class="comment">//2.使用的模板引擎</span></span><br><span class="line">app.engine(<span class="string">'art'</span>,<span class="built_in">require</span>(<span class="string">'express-art-template'</span>))</span><br><span class="line"><span class="comment">//2.告诉express框架模板存放的位置是什么</span></span><br><span class="line">app.set(<span class="string">'views'</span>,path.join(__dirname,<span class="string">'views'</span>))</span><br><span class="line"><span class="comment">//3.告诉express框架模板的默认后缀是什么</span></span><br><span class="line">app.set(<span class="string">'view engine'</span>,<span class="string">'art'</span>);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/index'</span>,(req, res) =&gt; &#123;</span><br><span class="line"><span class="comment">//1.拼接模板路径</span></span><br><span class="line"><span class="comment">//2.拼接模板后缀</span></span><br><span class="line"><span class="comment">//3.哪一个模板和哪一个数据进行拼接</span></span><br><span class="line"><span class="comment">//4.将拼接结果响应给了客户端</span></span><br><span class="line"></span><br><span class="line">res.render(<span class="string">'index'</span>,&#123;</span><br><span class="line">msg: <span class="string">'message'</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//监听端口</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'网站服务器启动成功'</span>);</span><br></pre></td></tr></table></figure><hr><h2 id="app-locals对象"><a href="#app-locals对象" class="headerlink" title="app.locals对象"></a>app.locals对象</h2><ul><li>将变量设置到app.locals对象下面，这个数据在所有的模板中都可以获取到。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.locals.users = [&#123;</span><br><span class="line">    name :<span class="string">'张三'</span>,</span><br><span class="line">    age: <span class="number">20</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">    name: <span class="string">'李四'</span> ,</span><br><span class="line">    age: <span class="number">20</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前后端交互Ajax（下）</title>
      <link href="/lizibin1999.github.io/article/cc6a3845.html"/>
      <url>/lizibin1999.github.io/article/cc6a3845.html</url>
      
        <content type="html"><![CDATA[<h1 id="前后端交互Ajax（下）"><a href="#前后端交互Ajax（下）" class="headerlink" title="前后端交互Ajax（下）"></a>前后端交互Ajax（下）</h1><h2 id="使用JSONP解决同源限制问题"><a href="#使用JSONP解决同源限制问题" class="headerlink" title="使用JSONP解决同源限制问题"></a>使用JSONP解决同源限制问题</h2><p>jsonp是json with padding 的缩写，它不属于Ajax请求，但它可以模拟Ajax请求。</p><ol><li>将不同源的服务器端请求地址写在script标签的src属性中<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"www . example.com"</span> &gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="https: /</span> <span class="regexp">/ cdn .bootcss.com/</span>jquery/<span class="number">3.3</span><span class="number">.1</span>/jquery.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li>服务器端响应数据必须是一个函数的调用，真正要发送给客户端的数据需要作为函数调用的参数。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> data = <span class="string">'fn(&#123;name:"张三",age: "20"&#125;)'</span>;</span><br><span class="line">res.send(data);</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li>在客户端全局作用域下定义函数fn 定义在script标签前<br><code>function fn (data) { }</code></li></ol><ol start="4"><li>在fn函数内部对服务器端返回的数据进行处理<br><code>function fn (data) { console.log (data) ; }</code></li></ol><h2 id="JSONP函数封装"><a href="#JSONP函数封装" class="headerlink" title="JSONP函数封装"></a>JSONP函数封装</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;button id=<span class="string">"btn1"</span>&gt;点我发送请求&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">&lt;button id="btn2"&gt;点我发送请求&lt;/</span>button&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="comment">// 获取按钮</span></span><br><span class="line"><span class="keyword">var</span> btn1 = <span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>);</span><br><span class="line"><span class="keyword">var</span> btn2 = <span class="built_in">document</span>.getElementById(<span class="string">'btn2'</span>);</span><br><span class="line"><span class="comment">// 为按钮添加点击事件</span></span><br><span class="line">btn1.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">jsonp(&#123;</span><br><span class="line"><span class="comment">// 请求地址</span></span><br><span class="line">url: <span class="string">'http://localhost:3001/better'</span>,</span><br><span class="line">data: &#123;</span><br><span class="line">name: <span class="string">'lisi'</span>,</span><br><span class="line">age: <span class="number">30</span></span><br><span class="line">&#125;,</span><br><span class="line">success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">123</span>)</span><br><span class="line"><span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">btn2.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">jsonp(&#123;</span><br><span class="line"><span class="comment">// 请求地址</span></span><br><span class="line">url: <span class="string">'http://localhost:3001/better'</span>,</span><br><span class="line">success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">456789</span>)</span><br><span class="line"><span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jsonp</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line"><span class="comment">// 动态创建script标签</span></span><br><span class="line"><span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line"><span class="comment">// 拼接字符串的变量</span></span><br><span class="line"><span class="keyword">var</span> params = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">in</span> options.data) &#123;</span><br><span class="line">params += <span class="string">'&amp;'</span> + attr + <span class="string">'='</span> + options.data[attr];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// myJsonp0124741</span></span><br><span class="line"><span class="keyword">var</span> fnName = <span class="string">'myJsonp'</span> + <span class="built_in">Math</span>.random().toString().replace(<span class="string">'.'</span>, <span class="string">''</span>);</span><br><span class="line"><span class="comment">// 它已经不是一个全局函数了</span></span><br><span class="line"><span class="comment">// 我们要想办法将它变成全局函数</span></span><br><span class="line"><span class="built_in">window</span>[fnName] = options.success;</span><br><span class="line"><span class="comment">// 为script标签添加src属性</span></span><br><span class="line">script.src = options.url + <span class="string">'?callback='</span> + fnName + params;</span><br><span class="line"><span class="comment">// 将script标签追加到页面中</span></span><br><span class="line"><span class="built_in">document</span>.body.appendChild(script);</span><br><span class="line"><span class="comment">// 为script标签添加onload事件</span></span><br><span class="line">script.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">document</span>.body.removeChild(script);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><p><strong>服务器端</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/better'</span>,(req,res)=&gt;&#123;</span><br><span class="line">    res.jsonp(&#123;<span class="attr">name</span>: <span class="string">'list'</span>,<span class="attr">age</span>: <span class="number">20</span>&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><hr><h2 id="CORS跨域资源共享"><a href="#CORS跨域资源共享" class="headerlink" title="CORS跨域资源共享"></a>CORS跨域资源共享</h2><p>CORS:全称为Cross-origin resource sharing，即跨域资源共享，它允许浏览器向跨域服务器发送Ajax请求，克服了Ajax只能同源使用的限制。</p><p><strong>客户端不变</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;button id=<span class="string">"btn"</span>&gt;点我发送请求&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="/</span>js/ajax.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">// 获取按钮</span></span><br><span class="line"><span class="string">var btn = document.getElementById('btn');</span></span><br><span class="line"><span class="string">// 为按钮添加点击事件</span></span><br><span class="line"><span class="string">btn.onclick = function () &#123;</span></span><br><span class="line"><span class="string">ajax(&#123;</span></span><br><span class="line"><span class="string">type: 'get',</span></span><br><span class="line"><span class="string">url: 'http://localhost:3001/cross',</span></span><br><span class="line"><span class="string">success: function (data) &#123;</span></span><br><span class="line"><span class="string">console.log(data)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p><strong>服务器端优化</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="function">(<span class="params">req,res,next</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 1.允许哪些客户端访问我</span></span><br><span class="line">    <span class="comment">//*代表允许所有的客户端访问我</span></span><br><span class="line">    res.header( <span class="string">'Access-Control-Allow-Origin'</span>, <span class="string">'*'</span>)</span><br><span class="line">    <span class="comment">//2.允许客户端使用哪些请求方法访问我</span></span><br><span class="line">    res.header( <span class="string">'Access-Control-AllOw-Methods '</span>, <span class="string">'get, post'</span>)</span><br><span class="line">    next();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="利用服务器端没有同源限制来实现跨域"><a href="#利用服务器端没有同源限制来实现跨域" class="headerlink" title="利用服务器端没有同源限制来实现跨域"></a>利用服务器端没有同源限制来实现跨域</h2><ol><li>下载request模块 <code>npm install request</code></li></ol><ol start="2"><li>引入 <code>const request = require(&#39;request&#39;)</code></li></ol><ol start="3"><li>服务器端代码<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/server'</span>,(req,res)=&gt;&#123;</span><br><span class="line">    request(<span class="string">'目标服务器地址'</span>,(err,response,body)=&gt;&#123;</span><br><span class="line">        res.end(body)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="withCredentials属性"><a href="#withCredentials属性" class="headerlink" title="withCredentials属性"></a>withCredentials属性</h2><p>在使用Ajax技术发送跨域请求时，默认情况下不会在请求中携带cookie信息。<br>withCredentials:指定在涉及到跨域请求时，是否携带cookie信息，默认值为false<br>Access-Control-Allow-Credentials: true允许客户端发送请求时携带cookie</p><hr><h2 id="jquery封装的-ajax"><a href="#jquery封装的-ajax" class="headerlink" title="jquery封装的 $.ajax()"></a>jquery封装的 $.ajax()</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line"><span class="comment">// 请求方式</span></span><br><span class="line">type: <span class="string">'post'</span>,</span><br><span class="line"><span class="comment">// 请求地址</span></span><br><span class="line">url: <span class="string">'/user'</span>,</span><br><span class="line"><span class="comment">// 向服务器端发送的请求参数</span></span><br><span class="line"><span class="comment">// name=zhangsan&amp;age=100</span></span><br><span class="line"><span class="comment">// data: &#123;</span></span><br><span class="line"><span class="comment">// name: 'zhangsan',</span></span><br><span class="line"><span class="comment">// age: 100</span></span><br><span class="line"><span class="comment">// &#125;,</span></span><br><span class="line">data: <span class="built_in">JSON</span>.stringify(params),</span><br><span class="line"><span class="comment">// 指定参数的格式类型</span></span><br><span class="line">contentType: <span class="string">'application/json'</span>,</span><br><span class="line"><span class="comment">// 请求成功以后函数被调用</span></span><br><span class="line">success: <span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line"><span class="comment">// response为服务器端返回的数据</span></span><br><span class="line"><span class="comment">// 方法内部会自动将json字符串转换为json对象</span></span><br><span class="line"><span class="built_in">console</span>.log(response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="serialize方法"><a href="#serialize方法" class="headerlink" title="serialize方法"></a>serialize方法</h2><p><strong>作用</strong>:将表单中的数据自动拼接成字符串类型的参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> params = $(<span class="string">'#form'</span> ).serialize ();</span><br><span class="line"><span class="comment">// name=zhangsan&amp;age=30</span></span><br></pre></td></tr></table></figure><h2 id="将表单中用户输入的内容转换为对象类型函数封装"><a href="#将表单中用户输入的内容转换为对象类型函数封装" class="headerlink" title="将表单中用户输入的内容转换为对象类型函数封装"></a>将表单中用户输入的内容转换为对象类型函数封装</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将表单中用户输入的内容转换为对象类型</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">serializeObject</span> (<span class="params">obj</span>)</span>&#123;</span><br><span class="line"><span class="comment">//处理结果对象</span></span><br><span class="line"><span class="keyword">var</span> result = &#123;&#125;;</span><br><span class="line"><span class="comment">// [&#123;name: 'username ', value:'用户输入的内容'&#125;，&#123;name: 'password',value:'123456'&#125;]</span></span><br><span class="line"><span class="keyword">var</span> params = obj.serializeArray();</span><br><span class="line"><span class="comment">//循环数组将数组转换为对象类型</span></span><br><span class="line">$.each(params,<span class="function"><span class="keyword">function</span> (<span class="params">index,value</span>) <span class="title">i</span></span></span><br><span class="line">result[value.name] = value.value;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//将处理的结果返回到函数外部</span></span><br><span class="line"><span class="keyword">return</span> result;</span><br></pre></td></tr></table></figure><h2 id="ajax发送jsonp请求"><a href="#ajax发送jsonp请求" class="headerlink" title="$.ajax发送jsonp请求"></a>$.ajax发送jsonp请求</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//作用:发送jsonp请求。</span></span><br><span class="line">$.ajax (&#123;</span><br><span class="line">url: <span class="string">'http: // www . example.com '</span> ,</span><br><span class="line"><span class="comment">//指定当前发送jsonp请求</span></span><br><span class="line">dataType: <span class="string">'jsonp '</span> ,</span><br><span class="line"><span class="comment">//修改callback参数名称</span></span><br><span class="line">jsonp: <span class="string">'cb'</span>,</span><br><span class="line"><span class="comment">//指定函数名称</span></span><br><span class="line">jsoncallback: <span class="string">'fnName'</span>,</span><br><span class="line">success: <span class="function"><span class="keyword">function</span> (<span class="params">response</span>)</span>&#123;&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="作用-get方法用于发送get请求，-post方法用于发送post请求。"><a href="#作用-get方法用于发送get请求，-post方法用于发送post请求。" class="headerlink" title="作用: $.get方法用于发送get请求，$.post方法用于发送post请求。"></a>作用: $.get方法用于发送get请求，$.post方法用于发送post请求。</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="keyword">get</span>('/url',&#123;name:<span class="string">'li'</span>,<span class="attr">age</span>:<span class="number">20</span>&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;&#125;)</span><br><span class="line">$.psst(<span class="string">'/url'</span>,&#123;<span class="attr">name</span>:<span class="string">'li'</span>,<span class="attr">age</span>:<span class="number">20</span>&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;&#125;)</span><br></pre></td></tr></table></figure><h2 id="ajax全局事件和NProgress-js插件实现页面加载效果"><a href="#ajax全局事件和NProgress-js插件实现页面加载效果" class="headerlink" title="$.ajax全局事件和NProgress.js插件实现页面加载效果"></a>$.ajax全局事件和NProgress.js插件实现页面加载效果</h2><p>只要页面中有Ajax请求被发送，对应的全局事件就会被触发</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.ajaxstart()<span class="comment">//当请求开始发送时触发心</span></span><br><span class="line">.ajaxcomplete()<span class="comment">//当请求完成时触发</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//全局事件绑定在document上</span></span><br><span class="line"><span class="comment">//引入插件的css和js</span></span><br><span class="line"><span class="comment">//当页面中有ajax请求发送时触发</span></span><br><span class="line">$(<span class="built_in">document</span>).on( <span class="string">'ajaxStart'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"> &#123;</span></span></span><br><span class="line"><span class="function"><span class="params">NProgress.start(</span>)</span></span><br><span class="line"><span class="function">&#125;)</span></span><br><span class="line"><span class="function">//当页面中有<span class="title">ajax</span>请求完成时触发</span></span><br><span class="line"><span class="function"><span class="title">$</span>(<span class="params">document</span>).<span class="title">on</span>(<span class="params"> <span class="string">'ajaxComplete'</span>, function (&#123;</span></span></span><br><span class="line"><span class="function"><span class="params">NProgress.done(</span>)</span></span><br><span class="line"><span class="function">&#125;)</span></span><br></pre></td></tr></table></figure><hr><h2 id="RESTful-API的实现"><a href="#RESTful-API的实现" class="headerlink" title="RESTful API的实现"></a>RESTful API的实现</h2><img src="https://s1.ax1x.com/2020/08/27/d41ovV.png" alt="d41ovV.png" border="0" />]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前后端交互Ajax（上）</title>
      <link href="/lizibin1999.github.io/article/74d65f20.html"/>
      <url>/lizibin1999.github.io/article/74d65f20.html</url>
      
        <content type="html"><![CDATA[<h1 id="前后端交互Ajax（上）"><a href="#前后端交互Ajax（上）" class="headerlink" title="前后端交互Ajax（上）"></a>前后端交互Ajax（上）</h1><h2 id="Ajax的应用场景"><a href="#Ajax的应用场景" class="headerlink" title="Ajax的应用场景"></a>Ajax的应用场景</h2><ul><li>页面上拉加载更多数据</li><li>列表数据无刷新分页</li><li>表单项离开焦点数据验证</li><li>搜索框提示文字下拉列表</li></ul><hr><h2 id="Ajax的运行环境"><a href="#Ajax的运行环境" class="headerlink" title="Ajax的运行环境"></a>Ajax的运行环境</h2><ul><li>Ajax技术需要运行在网站环境中才能生效，Node创建的服务器作为网站服务器。</li></ul><hr><h2 id="Ajax的实现步骤"><a href="#Ajax的实现步骤" class="headerlink" title="Ajax的实现步骤"></a>Ajax的实现步骤</h2><p>1.创建Ajax对象<br><code>var xhr = new XMLHttpRequest();</code><br>2.告诉Ajax请求地址以及请求方式<br><code>xhr.open(&#39;get&#39;, &#39;http://www.example.com&#39;) ;</code><br>3.发送请求<br><code>xhr.send();</code><br>4.获取服务器端给与客户端的响应数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log (xhr.responseText) ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="服务器端响应的数据格式"><a href="#服务器端响应的数据格式" class="headerlink" title="服务器端响应的数据格式"></a>服务器端响应的数据格式</h2><p>在http请求与响应的过程中，无论是请求参数还是响应内容，如果是对象类型，最终都会被转换为对象字符串进行传输。<br><code>JSON.parse()//将json字符串转换为json对象</code></p><h2 id="get请求处理"><a href="#get请求处理" class="headerlink" title="get请求处理"></a>get请求处理</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;input type=<span class="string">"text"</span> id=<span class="string">"username"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;</span></span><br><span class="line"><span class="regexp">&lt;input type="text" id="age"&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>p&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"提交"</span> id=<span class="string">"btn"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">// 获取按钮元素</span></span><br><span class="line"><span class="string">var btn = document.getElementById('btn');</span></span><br><span class="line"><span class="string">// 获取姓名文本框</span></span><br><span class="line"><span class="string">var username = document.getElementById('username');</span></span><br><span class="line"><span class="string">// 获取年龄文本框</span></span><br><span class="line"><span class="string">var age = document.getElementById('age');</span></span><br><span class="line"><span class="string">// 为按钮添加点击事件</span></span><br><span class="line"><span class="string">btn.onclick = function () &#123;</span></span><br><span class="line"><span class="string">// 创建ajax对象</span></span><br><span class="line"><span class="string">var xhr = new XMLHttpRequest();</span></span><br><span class="line"><span class="string">// 获取用户在文本框中输入的值</span></span><br><span class="line"><span class="string">var nameValue = username.value;</span></span><br><span class="line"><span class="string">var ageValue = age.value;</span></span><br><span class="line"><span class="string">// 拼接请求参数</span></span><br><span class="line"><span class="string">var params = 'username='+ nameValue +'&amp;age=' + ageValue;</span></span><br><span class="line"><span class="string">// 配置ajax对象</span></span><br><span class="line"><span class="string">xhr.open('get', 'http://localhost:3000/get?'+params);</span></span><br><span class="line"><span class="string">// 发送请求</span></span><br><span class="line"><span class="string">xhr.send();</span></span><br><span class="line"><span class="string">// 获取服务器端响应的数据</span></span><br><span class="line"><span class="string">xhr.onload = function () &#123;</span></span><br><span class="line"><span class="string">console.log(xhr.responseText)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><h2 id="post请求处理"><a href="#post请求处理" class="headerlink" title="post请求处理"></a>post请求处理</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;input type=<span class="string">"text"</span> id=<span class="string">"username"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;</span></span><br><span class="line"><span class="regexp">&lt;input type="text" id="age"&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>p&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"提交"</span> id=<span class="string">"btn"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">// 获取按钮元素</span></span><br><span class="line"><span class="string">var btn = document.getElementById('btn');</span></span><br><span class="line"><span class="string">// 获取姓名文本框</span></span><br><span class="line"><span class="string">var username = document.getElementById('username');</span></span><br><span class="line"><span class="string">// 获取年龄文本框</span></span><br><span class="line"><span class="string">var age = document.getElementById('age');</span></span><br><span class="line"><span class="string">// 为按钮添加点击事件</span></span><br><span class="line"><span class="string">btn.onclick = function () &#123;</span></span><br><span class="line"><span class="string">// 创建ajax对象</span></span><br><span class="line"><span class="string">var xhr = new XMLHttpRequest();</span></span><br><span class="line"><span class="string">// 获取用户在文本框中输入的值</span></span><br><span class="line"><span class="string">var nameValue = username.value;</span></span><br><span class="line"><span class="string">var ageValue = age.value;</span></span><br><span class="line"><span class="string">// 拼接请求参数</span></span><br><span class="line"><span class="string">var params = 'username='+ nameValue +'&amp;age=' + ageValue;</span></span><br><span class="line"><span class="string">// 配置ajax对象</span></span><br><span class="line"><span class="string">xhr.open('post', 'http://localhost:3000/post');</span></span><br><span class="line"><span class="string">// 设置请求参数格式的类型（post请求必须要设置）</span></span><br><span class="line"><span class="string">xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');</span></span><br><span class="line"><span class="string">// 发送请求</span></span><br><span class="line"><span class="string">xhr.send(params);</span></span><br><span class="line"><span class="string">// 获取服务器端响应的数据</span></span><br><span class="line"><span class="string">xhr.onload = function () &#123;</span></span><br><span class="line"><span class="string">console.log(xhr.responseText)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><h2 id="向服务器端传递josn格式的参数"><a href="#向服务器端传递josn格式的参数" class="headerlink" title="向服务器端传递josn格式的参数"></a>向服务器端传递josn格式的参数</h2><img src="https://s1.ax1x.com/2020/08/21/dNDZOx.png" alt="dNDZOx.png" border="0" /><hr><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="comment">// 1.创建ajax对象</span></span><br><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"><span class="comment">// 2.告诉Ajax对象要向哪发送请求，以什么方式发送请求</span></span><br><span class="line"><span class="comment">// 1)请求方式 2)请求地址</span></span><br><span class="line">xhr.open(<span class="string">'post'</span>, <span class="string">'http://localhost:3000/json'</span>);</span><br><span class="line"><span class="comment">// 通过请求头告诉服务器端客户端向服务器端传递的请求参数的格式是什么</span></span><br><span class="line">xhr.setRequestHeader(<span class="string">'Content-Type'</span>, <span class="string">'application/json'</span>);</span><br><span class="line"><span class="comment">// JSON.stringify() 将json对象转换为json字符串</span></span><br><span class="line"><span class="comment">// 3.发送请求</span></span><br><span class="line">xhr.send(<span class="built_in">JSON</span>.stringify(&#123;<span class="attr">name</span>: <span class="string">'lisi'</span>, <span class="attr">age</span>:<span class="number">50</span>&#125;));</span><br><span class="line"><span class="comment">// 4.获取服务器端响应到客户端的数据</span></span><br><span class="line">xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(xhr.responseText)</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><h2 id="06-获取服务器端响应数据的另一种方式（过时的方法）"><a href="#06-获取服务器端响应数据的另一种方式（过时的方法）" class="headerlink" title="06-获取服务器端响应数据的另一种方式（过时的方法）"></a>06-获取服务器端响应数据的另一种方式（过时的方法）</h2><h3 id="Ajax状态码"><a href="#Ajax状态码" class="headerlink" title="Ajax状态码"></a>Ajax状态码</h3><img src="https://s1.ax1x.com/2020/08/21/dNr3UU.png" alt="dNr3UU.png" border="0" /><p><code>xhr.readyState//获取Ajax状态码</code></p><h3 id="onreadystatechange-事件"><a href="#onreadystatechange-事件" class="headerlink" title="onreadystatechange 事件"></a>onreadystatechange 事件</h3><ul><li>当Ajax状态码发生变化时将自动触发该事件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"><span class="comment">// 0 已经创建了ajax对象 但是还没有对ajax对象进行配置</span></span><br><span class="line"><span class="built_in">console</span>.log(xhr.readyState);</span><br><span class="line">xhr.open(<span class="string">'get'</span>, <span class="string">'http://localhost:3000/readystate'</span>);</span><br><span class="line"><span class="comment">// 1 已经对ajax对象进行配置 但是还没有发送请求</span></span><br><span class="line"><span class="built_in">console</span>.log(xhr.readyState);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当ajax状态码发生变化的时候出发</span></span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">// 2 请求已经发送了</span></span><br><span class="line"><span class="comment">// 3 已经接收到服务器端的部分数据了</span></span><br><span class="line"><span class="comment">// 4 服务器端的响应数据已经接收完成</span></span><br><span class="line"><span class="built_in">console</span>.log(xhr.readyState);</span><br><span class="line"><span class="comment">// 对ajax状态码进行判断 如果状态码的值为4就代表数据已经接收完成了</span></span><br><span class="line"><span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">xhr.send();</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="Ajax错误处理"><a href="#Ajax错误处理" class="headerlink" title="Ajax错误处理"></a>Ajax错误处理</h2><ol><li>网络畅通，服务器端能接收到请求，服务器端返回的结果不是预期结果。<br>可以判断服务器端返回的状态码，分别进行处理。xhr.status获取http状态码</li></ol><ol start="2"><li>网络畅通，服务器端没有接收到请求，返回404状态码。<br>检查请求地址是否错误。</li></ol><ol start="3"><li>网络畅通，服务器端能接收到请求，服务器端返回500状态码。<br>服务器端错误，找后端程序员进行沟通。</li></ol><ol start="4"><li>网络中断，请求无法发送到服务器端。<br>会触发xhr对象卜面的onerror事件，在onerror事件处理函数中对错误进行处理。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;button id=<span class="string">"btn"</span>&gt;发送Ajax请求&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">var btn = document.getElementById('btn');</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">btn.onclick = function () &#123;</span></span><br><span class="line"><span class="string">// 1.创建ajax对象</span></span><br><span class="line"><span class="string">var xhr = new XMLHttpRequest();</span></span><br><span class="line"><span class="string">// 2.告诉Ajax对象要向哪发送请求，以什么方式发送请求</span></span><br><span class="line"><span class="string">// 1)请求方式 2)请求地址</span></span><br><span class="line"><span class="string">xhr.open('get', 'http://localhost:3000/error');</span></span><br><span class="line"><span class="string">// 3.发送请求</span></span><br><span class="line"><span class="string">xhr.send();</span></span><br><span class="line"><span class="string">// 4.获取服务器端响应到客户端的数据</span></span><br><span class="line"><span class="string">xhr.onload = function ()&#123;</span></span><br><span class="line"><span class="string">// xhr.status 获取http状态码</span></span><br><span class="line"><span class="string">console.log(xhr.responseText);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (xhr.status == 400) &#123;</span></span><br><span class="line"><span class="string">alert('请求出错')</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">// 当网络中断时会触发onerrr事件</span></span><br><span class="line"><span class="string">xhr.onerror = function () &#123;</span></span><br><span class="line"><span class="string">alert('网络中断, 无法发送Ajax请求')</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// Ajax状态码: 表示Ajax请求的过程状态 ajax对象返回的</span></span><br><span class="line"><span class="string">// Http状态码: 表示请求的处理结果 是服务器端返回的</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="低版本IE浏览器的缓存问题"><a href="#低版本IE浏览器的缓存问题" class="headerlink" title="低版本IE浏览器的缓存问题"></a>低版本IE浏览器的缓存问题</h2><img src="https://s1.ax1x.com/2020/08/21/dN21V1.png" alt="dN21V1.png" border="0" /><hr><h2 id="Ajax函数封装"><a href="#Ajax函数封装" class="headerlink" title="Ajax函数封装"></a>Ajax函数封装</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line"><span class="comment">// 存储的是默认值</span></span><br><span class="line"><span class="keyword">var</span> defaults = &#123;</span><br><span class="line">type: <span class="string">'get'</span>,</span><br><span class="line">url: <span class="string">''</span>,</span><br><span class="line">data: &#123;&#125;,</span><br><span class="line">header: &#123;</span><br><span class="line"><span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span></span><br><span class="line">&#125;,</span><br><span class="line">success: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">error: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用options对象中的属性覆盖defaults对象中的属性</span></span><br><span class="line"><span class="built_in">Object</span>.assign(defaults, options);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建ajax对象</span></span><br><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"><span class="comment">// 拼接请求参数的变量</span></span><br><span class="line"><span class="keyword">var</span> params = <span class="string">''</span>;</span><br><span class="line"><span class="comment">// 循环用户传递进来的对象格式参数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">in</span> defaults.data) &#123;</span><br><span class="line"><span class="comment">// 将参数转换为字符串格式</span></span><br><span class="line">params += attr + <span class="string">'='</span> + defaults.data[attr] + <span class="string">'&amp;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将参数最后面的&amp;截取掉 </span></span><br><span class="line"><span class="comment">// 将截取的结果重新赋值给params变量</span></span><br><span class="line">params = params.substr(<span class="number">0</span>, params.length - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断请求方式</span></span><br><span class="line"><span class="keyword">if</span> (defaults.type == <span class="string">'get'</span>) &#123;</span><br><span class="line">defaults.url = defaults.url + <span class="string">'?'</span> + params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">name: 'zhangsan',</span></span><br><span class="line"><span class="comment">age: 20</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">name=zhangsan&amp;age=20</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置ajax对象</span></span><br><span class="line">xhr.open(defaults.type, defaults.url);</span><br><span class="line"><span class="comment">// 如果请求方式为post</span></span><br><span class="line"><span class="keyword">if</span> (defaults.type == <span class="string">'post'</span>) &#123;</span><br><span class="line"><span class="comment">// 用户希望的向服务器端传递的请求参数的类型</span></span><br><span class="line"><span class="keyword">var</span> contentType = defaults.header[<span class="string">'Content-Type'</span>]</span><br><span class="line"><span class="comment">// 设置请求参数格式的类型</span></span><br><span class="line">xhr.setRequestHeader(<span class="string">'Content-Type'</span>, contentType);</span><br><span class="line"><span class="comment">// 判断用户希望的请求参数格式的类型</span></span><br><span class="line"><span class="comment">// 如果类型为json</span></span><br><span class="line"><span class="keyword">if</span> (contentType == <span class="string">'application/json'</span>) &#123;</span><br><span class="line"><span class="comment">// 向服务器端传递json数据格式的参数</span></span><br><span class="line">xhr.send(<span class="built_in">JSON</span>.stringify(defaults.data))</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 向服务器端传递普通类型的请求参数</span></span><br><span class="line">xhr.send(params);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 发送请求</span></span><br><span class="line">xhr.send();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 监听xhr对象下面的onload事件</span></span><br><span class="line"><span class="comment">// 当xhr对象接收完响应数据后触发</span></span><br><span class="line">xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// xhr.getResponseHeader()</span></span><br><span class="line"><span class="comment">// 获取响应头中的数据</span></span><br><span class="line"><span class="keyword">var</span> contentType = xhr.getResponseHeader(<span class="string">'Content-Type'</span>);</span><br><span class="line"><span class="comment">// 服务器端返回的数据</span></span><br><span class="line"><span class="keyword">var</span> responseText = xhr.responseText;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果响应类型中包含applicaition/json</span></span><br><span class="line"><span class="keyword">if</span> (contentType.includes(<span class="string">'application/json'</span>)) &#123;</span><br><span class="line"><span class="comment">// 将json字符串转换为json对象</span></span><br><span class="line">responseText = <span class="built_in">JSON</span>.parse(responseText)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当http状态码等于200的时候</span></span><br><span class="line"><span class="keyword">if</span> (xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line"><span class="comment">// 请求成功 调用处理成功情况的函数</span></span><br><span class="line">defaults.success(responseText, xhr);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 请求失败 调用处理失败情况的函数</span></span><br><span class="line">defaults.error(responseText, xhr);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ajax(&#123;</span><br><span class="line">type: <span class="string">'post'</span>,</span><br><span class="line"><span class="comment">// 请求地址</span></span><br><span class="line">url: <span class="string">'http://localhost:3000/responseData'</span>,</span><br><span class="line">success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'这里是success函数'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">请求参数要考虑的问题</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1.请求参数位置的问题</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">将请求参数传递到ajax函数内部, 在函数内部根据请求方式的不同将请求参数放置在不同的位置</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">get 放在请求地址的后面</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">post 放在send方法中</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.请求参数格式的问题</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">参数名称=参数值&amp;参数名称=参数值</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">name=zhangsan&amp;age=20</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">application/json</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#123;name: 'zhangsan', age: 20&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1.传递对象数据类型对于函数的调用者更加友好</span></span><br><span class="line"><span class="comment">2.在函数内部对象数据类型转换为字符串数据类型更加方便</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="模板引擎的使用"><a href="#模板引擎的使用" class="headerlink" title="模板引擎的使用"></a>模板引擎的使用</h2><ol><li>下载art-template模板引擎库文件并在HTML页面中引入库文件<br>通过js的方式引入<br><code>&lt;script src=&quot;./js/template-web.js&quot;&gt;&lt;/script&gt;</code></li></ol><ol start="2"><li>准备art-template模板</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script id=<span class="string">"tpl"</span> type=<span class="string">"text/html"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"box"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>告诉模板引擎将哪一个模板和哪个数据进行拼接</li></ol><p><code>var html = template(&#39;tpl&#39;,{username: &#39;zhangsan&#39;, age: &#39;20&#39;});</code></p><ol start="4"><li>将拼接好的html字符串添加到页面中</li></ol><p><code>document.getElementById(&#39;container&#39;).innerHTML = html ;</code></p><ol start="5"><li>通过模板语法告诉模板引擎，数据和html字符串要如何拼接</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script id=<span class="string">"tpl"</span> type=<span class="string">"text/html"</span>&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"box"</span>&gt; &#123;&#123;username&#125;&#125; &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure><p><strong>演示：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 1. 将模板引擎的库文件引入到当前页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/template-web.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 2.准备art-template模板 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/html"</span> <span class="attr">id</span>=<span class="string">"tpl"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><span class="template-variable">&#123;&#123;username&#125;&#125;</span><span class="xml"> </span><span class="template-variable">&#123;&#123;age&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 3.告诉模板引擎将那个数据和哪个模板进行拼接</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 1) 模板id 2)数据 对象类型</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 方法的返回值就是拼接好的html字符串</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> html = template(<span class="string">'tpl'</span>, &#123;username: <span class="string">'zhangsan'</span>, age: <span class="number">30</span>&#125;);</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">'container'</span>).innerHTML = html;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="fromData对象的作用"><a href="#fromData对象的作用" class="headerlink" title="fromData对象的作用"></a>fromData对象的作用</h2><ol><li>模拟HTML表单，相当于将HTML表单映射成表单对象，自动将表单对象中的数据拼接成请求参数的格式。</li><li>异步上传二进制文件</li></ol><p><strong>步骤：</strong></p><ol><li>准备HTML表单</li></ol><p>不需要action属性，但是要有name属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>将HTML表单转化为formData对象<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> form = <span class="built_in">document</span>.getElementById(<span class="string">'form'</span>);</span><br><span class="line"><span class="keyword">var</span> formData = <span class="keyword">new</span> FormData(form);</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li>提交表单对象</li></ol><p><code>xhr.send (formData);</code></p><p><strong>注意：formDAta只能用于post方式</strong><br><strong>formData对象服务器端接收用<code>formidable</code></strong></p><ol><li>下载<code>npm install formidable</code></li><li>引入<code>const formidable = require(&#39;formidable&#39;)</code></li><li><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">app.post(<span class="string">'/formData'</span>,(req,res)=&#123;</span><br><span class="line"><span class="comment">//创建formidable表单解析对象</span></span><br><span class="line"><span class="keyword">const</span> form = <span class="keyword">new</span> formidable.IncomingForm();</span><br><span class="line"><span class="comment">//解析客户端传递过来的FormData对象</span></span><br><span class="line">form.parse(req，(err,fields, files) =&gt;&#123;</span><br><span class="line">res.send(fields);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><h2 id="formData对象的实例方法"><a href="#formData对象的实例方法" class="headerlink" title="formData对象的实例方法"></a>formData对象的实例方法</h2><ol><li>获取表单对象中属性的值<br><code>formData.get(&#39;key&#39;);</code></li></ol><ol start="2"><li>设置表单对象中属性的值</li></ol><ul><li>用于表单的二次处理</li><li>key如果没有这个name值，自动创建，有就覆盖<br><code>formData.set(&#39;key&#39;, &#39;value&#39;);</code></li></ul><ol start="3"><li>删除表单对象中属性的值</li></ol><p>用于两次输入密码，只需向服务器发一次请求，把第二个删除<br><code>formData.delete (&#39;key&#39;);</code></p><ol start="4"><li>向表单对象中追加属性值<br><code>formData .append( &#39;key&#39;, &#39;value&#39;);</code></li></ol><p><strong>注意</strong>: set方法与append方法的区别是，在属性名已存在的情况下，set会覆盖已有键名的值，append会<br>保留两个值。</p><h2 id="FormData二进制文件上传"><a href="#FormData二进制文件上传" class="headerlink" title="FormData二进制文件上传"></a>FormData二进制文件上传</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"file"</span> id=<span class="string">"file"</span>/&gt;</span><br><span class="line"><span class="keyword">var</span> file = <span class="built_in">document</span>.getElementById(<span class="string">'file'</span>)</span><br><span class="line"><span class="comment">//当用户选择文件的时候</span></span><br><span class="line">file.onchange = <span class="function"><span class="keyword">function</span> (<span class="params"> &#123;</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="regexp">//</span>创建空表单对象</span></span></span><br><span class="line"><span class="function"><span class="params">var formData = new FormData (</span>) ;</span></span><br><span class="line"><span class="function">//将用户选择的二进制文件追加到表单对象中</span></span><br><span class="line"><span class="function"><span class="title">formData</span>.<span class="title">append</span> (<span class="params"><span class="string">'attrName'</span>, this.files[<span class="number">0</span>]</span>);</span></span><br><span class="line"><span class="function">//配置<span class="title">ajax</span>对象，请求方式必须为<span class="title">post</span> <span class="title">attrName</span>服务器端提供</span></span><br><span class="line"><span class="function"><span class="title">xhr</span>.<span class="title">open</span> (<span class="params"><span class="string">'post'</span>,<span class="string">'www.example.com'</span></span>);</span></span><br><span class="line"><span class="function"><span class="title">xhr</span>.<span class="title">send</span>(<span class="params">formData</span>);</span></span><br></pre></td></tr></table></figure><p>服务器端的处理：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实现文件上传的路由</span></span><br><span class="line">app.post( <span class="string">'/upload'</span>, (req，res)=&gt;&#123;</span><br><span class="line"><span class="comment">//创建formidable表单解析对象</span></span><br><span class="line"><span class="keyword">const</span> form = <span class="keyword">new</span> formidable.IncomingForm();</span><br><span class="line"><span class="comment">//设置客户端上传文件的存储路径</span></span><br><span class="line">form.uploadDir = path.join(__dirname,<span class="string">'public'</span>, <span class="string">'uploads '</span>);</span><br><span class="line"><span class="comment">//保留上传文件的后缀名字</span></span><br><span class="line">form.keepExtensions = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//解析客户端传递过来的FormData对象</span></span><br><span class="line">form.parse(req，(err，fields, files) =&gt;&#123;</span><br><span class="line">res.send( <span class="string">'ok'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="FormData文件上传进度展示"><a href="#FormData文件上传进度展示" class="headerlink" title="FormData文件上传进度展示"></a>FormData文件上传进度展示</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当用户选择文件的时候</span></span><br><span class="line">file.onchange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">文件上传过程中持续触发onprogress事件</span><br><span class="line">xhr.upload.onprogress = <span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</span><br><span class="line"><span class="comment">//当前上传文件大小/文件总大小再将结果转换为百分数</span></span><br><span class="line">将结果赋值给进度条的宽度属性</span><br><span class="line">bar.style.width = (ev.loaded /ev.total) * <span class="number">100</span> + <span class="string">'%'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="上传图片及时预览功能"><a href="#上传图片及时预览功能" class="headerlink" title="上传图片及时预览功能"></a>上传图片及时预览功能</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;link rel="stylesheet" href="/</span>assets/bootstrap/dist/css/bootstrap.min.css<span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;style type="</span>text/css<span class="string">"&gt;</span></span><br><span class="line"><span class="string">.container &#123;</span></span><br><span class="line"><span class="string">padding-top: 60px;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.padding &#123;</span></span><br><span class="line"><span class="string">padding: 5px 0 20px 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;div class="</span>container<span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;div class="</span>form-group<span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;label&gt;请选择文件&lt;/label&gt;</span></span><br><span class="line"><span class="string">&lt;input type="</span>file<span class="string">" id="</span>file<span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;div class="</span>padding<span class="string">" id="</span>box<span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;!--&lt;img src="</span><span class="string">" class="</span>img-rounded img-responsive<span class="string">"&gt;--&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;div class="</span>progress<span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;div class="</span>progress-bar<span class="string">" style="</span>width: <span class="number">0</span>%;<span class="string">" id="</span>bar<span class="string">"&gt;0%&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;script type="</span>text/javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">// 获取文件选择控件</span></span><br><span class="line"><span class="string">var file = document.getElementById('file');</span></span><br><span class="line"><span class="string">// 获取进度条元素</span></span><br><span class="line"><span class="string">var bar = document.getElementById('bar');</span></span><br><span class="line"><span class="string">// 获取图片容器</span></span><br><span class="line"><span class="string">var box = document.getElementById('box');</span></span><br><span class="line"><span class="string">// 为文件选择控件添加onchanges事件</span></span><br><span class="line"><span class="string">// 在用户选择文件时触发</span></span><br><span class="line"><span class="string">file.onchange = function () &#123;</span></span><br><span class="line"><span class="string">// 创建空的formData表单对象</span></span><br><span class="line"><span class="string">var formData = new FormData();</span></span><br><span class="line"><span class="string">// 将用户选择的文件追加到formData表单对象中</span></span><br><span class="line"><span class="string">formData.append('attrName', this.files[0]);</span></span><br><span class="line"><span class="string">// 创建ajax对象</span></span><br><span class="line"><span class="string">var xhr = new XMLHttpRequest();</span></span><br><span class="line"><span class="string">// 对ajax对象进行配置</span></span><br><span class="line"><span class="string">xhr.open('post', 'http://localhost:3000/upload');</span></span><br><span class="line"><span class="string">// 在文件上传的过程中持续触发</span></span><br><span class="line"><span class="string">xhr.upload.onprogress = function (ev) &#123;</span></span><br><span class="line"><span class="string">// ev.loaded 文件已经上传了多少</span></span><br><span class="line"><span class="string">// ev.total  上传文件的总大小</span></span><br><span class="line"><span class="string">var result = (ev.loaded / ev.total) * 100 + '%';</span></span><br><span class="line"><span class="string">// 设置进度条的宽度</span></span><br><span class="line"><span class="string">bar.style.width = result;</span></span><br><span class="line"><span class="string">// 将百分比显示在进度条中</span></span><br><span class="line"><span class="string">bar.innerHTML = result;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">// 发送ajax请求</span></span><br><span class="line"><span class="string">xhr.send(formData);</span></span><br><span class="line"><span class="string">// 监听服务器端响应给客户端的数据</span></span><br><span class="line"><span class="string">xhr.onload = function () &#123;</span></span><br><span class="line"><span class="string">// 如果服务器端返回的http状态码为200</span></span><br><span class="line"><span class="string">// 说明请求是成功的</span></span><br><span class="line"><span class="string">if (xhr.status == 200) &#123;</span></span><br><span class="line"><span class="string">// 将服务器端返回的数据显示在控制台中</span></span><br><span class="line"><span class="string">var result = JSON.parse(xhr.responseText);</span></span><br><span class="line"><span class="string">// 动态创建img标签</span></span><br><span class="line"><span class="string">var img = document.createElement('img');</span></span><br><span class="line"><span class="string">// 给图片标签设置src属性</span></span><br><span class="line"><span class="string">img.src = result.path;</span></span><br><span class="line"><span class="string">// 当图片加载完成以后</span></span><br><span class="line"><span class="string">img.onload = function () &#123;</span></span><br><span class="line"><span class="string">// 将图片显示在页面中</span></span><br><span class="line"><span class="string">box.appendChild(img);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p><strong>服务器端代码：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实现文件上传的路由</span></span><br><span class="line">app.post(<span class="string">'/upload'</span>, (req, res) =&gt; &#123;</span><br><span class="line"><span class="comment">// 创建formidable表单解析对象</span></span><br><span class="line"><span class="keyword">const</span> form = <span class="keyword">new</span> formidable.IncomingForm();</span><br><span class="line"><span class="comment">// 设置客户端上传文件的存储路径</span></span><br><span class="line">form.uploadDir = path.join(__dirname, <span class="string">'public'</span>, <span class="string">'uploads'</span>);</span><br><span class="line"><span class="comment">// 保留上传文件的后缀名字</span></span><br><span class="line">form.keepExtensions = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// 解析客户端传递过来的FormData对象</span></span><br><span class="line">form.parse(req, (err, fields, files) =&gt; &#123;</span><br><span class="line"><span class="comment">// 将客户端传递过来的文件地址响应到客户端</span></span><br><span class="line">res.send(&#123;</span><br><span class="line">path: files.attrName.path.split(<span class="string">'public'</span>)[<span class="number">1</span>]</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue小案例-组件化购物车案例</title>
      <link href="/lizibin1999.github.io/article/6390f50e.html"/>
      <url>/lizibin1999.github.io/article/6390f50e.html</url>
      
        <content type="html"><![CDATA[<h1 id="Vue小案例-组件化购物车案例"><a href="#Vue小案例-组件化购物车案例" class="headerlink" title="Vue小案例-组件化购物车案例"></a>Vue小案例-组件化购物车案例</h1><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.cart</span> &#123;</span></span><br><span class="line">      width: 300px;</span><br><span class="line"><span class="css">      <span class="comment">/*background-color: lightgreen;*/</span></span></span><br><span class="line">      margin: auto;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.title</span> &#123;</span></span><br><span class="line">      background-color: lightblue;</span><br><span class="line">      height: 40px;</span><br><span class="line">      line-height: 40px;</span><br><span class="line">      text-align: center;</span><br><span class="line"><span class="css">      <span class="comment">/*color: #fff;*/</span>  </span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.total</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span>: <span class="selector-id">#FFCE46</span>;</span></span><br><span class="line">      height: 50px;</span><br><span class="line">      line-height: 50px;</span><br><span class="line">      text-align: right;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.total</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line">      margin: 0 10px;</span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span>: <span class="selector-id">#DC4C40</span>;</span></span><br><span class="line">      height: 35px;</span><br><span class="line">      width: 80px;</span><br><span class="line">      border: 0;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.total</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line">      color: red;</span><br><span class="line">      font-weight: bold;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> &#123;</span></span><br><span class="line">      height: 55px;</span><br><span class="line">      line-height: 55px;</span><br><span class="line">      position: relative;</span><br><span class="line"><span class="css">      <span class="selector-tag">border-top</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ADD8E6</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line">      width: 45px;</span><br><span class="line">      height: 45px;</span><br><span class="line">      margin: 5px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-class">.name</span> &#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      width: 90px;</span><br><span class="line">      top: 0;left: 55px;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-class">.change</span> &#123;</span></span><br><span class="line">      width: 100px;</span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 0;</span><br><span class="line">      right: 50px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-class">.change</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">      font-size: 20px;</span><br><span class="line">      width: 30px;</span><br><span class="line"><span class="css">      <span class="selector-tag">text-decoration</span><span class="selector-pseudo">:none</span>;</span></span><br><span class="line">      background-color: lightgray;</span><br><span class="line">      vertical-align: middle;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-class">.change</span> <span class="selector-class">.num</span> &#123;</span></span><br><span class="line">      width: 40px;</span><br><span class="line">      height: 25px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-class">.del</span> &#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 0;</span><br><span class="line">      right: 0px;</span><br><span class="line">      width: 40px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      font-size: 40px;</span><br><span class="line">      cursor: pointer;</span><br><span class="line">      color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-class">.del</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">      background-color: orange;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">my-cart</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cart</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> CartTitle = &#123;</span></span><br><span class="line">template:`</span><br><span class="line"><span class="javascript">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"title"</span>&gt;我的商品&lt;<span class="regexp">/div&gt;</span></span></span><br><span class="line">`</span><br><span class="line">  &#125;</span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> CartList = &#123;</span></span><br><span class="line"><span class="actionscript">  props:[<span class="string">'list'</span>],</span></span><br><span class="line">  template:`</span><br><span class="line"><span class="handlebars"><span class="xml">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"item"</span> :key=<span class="string">'item.id'</span> v-<span class="keyword">for</span>=<span class="string">'item in list'</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"item.img"</span>/&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"name"</span>&gt;</span></span><span class="template-variable">&#123;&#123;item.name&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"change"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> @<span class="attr">click.prevent</span>=<span class="string">'sub(item.id)'</span>&gt;</span>－<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;input type=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"num"</span> :value=<span class="string">'item.num'</span> @blur=<span class="string">'changeNum(item.id,$event)'</span>/&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> @<span class="attr">click.prevent</span>=<span class="string">'add(item.id)'</span>&gt;</span>＋<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"del"</span> @click=<span class="string">'del(item.id)'</span>&gt;×&lt;<span class="regexp">/div&gt;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">    </span><br><span class="line">  `,</span><br><span class="line">  methods:&#123;</span><br><span class="line"><span class="actionscript">  del: <span class="function"><span class="keyword">function</span><span class="params">(id)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">this</span>.$emit(<span class="string">'del-cart'</span>,id);</span></span><br><span class="line">  &#125;,</span><br><span class="line"><span class="actionscript">  changeNum:<span class="function"><span class="keyword">function</span><span class="params">(id,event)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">this</span>.$emit(<span class="string">'change'</span>,&#123;</span></span><br><span class="line">  id:id,</span><br><span class="line">  num:event.target.value,</span><br><span class="line"><span class="actionscript">  type:<span class="string">'change'</span></span></span><br><span class="line">  &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="actionscript">  sub:<span class="function"><span class="keyword">function</span><span class="params">(id)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">this</span>.$emit(<span class="string">'change'</span>,&#123;</span></span><br><span class="line">  id:id,</span><br><span class="line"><span class="actionscript">  type:<span class="string">'sub'</span></span></span><br><span class="line">  &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="actionscript">  add:<span class="function"><span class="keyword">function</span><span class="params">(id)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">this</span>.$emit(<span class="string">'change'</span>,&#123;</span></span><br><span class="line">id:id,</span><br><span class="line"><span class="actionscript">type:<span class="string">'add'</span></span></span><br><span class="line">  &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> CartTotal = &#123;</span></span><br><span class="line"><span class="actionscript">  props:[<span class="string">'list'</span>],</span></span><br><span class="line">  template:`</span><br><span class="line"><span class="javascript">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"total"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>总价：</span><span class="template-variable">&#123;&#123;tol&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>结算<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">  `,</span><br><span class="line">  computed:&#123;</span><br><span class="line"><span class="actionscript">  tol:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> t = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">this</span>.list.forEach(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span></span><br><span class="line">  t += item.price * item.num;</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="actionscript">  <span class="keyword">return</span> t;</span></span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">'my-cart'</span>,&#123;</span></span><br><span class="line"><span class="actionscript">data:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">return</span>&#123;</span></span><br><span class="line"></span><br><span class="line">list: [&#123;</span><br><span class="line">  id: 1,</span><br><span class="line"><span class="actionscript">  name: <span class="string">'TCL彩电'</span>,</span></span><br><span class="line">  price: 1000,</span><br><span class="line">  num: 1,</span><br><span class="line"><span class="actionscript">  img: <span class="string">'img/a.jpg'</span></span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">  id: 2,</span><br><span class="line"><span class="actionscript">  name: <span class="string">'机顶盒'</span>,</span></span><br><span class="line">  price: 1000,</span><br><span class="line">  num: 1,</span><br><span class="line"><span class="actionscript">  img: <span class="string">'img/b.jpg'</span></span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">  id: 3,</span><br><span class="line"><span class="actionscript">  name: <span class="string">'海尔冰箱'</span>,</span></span><br><span class="line">  price: 1000,</span><br><span class="line">  num: 1,</span><br><span class="line"><span class="actionscript">  img: <span class="string">'img/c.jpg'</span></span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">  id: 4,</span><br><span class="line"><span class="actionscript">  name: <span class="string">'小米手机'</span>,</span></span><br><span class="line">  price: 1000,</span><br><span class="line">  num: 1,</span><br><span class="line"><span class="actionscript">  img: <span class="string">'img/d.jpg'</span></span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">  id: 5,</span><br><span class="line"><span class="actionscript">  name: <span class="string">'PPTV电视'</span>,</span></span><br><span class="line">  price: 1000,</span><br><span class="line">  num: 2,</span><br><span class="line"><span class="actionscript">  img: <span class="string">'img/e.jpg'</span></span></span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">template:`</span><br><span class="line"><span class="javascript">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"cart"</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="handlebars"><span class="xml">  <span class="tag">&lt;<span class="name">cart-title</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-title</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">  <span class="tag">&lt;<span class="name">cart-list</span> <span class="attr">:list</span>=<span class="string">'list'</span> @<span class="attr">del-cart</span>=<span class="string">'del($event)'</span> @<span class="attr">change</span>=<span class="string">'change($event)'</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-list</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">  <span class="tag">&lt;<span class="name">cart-total</span> <span class="attr">:list</span>=<span class="string">'list'</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-total</span>&gt;</span></span></span></span><br><span class="line">  </span><br><span class="line"><span class="handlebars"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"></span><br><span class="line">`,</span><br><span class="line">components:&#123;</span><br><span class="line"><span class="actionscript"><span class="string">'cart-title'</span>: CartTitle,</span></span><br><span class="line"><span class="actionscript"><span class="string">'cart-list'</span>: CartList,</span></span><br><span class="line"><span class="actionscript"><span class="string">'cart-total'</span>: CartTotal</span></span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="actionscript">del:<span class="function"><span class="keyword">function</span><span class="params">(id)</span></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> index = <span class="keyword">this</span>.list.findIndex(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> item.id == id;</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="actionscript"><span class="keyword">this</span>.list.splice(index,<span class="number">1</span>);</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="actionscript">change:<span class="function"><span class="keyword">function</span><span class="params">(val)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">if</span>(val.type == <span class="string">'change'</span>)&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">this</span>.list.some(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span></span><br><span class="line">if(item.id == val.id)&#123;</span><br><span class="line">item.num = val.num;</span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"><span class="actionscript">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(val.type == <span class="string">'sub'</span>)&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">this</span>.list.some(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span></span><br><span class="line">if(item.id == val.id)&#123;</span><br><span class="line">item.num -= 1;</span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"><span class="actionscript">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(val.type == <span class="string">'add'</span>)&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">this</span>.list.some(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span></span><br><span class="line">if(item.id == val.id)&#123;</span><br><span class="line">item.num += 1;</span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line">        </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p><strong>效果：</strong></p><img src="https://s1.ax1x.com/2020/08/19/dlOM5t.gif" alt="dlOM5t.gif" border="0" />]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础(三)组件化开发</title>
      <link href="/lizibin1999.github.io/article/d26eab63.html"/>
      <url>/lizibin1999.github.io/article/d26eab63.html</url>
      
        <content type="html"><![CDATA[<h1 id="Vue组件化开发"><a href="#Vue组件化开发" class="headerlink" title="Vue组件化开发"></a>Vue组件化开发</h1><h2 id="全局组件注册语法"><a href="#全局组件注册语法" class="headerlink" title="全局组件注册语法"></a>全局组件注册语法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(组件名称，&#123;</span><br><span class="line">    data:组件数据，</span><br><span class="line">    template:组件模板内容</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><hr><p><strong>演示</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个名为button-counter的新组件</span></span><br><span class="line">Vue.component (<span class="string">'but ton- counter'</span>,&#123;</span><br><span class="line">    data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">        count: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;，</span><br><span class="line">template: <span class="string">'&lt;button @click="count++"&gt;点击了&#123;&#123; count&#125;&#125;次&lt;/button&gt;'</span> </span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//组件的使用，标签的方式使用</span></span><br><span class="line">&lt;div id=<span class="string">"app</span></span><br><span class="line"><span class="string">&lt;button-counter&gt;&lt;/button-counter&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><hr><p><strong>注意事项：</strong></p><ul><li>data必须是一个函数</li><li>组件模板内容必须是单个跟元素</li><li>组件模板内容可以是模板字符串，模板字符串需要浏览器提供支持(ES6语法)</li><li>如果使用驼峰式命名组件，那么在使用组件的时候，只能在字符串模板中用驼峰的方式使用组件，但是在普通的标签模板中，必须使用短横线的方式使用组件</li></ul><hr><h2 id="局部组件注册"><a href="#局部组件注册" class="headerlink" title="局部组件注册"></a>局部组件注册</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hello-world</span>&gt;</span><span class="tag">&lt;/<span class="name">hello-world</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hello-tom</span>&gt;</span><span class="tag">&lt;/<span class="name">hello-tom</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hello-jerry</span>&gt;</span><span class="tag">&lt;/<span class="name">hello-jerry</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">test-com</span>&gt;</span><span class="tag">&lt;/<span class="name">test-com</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line">      局部组件注册</span><br><span class="line">      局部组件只能在注册他的父组件中使用</span><br><span class="line">    */</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> HelloWorld = &#123;</span></span><br><span class="line"><span class="actionscript">      data: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">          msg: <span class="string">'HelloWorld'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line"><span class="handlebars"><span class="xml">      template: '<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="template-variable">&#123;&#123;msg&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>'</span></span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> HelloTom = &#123;</span></span><br><span class="line"><span class="actionscript">      data: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">          msg: <span class="string">'HelloTom'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line"><span class="handlebars"><span class="xml">      template: '<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="template-variable">&#123;&#123;msg&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>'</span></span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> HelloJerry = &#123;</span></span><br><span class="line"><span class="actionscript">      data: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">          msg: <span class="string">'HelloJerry'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line"><span class="handlebars"><span class="xml">      template: '<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="template-variable">&#123;&#123;msg&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>'</span></span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line">        </span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line"><span class="actionscript">        <span class="string">'hello-world'</span>: HelloWorld,</span></span><br><span class="line"><span class="actionscript">        <span class="string">'hello-tom'</span>: HelloTom,</span></span><br><span class="line"><span class="actionscript">        <span class="string">'hello-jerry'</span>: HelloJerry</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="组件间数据交互"><a href="#组件间数据交互" class="headerlink" title="组件间数据交互"></a>组件间数据交互</h1><h2 id="父组件向子组件传值"><a href="#父组件向子组件传值" class="headerlink" title="父组件向子组件传值"></a>父组件向子组件传值</h2><ul><li><p>组件内部通过props接收传过来的值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">'menu-item'</span>,&#123;</span><br><span class="line">    props: [<span class="string">'title'</span>],</span><br><span class="line">    template: <span class="string">'&lt;div&gt;&#123;&#123; title &#125;&#125;&lt;/div&gt;'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>父组件通过属性将值传递给子组件</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;menu-item title=<span class="string">"来自父组件的数据"</span>&gt;&lt;<span class="regexp">/menu-title&gt;</span></span><br><span class="line"><span class="regexp">&lt;menu-item :title="title"&gt;&lt;/m</span>enu-title&gt;</span><br></pre></td></tr></table></figure><p><strong>演示</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">   &lt;div&gt;&#123;&#123;pmsg&#125;&#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;menu-item :title="ptitle" :content="aaa"&gt;&lt;/m</span>enu-item&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script type="text/</span>javascript<span class="string">" src="</span>vue.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;script type="</span>text/javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">     Vue.component('menu-item',&#123;</span></span><br><span class="line"><span class="string">     props: ['title','content'],</span></span><br><span class="line"><span class="string">     data: function()&#123;</span></span><br><span class="line"><span class="string">     return &#123;</span></span><br><span class="line"><span class="string">     msg: '子组件本身数据'</span></span><br><span class="line"><span class="string">     &#125;</span></span><br><span class="line"><span class="string">     &#125;,</span></span><br><span class="line"><span class="string">     template: '&lt;div&gt;&#123;&#123;msg + "</span>-----<span class="string">" + title + "</span>------<span class="string">" + content&#125;&#125;&lt;/div&gt;'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">     &#125;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">     var vm = new Vue(&#123;</span></span><br><span class="line"><span class="string">      el: '#app',</span></span><br><span class="line"><span class="string">      data: &#123;</span></span><br><span class="line"><span class="string">        pmsg: '父组件的内容',</span></span><br><span class="line"><span class="string">        ptitle: 'aaaaaaaaa',</span></span><br><span class="line"><span class="string">        aaa: 'ssss'</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">  &lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><hr><p><strong>props属性名规则</strong></p><ul><li>在props中使用驼峰形式，模板(html)中需要使用短横线的形式</li><li>字符串形式的模板中没有这个限制<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Vue . component ( <span class="string">'menu-item'</span>，&#123;</span><br><span class="line"><span class="comment">//在JavaScript中是驼峰式的</span></span><br><span class="line">props: [ <span class="string">'menuTitle'</span>],</span><br><span class="line">template: <span class="string">'&lt;div&gt;&#123;&#123; menuTitle &#125; &#125;&lt;/div&gt;'</span></span><br><span class="line">&#125;)</span><br><span class="line">&lt;!-在htm1中是短横线方式的--&gt;</span><br><span class="line">&lt;menu-item menu-title=<span class="string">"nihao"</span>&gt;&lt;<span class="regexp">/menu- item&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="子组件向父组件传值"><a href="#子组件向父组件传值" class="headerlink" title="子组件向父组件传值"></a>子组件向父组件传值</h2><ul><li>子组件通过自定义事件向父组件传递信息<br><code>&lt;button v-on:click= &#39;$emit (&quot;enlarge-text&quot;, 0.1) &#39;&gt;扩 大字体&lt;/button&gt;</code></li><li>父组件监听子组件的事件<br><code>&lt;menu- item v-on: enlarge-text=&#39; fontsize += $event &#39;&gt;&lt;/ menu-i tem&gt;</code></li></ul><p><strong>案例：点击扩大字体</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">'&#123;fontSize: fontSize + "px"&#125;'</span>&gt;</span>&#123;&#123;pmsg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">menu-item</span> @<span class="attr">enlarge-text</span>=<span class="string">'handle($event)'</span>&gt;</span><span class="tag">&lt;/<span class="name">menu-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">     Vue.component(<span class="string">'menu-item'</span>,&#123;</span></span><br><span class="line"><span class="actionscript">     props: [<span class="string">'title'</span>],</span></span><br><span class="line">     </span><br><span class="line">     template: `</span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">'$emit("enlarge-text",5)'</span>&gt;</span>扩大字体<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">      `</span><br><span class="line">     &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        pmsg: <span class="string">'父组件的内容'</span>,</span></span><br><span class="line">        fontSize :10</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"><span class="actionscript">        handle :<span class="function"><span class="keyword">function</span><span class="params">(val)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.fontSize += val;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="非父子组件间传值（兄弟组件间传值）"><a href="#非父子组件间传值（兄弟组件间传值）" class="headerlink" title="非父子组件间传值（兄弟组件间传值）"></a>非父子组件间传值（兄弟组件间传值）</h2><ul><li>单独的事件中心管理组件间的通信<br><code>var eventHub = new Vue ()</code></li></ul><ul><li>监听事件与销毁事件<br><code>eventHub.$on (&#39;add-todo&#39;, ()=&gt;{})</code><br><code>eventHub.$off (&#39;add-todo&#39;)</code></li></ul><ul><li>触发事件<br><code>eventHub.$emit (&#39;add-todo&#39;, id)</code></li></ul><p><strong>案例：点Jerry，tom加2，点tom，jerry加一</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text-jerry</span>&gt;</span><span class="tag">&lt;/<span class="name">text-jerry</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text-tom</span>&gt;</span><span class="tag">&lt;/<span class="name">text-tom</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> hub = <span class="keyword">new</span> Vue();</span></span><br><span class="line">      </span><br><span class="line"><span class="actionscript">      Vue.component(<span class="string">'text-jerry'</span>,&#123;</span></span><br><span class="line"><span class="actionscript">        data: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> &#123;</span></span><br><span class="line">            num: 0</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        template: `</span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>jerry:</span><span class="template-variable">&#123;&#123;num&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">              <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">'handle'</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        `,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="actionscript">          handle:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            hub.$emit(<span class="string">'text-tom'</span>,<span class="number">2</span>);</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        mounted: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="comment">//监听事件</span></span></span><br><span class="line"><span class="actionscript">          hub.$on(<span class="string">'text-jerry'</span>,(val)=&gt;&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.num += val; </span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">'text-tom'</span>,&#123;</span></span><br><span class="line"><span class="actionscript">      data: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line">          num: 0</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      template: `</span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">div</span>&gt;</span>TOM:</span><span class="template-variable">&#123;&#123;num&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">'handle'</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">      `,</span><br><span class="line">      methods:&#123;</span><br><span class="line"><span class="actionscript">        handle:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">          hub.$emit(<span class="string">'text-jerry'</span>,<span class="number">1</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line"><span class="actionscript">      mounted: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        hub.$on(<span class="string">'text-tom'</span>,(val)=&gt;&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.num += val;</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data:&#123;</span><br><span class="line"><span class="actionscript">        msg: <span class="string">'父级组件'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="组件插槽基本用法"><a href="#组件插槽基本用法" class="headerlink" title="组件插槽基本用法"></a>组件插槽基本用法</h2><ul><li>插槽位置<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Vue.component('alert-box',&#123;</span><br><span class="line">template:`</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo-alert -box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Error! <span class="tag">&lt;/ <span class="attr">strong</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    `</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li>插槽内容<br><code>&lt;alert -box&gt;Something bad happened. &lt;/alert-box&gt;</code></li></ul><hr><h2 id="具名插槽"><a href="#具名插槽" class="headerlink" title="具名插槽"></a>具名插槽</h2><p><strong>具名插槽定义：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">'text-juming'</span>,&#123;</span><br><span class="line">    template: <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;div&gt;</span></span><br><span class="line"><span class="string">            &lt;header&gt;</span></span><br><span class="line"><span class="string">                &lt;solt name='header'&gt;&lt;/solt&gt;</span></span><br><span class="line"><span class="string">            &lt;/header&gt;</span></span><br><span class="line"><span class="string">            &lt;main&gt;</span></span><br><span class="line"><span class="string">                &lt;solt&gt;&lt;/solt&gt;</span></span><br><span class="line"><span class="string">            &lt;/main&gt;</span></span><br><span class="line"><span class="string">            &lt;footer&gt;</span></span><br><span class="line"><span class="string">                &lt;solt name='footer'&gt;&lt;/solt&gt;</span></span><br><span class="line"><span class="string">            &lt;/footer&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>具名插槽使用</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">text-juming</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">solt</span>=<span class="string">'header'</span>&gt;</span>标题内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>主要内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">solt</span>=<span class="string">'footer'</span>&gt;</span>底部内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">text-juming</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="作用域插槽"><a href="#作用域插槽" class="headerlink" title="作用域插槽"></a>作用域插槽</h2><p><strong>应用场景:父组件对子组件的内容进行加工处理</strong></p><p><strong>插槽定义</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">'item in list'</span> <span class="attr">:key</span>=<span class="string">item.id</span>''&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">solt</span> <span class="attr">:item</span>=<span class="string">'item'</span>&gt;</span></span><br><span class="line">&#123;&#123;item.name&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">solt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>插槽使用</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fruit-list</span> <span class="attr">:list</span>=<span class="string">'list'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">'slotprops'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span> <span class="attr">v-if</span>=<span class="string">'slotprops.item.current'</span>&gt;</span></span><br><span class="line">&#123;&#123;slotprops.item.text&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fruit-list</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue组件化开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js数组遍历方法</title>
      <link href="/lizibin1999.github.io/article/3e5dcd9d.html"/>
      <url>/lizibin1999.github.io/article/3e5dcd9d.html</url>
      
        <content type="html"><![CDATA[<h1 id="js数组遍历方法"><a href="#js数组遍历方法" class="headerlink" title="js数组遍历方法"></a>js数组遍历方法</h1><h2 id="forEach-遍历数组"><a href="#forEach-遍历数组" class="headerlink" title="forEach() 遍历数组"></a>forEach() 遍历数组</h2><p><code>array.forEach ( function (currentValue, index, arr) )</code></p><ul><li>currentValue :数组当前项的值</li><li>index :数组当前项的索引</li><li>arr :数组对象本身</li></ul><hr><h2 id="filter-筛选数组"><a href="#filter-筛选数组" class="headerlink" title="filter() 筛选数组"></a>filter() 筛选数组</h2><p><code>array.filter(function(currentValue, index, arr))</code></p><ul><li>filter( 方法创建一个新的数组,新数组中的元素是通过检查指定数组中符合条件的所有元素,主要用于筛选数组</li><li>注意它直接返回一个新数组</li><li>currentValue: 数组当前项的值</li><li>index :数组当前项的索引</li><li>arr :数组对象本身</li></ul><p><strong>演示：返回大于20的数据</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">12</span>, <span class="number">66</span>, <span class="number">4</span>, <span class="number">88</span>];</span><br><span class="line"><span class="keyword">var</span> newArr = arr .filter(<span class="function"><span class="keyword">function</span>(<span class="params">value, index</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> value &gt;= <span class="number">20</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span> . log(newArr);</span><br></pre></td></tr></table></figure><hr><h2 id="some-检测数组是否有满足条件的元素"><a href="#some-检测数组是否有满足条件的元素" class="headerlink" title="some() 检测数组是否有满足条件的元素"></a>some() 检测数组是否有满足条件的元素</h2><p><code>array.some (function(currentValue,index, arr))</code></p><ul><li>some() 方法用于检测数组中的元素是否满足指定条件.通俗点查找数组中是否有满足条件的元素</li><li>注意它返回值是布尔值如果查找到这个元素，就返回true,如果查找不到就返回false.</li><li>如果找到第一个满足条件的元素,则终止循环不在继续查找.</li><li>currentValue:数组当前项的值</li><li>index :数组当前项的索引</li><li>arr :数组对象本身</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// some 查找数组中是否有满足条件的元素</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">10</span>, <span class="number">30</span>，<span class="number">4</span>];</span><br><span class="line"><span class="keyword">var</span> flag = arr . some (<span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line"><span class="comment">// return value &gt;= 20;</span></span><br><span class="line"><span class="keyword">return</span> value &lt; <span class="number">3</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span><span class="number">.1</span>og(flag);</span><br><span class="line"><span class="comment">// 查找是否有pink</span></span><br><span class="line"><span class="keyword">var</span> arr1 = [ <span class="string">'red'</span>, <span class="string">'pink'</span>, <span class="string">'blue'</span>];</span><br><span class="line"><span class="keyword">var</span> flag1 = arr1. some (<span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> vuale == <span class="string">'pink'</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span><span class="number">.1</span>og(flag1);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js数组方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue小案例-过滤器格式化日期</title>
      <link href="/lizibin1999.github.io/article/d6d1bb30.html"/>
      <url>/lizibin1999.github.io/article/d6d1bb30.html</url>
      
        <content type="html"><![CDATA[<p><strong>过滤器格式化日期:</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;date | format('yyyy-MM-dd hh:mm:ss')&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    Vue.filter(<span class="string">'format'</span>, <span class="function"><span class="keyword">function</span><span class="params">(value, arg)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">dateFormat</span><span class="params">(date, format)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">if</span> (<span class="keyword">typeof</span> date === <span class="string">"string"</span>) &#123;</span></span><br><span class="line"><span class="javascript">              <span class="keyword">var</span> mts = date.match(<span class="regexp">/(\/Date\((\d+)\)\/)/</span>);</span></span><br><span class="line">              if (mts &amp;&amp; mts.length &gt;= 3) &#123;</span><br><span class="line"><span class="javascript">                  date = <span class="built_in">parseInt</span>(mts[<span class="number">2</span>]);</span></span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line"><span class="javascript">          date = <span class="keyword">new</span> <span class="built_in">Date</span>(date);</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">if</span> (!date || date.toUTCString() == <span class="string">"Invalid Date"</span>) &#123;</span></span><br><span class="line"><span class="actionscript">              <span class="keyword">return</span> <span class="string">""</span>;</span></span><br><span class="line">          &#125;</span><br><span class="line"><span class="actionscript">          <span class="keyword">var</span> map = &#123;</span></span><br><span class="line"><span class="actionscript">              <span class="string">"M"</span>: date.getMonth() + <span class="number">1</span>, <span class="comment">//月份 </span></span></span><br><span class="line"><span class="actionscript">              <span class="string">"d"</span>: date.getDate(), <span class="comment">//日 </span></span></span><br><span class="line"><span class="actionscript">              <span class="string">"h"</span>: date.getHours(), <span class="comment">//小时 </span></span></span><br><span class="line"><span class="actionscript">              <span class="string">"m"</span>: date.getMinutes(), <span class="comment">//分 </span></span></span><br><span class="line"><span class="actionscript">              <span class="string">"s"</span>: date.getSeconds(), <span class="comment">//秒 </span></span></span><br><span class="line"><span class="javascript">              <span class="string">"q"</span>: <span class="built_in">Math</span>.floor((date.getMonth() + <span class="number">3</span>) / <span class="number">3</span>), <span class="comment">//季度 </span></span></span><br><span class="line"><span class="actionscript">              <span class="string">"S"</span>: date.getMilliseconds() <span class="comment">//毫秒 </span></span></span><br><span class="line">          &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">          format = format.replace(<span class="regexp">/([yMdhmsqS])+/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">all, t</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">              <span class="keyword">var</span> v = map[t];</span></span><br><span class="line"><span class="actionscript">              <span class="keyword">if</span> (v !== <span class="literal">undefined</span>) &#123;</span></span><br><span class="line">                  if (all.length &gt; 1) &#123;</span><br><span class="line"><span class="actionscript">                      v = <span class="string">'0'</span> + v;</span></span><br><span class="line">                      v = v.substr(v.length - 2);</span><br><span class="line">                  &#125;</span><br><span class="line"><span class="actionscript">                  <span class="keyword">return</span> v;</span></span><br><span class="line"><span class="actionscript">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t === <span class="string">'y'</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                  <span class="keyword">return</span> (date.getFullYear() + <span class="string">''</span>).substr(<span class="number">4</span> - all.length);</span></span><br><span class="line">              &#125;</span><br><span class="line"><span class="actionscript">              <span class="keyword">return</span> all;</span></span><br><span class="line">          &#125;);</span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> format;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> dateFormat(value, arg);</span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="javascript">        date: <span class="keyword">new</span> <span class="built_in">Date</span>()</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue补充知识</title>
      <link href="/lizibin1999.github.io/article/2ef8a9e1.html"/>
      <url>/lizibin1999.github.io/article/2ef8a9e1.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-数组相关API"><a href="#1-数组相关API" class="headerlink" title="1.数组相关API"></a>1.数组相关API</h1><h2 id="1-变异方法（修改原有数据）"><a href="#1-变异方法（修改原有数据）" class="headerlink" title="(1)变异方法（修改原有数据）"></a>(1)变异方法（修改原有数据）</h2><ul><li>push()</li><li>pop()</li><li>shift()</li><li>unshift()</li><li>splice(索引,1) 删除数组中指定元素 </li><li>sort()</li><li>reverse()<h2 id="2-替换数组-生成新的数组"><a href="#2-替换数组-生成新的数组" class="headerlink" title="(2)替换数组(生成新的数组)"></a>(2)替换数组(生成新的数组)</h2></li><li>fikter()</li><li>concat()</li><li>slice() 截取数组</li></ul><h2 id="（3）修改响应式数据"><a href="#（3）修改响应式数据" class="headerlink" title="（3）修改响应式数据"></a>（3）修改响应式数据</h2><p><code>Vue.set(vm.items, indexOfltem, newValue)</code><br><code>vm.$pet(vm.items, indexOfltem, newValue)</code></p><ul><li>参数一 表示要处理的数组名称</li><li>参数二表示要处理的数组的索引</li><li>参数三表示要处理的数组的值</li></ul><h2 id="跟路由重定向"><a href="#跟路由重定向" class="headerlink" title="跟路由重定向"></a>跟路由重定向</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">path: <span class="string">'/'</span>,</span><br><span class="line">redirect:<span class="string">'/index'</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">path:<span class="string">'index'</span>,</span><br><span class="line">component:Index</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图片引入"><a href="#图片引入" class="headerlink" title="图片引入"></a>图片引入</h2><ul><li>图片放在assets中新建文件夹</li><li>在script中引入<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> img1 <span class="keyword">from</span> <span class="string">"../assets/img1.jpg"</span>;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="写vue应用时，想让根节点满屏"><a href="#写vue应用时，想让根节点满屏" class="headerlink" title="写vue应用时，想让根节点满屏"></a>写vue应用时，想让根节点满屏</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">template</span>&gt;</span><br><span class="line">  &lt;div id="app"&gt;</span><br><span class="line">     我是根节点</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span>,<span class="selector-tag">body</span>,<span class="selector-id">#app</span> &#123;<span class="attribute">height</span>: <span class="number">100%</span>;&#125;</span><br></pre></td></tr></table></figure><h2 id="将token保存在浏览器"><a href="#将token保存在浏览器" class="headerlink" title="将token保存在浏览器"></a>将token保存在浏览器</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.sessionStorage.setItem(<span class="string">"token"</span>,res.data.token)</span><br></pre></td></tr></table></figure><h2 id="退出登录"><a href="#退出登录" class="headerlink" title="退出登录"></a>退出登录</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.sessionStorage.clear()</span><br><span class="line"><span class="keyword">this</span>.$router.push(<span class="string">'/login'</span>)</span><br></pre></td></tr></table></figure><h2 id="路由导航守卫控制访问权限"><a href="#路由导航守卫控制访问权限" class="headerlink" title="路由导航守卫控制访问权限"></a>路由导航守卫控制访问权限</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">router.beforeEach(<span class="function">(<span class="params">to,<span class="keyword">from</span>, next</span>) =&gt;</span>&#123;</span><br><span class="line"><span class="comment">//如果访问登录页面直接放行</span></span><br><span class="line"><span class="keyword">if</span>(to.path === <span class="string">'/login'</span>) <span class="keyword">return</span> next()</span><br><span class="line"><span class="comment">// 从sessionStorage 中获取到 token </span></span><br><span class="line"><span class="keyword">const</span> tokenStr = <span class="built_in">window</span>.sessionStorage.getItem(<span class="string">'token'</span>)</span><br><span class="line"><span class="comment">//没有token,强制跳转到登录页</span></span><br><span class="line"><span class="keyword">if</span> (!tokenStr) <span class="keyword">return</span> next(<span class="string">'login'</span>)</span><br><span class="line">next()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><hr><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">'../components/home.vue'</span></span><br><span class="line"><span class="keyword">import</span> Login <span class="keyword">from</span> <span class="string">'../components/Login.vue'</span></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes:[</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">"/"</span>,<span class="attr">redirect</span>:<span class="string">"/Login"</span>&#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">"/Login"</span>, <span class="attr">component</span>: Login&#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">"/Home"</span>,<span class="attr">component</span>: Home &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to,<span class="keyword">from</span>, next</span>) =&gt;</span>&#123;</span><br><span class="line"><span class="comment">//如果访问登录页面直接放行</span></span><br><span class="line"><span class="keyword">if</span>(to.path === <span class="string">'/Login'</span>) <span class="keyword">return</span> next()</span><br><span class="line"><span class="comment">// 从sessionStorage 中获取到 token </span></span><br><span class="line"><span class="keyword">const</span> tokenStr = <span class="built_in">window</span>.sessionStorage.getItem(<span class="string">'token'</span>)</span><br><span class="line"><span class="comment">//没有token,强制跳转到登录页</span></span><br><span class="line"><span class="keyword">if</span> (!tokenStr) <span class="keyword">return</span> next(<span class="string">'/Login'</span>)</span><br><span class="line">next()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h2 id="子路由"><a href="#子路由" class="headerlink" title="子路由"></a>子路由</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">path: <span class="string">'home'</span>,</span><br><span class="line">component: Home,</span><br><span class="line">redirect: <span class="string">'/welcome'</span>,</span><br><span class="line">children: [&#123;</span><br><span class="line">path: <span class="string">'welcome'</span>,</span><br><span class="line">component: Welcome</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="body-parser"><a href="#body-parser" class="headerlink" title="body-parser"></a>body-parser</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span>&#125;))</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.json)</span><br></pre></td></tr></table></figure><h2 id="http协议"><a href="#http协议" class="headerlink" title="http协议"></a>http协议</h2><ul><li>get获取数据</li><li>post添加数据</li><li>put覆盖式修改</li><li>patch增量修改</li><li>delete删除数据</li></ul><h2 id="JWT"><a href="#JWT" class="headerlink" title="JWT"></a>JWT</h2><ul><li>npm install jsonwebtoken<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jwt = <span class="built_in">require</span>(<span class="string">'jsonwebtoken'</span>);</span><br><span class="line"><span class="comment">//-------------------  信息------------密钥</span></span><br><span class="line"><span class="keyword">var</span> token = jwt.sign(&#123; <span class="attr">foo</span>: <span class="string">'bar'</span> &#125;, <span class="string">'shhhhh'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//验证token</span></span><br><span class="line">jwt.verify(token, <span class="string">'shhhhh'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, decoded</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(decoded.foo) <span class="comment">// bar</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h2 id="VUE配置axios-amp-axios请求拦截器"><a href="#VUE配置axios-amp-axios请求拦截器" class="headerlink" title="VUE配置axios &amp; axios请求拦截器"></a>VUE配置axios &amp; axios请求拦截器</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在vue ui 依赖 运行依赖中下载axios</span></span><br><span class="line"><span class="comment">//在main.js中</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="comment">// 配置请求的根路径</span></span><br><span class="line">axios.defaults.baseURL = <span class="string">'http://localhost:3001/'</span></span><br><span class="line"><span class="comment">//请求拦截器</span></span><br><span class="line">axios.interceptors.request.use(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">comfig.headers.Authorization = <span class="built_in">window</span>.sessionStorage.getItem(<span class="string">'token'</span>)</span><br><span class="line"><span class="keyword">return</span> config</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">Vue.prototype.$http = axios</span><br></pre></td></tr></table></figure><h2 id="vue占满全屏"><a href="#vue占满全屏" class="headerlink" title="vue占满全屏"></a>vue占满全屏</h2><ul><li>在assets中建立css文件 建立global.css<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-id">#app</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue补充知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue小案例-验证用户名是否可用</title>
      <link href="/lizibin1999.github.io/article/15c3fbc2.html"/>
      <url>/lizibin1999.github.io/article/15c3fbc2.html</url>
      
        <content type="html"><![CDATA[<p><strong>侦听器案例：验证用户名是否可用</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model.lazy</span>=<span class="string">'uname'</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;tip&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,</span></span><br><span class="line">data: &#123;</span><br><span class="line"><span class="actionscript">uname:<span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">tip: <span class="string">''</span></span></span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line"><span class="actionscript"><span class="comment">//调用接口，用定时器模拟接口</span></span></span><br><span class="line"><span class="actionscript">checkName: <span class="function"><span class="keyword">function</span><span class="params">(uname)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> that = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">if</span>(uname == <span class="string">'lizibin'</span>)&#123;</span></span><br><span class="line"><span class="actionscript">that.tip = <span class="string">'用户名已存在，请换一个'</span>;</span></span><br><span class="line"><span class="actionscript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">that.tip = <span class="string">'用户名可用'</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,2000);</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">watch:&#123;</span><br><span class="line"><span class="actionscript">uname: <span class="function"><span class="keyword">function</span><span class="params">(val)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">this</span>.checkName(val);</span></span><br><span class="line"><span class="actionscript"><span class="comment">//修改提示信息</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">this</span>.tip = <span class="string">'正在验证'</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;) </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p><strong>效果：</strong><br><a href="https://imgchr.com/i/dizTTH" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/08/15/dizTTH.gif" alt="dizTTH.gif" border="0" /></a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础(二)</title>
      <link href="/lizibin1999.github.io/article/6148dddc.html"/>
      <url>/lizibin1999.github.io/article/6148dddc.html</url>
      
        <content type="html"><![CDATA[<h1 id="Vue常用特性"><a href="#Vue常用特性" class="headerlink" title="Vue常用特性"></a>Vue常用特性</h1><ul><li>表单操作</li><li>自定义指令</li><li>计算属性</li><li>过滤器</li><li>侦听器</li><li>生命周期</li></ul><h2 id="1-表单操作"><a href="#1-表单操作" class="headerlink" title="1.表单操作"></a>1.表单操作</h2><ul><li>Input单行文本</li><li>textarea多行文本</li><li>select下拉多选</li><li>radio单选框</li><li>checkbox多选框</li></ul><p><strong>代码示例：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  form div &#123;</span><br><span class="line">    height: 40px;</span><br><span class="line">    line-height: 40px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-tag">form</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(4)</span> &#123;</span></span><br><span class="line">    height: auto;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-tag">form</span> <span class="selector-tag">div</span> <span class="selector-tag">span</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line">    display: inline-block;</span><br><span class="line">    width: 100px;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://itcast.cn"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>姓名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">'uname'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>性别：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"male"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">v-model</span>=<span class="string">'gender'</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"male"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"female"</span> <span class="attr">value</span>=<span class="string">"2"</span> <span class="attr">v-model</span>=<span class="string">'gender'</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"female"</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>爱好：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"ball"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">v-model</span>=<span class="string">'hobby'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"ball"</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"sing"</span> <span class="attr">value</span>=<span class="string">"2"</span> <span class="attr">v-model</span>=<span class="string">'hobby'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"sing"</span>&gt;</span>唱歌<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"code"</span> <span class="attr">value</span>=<span class="string">"3"</span> <span class="attr">v-model</span>=<span class="string">'hobby'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"code"</span>&gt;</span>写代码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>职业：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--multiple 控制下拉菜单多选--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">'occupation'</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>请选择职业...<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>教师<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>软件工程师<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>律师<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>个人简介：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--textarea的默认值不能写在标签里，只能用v-model的方式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">'desc'</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--具体开发中要阻止submit的默认提交行为，采用js的方式提交--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> @<span class="attr">click.prevent</span>=<span class="string">'handle'</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line">      表单基本操作</span><br><span class="line">    */</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        uname: <span class="string">'lisi'</span>,</span></span><br><span class="line">        gender: 2,</span><br><span class="line"><span class="actionscript">        hobby: [<span class="string">'2'</span>,<span class="string">'3'</span>],</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// occupation: 3</span></span></span><br><span class="line"><span class="actionscript">        occupation: [<span class="string">'2'</span>,<span class="string">'3'</span>],</span></span><br><span class="line"><span class="actionscript">        desc: <span class="string">'nihao'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"><span class="actionscript">        handle: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="comment">// console.log(this.uname)</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// console.log(this.gender)</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// console.log(this.hobby.toString())</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// console.log(this.occupation)</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="keyword">this</span>.desc)</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果：</strong><br><img src="https://s1.ax1x.com/2020/08/13/dSUwWt.png" alt="dSUwWt.png" border="0" /></p><hr><h2 id="2-表单域修饰符"><a href="#2-表单域修饰符" class="headerlink" title="2.表单域修饰符"></a>2.表单域修饰符</h2><ul><li>number :转化为数值<br><code>&lt;input type=&quot;text&quot; v-model.number=&quot;msg&quot;&gt;</code></li><li>trim :去掉开始和结尾的空格(中间的去不了)<br><code>&lt;input type=&quot;text&quot; v-model.trim=&quot;msg&quot;&gt;</code></li><li>lazy:将input事件切换为change事件,(失去焦点时触发)<br><code>&lt;input type=&quot;text&quot; v-model.lazy=&quot;msg&quot;&gt;</code></li></ul><hr><h2 id="3-自定义指令"><a href="#3-自定义指令" class="headerlink" title="3.自定义指令"></a>3.自定义指令</h2><ul><li>自定义指令的语法规则</li><li>效果：获取元素焦点<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Vue.directive(<span class="string">'focus'</span> &#123;</span><br><span class="line">    inserted: <span class="function"><span class="keyword">function</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//el表示指令绑定的元素</span></span><br><span class="line">    el.focus ();</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure></li><li>自定义指令用法<br><code>&lt;input type=&quot;text&quot; v-focus&gt;</code></li></ul><hr><p><strong>带参数的自定义指令 （改变输入框的背景颜色）</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--改变输入框背景颜色--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-color</span>=<span class="string">'msg'</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">Vue.directive(<span class="string">'color'</span>,&#123;</span></span><br><span class="line"><span class="actionscript">bind: <span class="function"><span class="keyword">function</span><span class="params">(el,binding)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//根据指令的参数设置背景色</span></span></span><br><span class="line">el.style.backgroundColor = binding.value.color;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,</span></span><br><span class="line">data: &#123;</span><br><span class="line">msg:&#123;</span><br><span class="line"><span class="actionscript">color: <span class="string">'orange'</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果：</strong><br><img src="https://s1.ax1x.com/2020/08/14/d9jVns.png" alt="d9jVns.png" border="0" /></p><hr><p><strong>局部指令：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-color</span>=<span class="string">'msg'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-focus</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line">      自定义指令-局部指令</span><br><span class="line">    */</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line">        msg: &#123;</span><br><span class="line"><span class="actionscript">          color: <span class="string">'red'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"><span class="actionscript">        handle: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">          </span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      directives: &#123;</span><br><span class="line">        color: &#123;</span><br><span class="line"><span class="actionscript">          bind: <span class="function"><span class="keyword">function</span><span class="params">(el, binding)</span></span>&#123;</span></span><br><span class="line">            el.style.backgroundColor = binding.value.color;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        focus: &#123;</span><br><span class="line"><span class="actionscript">          inserted: <span class="function"><span class="keyword">function</span><span class="params">(el)</span> </span>&#123;</span></span><br><span class="line">            el.focus();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-计算属性"><a href="#4-计算属性" class="headerlink" title="4.计算属性"></a>4.计算属性</h2><ul><li>1.为何需要计算属性?<br>表达式的计算逻辑可能会比较复杂,使用计算属性可以使模板内容更加简洁</li><li>2.计算属性的用法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">  reversedMessage: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span> .msg.split(<span class="string">''</span>) .reverse() .join(<span class="string">''</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>代码示例：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;reverseString&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line">      计算属性</span><br><span class="line">    */</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        msg: <span class="string">'Nihao'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      computed: &#123;</span><br><span class="line"><span class="actionscript">        reverseString: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="keyword">this</span>.msg.split(<span class="string">''</span>).reverse().join(<span class="string">''</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="5-侦听器"><a href="#5-侦听器" class="headerlink" title="5.侦听器"></a>5.侦听器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">watch: &#123;</span><br><span class="line">  //方法与侦听的属性名一致</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>侦听器案例：验证用户名是否可用</strong><br><a src='http://www.lizibin.top/article/15c3fbc2.html'>链接地址</a></p><hr><h2 id="6-过滤器"><a href="#6-过滤器" class="headerlink" title="6.过滤器"></a>6.过滤器</h2><ul><li><p>过滤器的作用是什么?<br>格式化数据,比如将字符串格式化为首字母大写,将日期格式化为指定的格式等</p></li><li><p>自定义过滤器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vue. filter(过滤器名称，function (value) &#123;</span><br><span class="line">//过滤器业务逻辑</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>过滤器的使用<br><code>&lt;div&gt;{ {msgI upper}}&lt;/div&gt;</code><br><code>&lt;div&gt;{ {msgI upperI lower}}&lt;/div&gt;</code><br><code>&lt;div v-bind:id=&quot;idI formatId&quot;&gt;&lt;/div&gt;</code></p></li><li><p>局部过滤器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">filters: &#123;</span><br><span class="line">capitalize: fuliction() &#123; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>案例，输入字符，第一次把首字母转换为大写，第二次转换为小写</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">'msg'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;msg | upper&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;msg | upper | lower&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:abc</span>=<span class="string">'msg | upper'</span>&gt;</span>测试数据<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line">      过滤器</span><br><span class="line">      1、可以用与插值表达式和属性绑定</span><br><span class="line">      2、支持级联操作</span><br><span class="line">    */</span><br><span class="line"><span class="actionscript">    <span class="comment">// Vue.filter('upper', function(val) &#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//   return val.charAt(0).toUpperCase() + val.slice(1);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="actionscript">    Vue.filter(<span class="string">'lower'</span>, <span class="function"><span class="keyword">function</span><span class="params">(val)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> val.charAt(<span class="number">0</span>).toLowerCase() + val.slice(<span class="number">1</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        msg: <span class="string">''</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      filters: &#123;</span><br><span class="line"><span class="actionscript">        upper: <span class="function"><span class="keyword">function</span><span class="params">(val)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> val.charAt(<span class="number">0</span>).toUpperCase() + val.slice(<span class="number">1</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果</strong><br><img src="https://s1.ax1x.com/2020/08/15/dFikOP.png" alt="dFikOP.png" border="0" /></p><hr><h2 id="7-生命周期"><a href="#7-生命周期" class="headerlink" title="7.生命周期"></a>7.生命周期</h2><p><strong>Vue实例的产生过程</strong></p><ul><li>beforeCreate 在实例初始化之后,数据观测和事件配置之前被调用。</li><li>created在实例创建完成后被立即调用。</li><li>beforeMount 在挂载开始之前被调用。</li><li>mounted el被新创建的vm.$el替换,并挂载到实例上去之后调用该钩子。</li><li>beforeUpdate 数据更新时调用,发生在虚拟DOM打补丁之前。</li><li>updated 由于数据更改导致的虚拟DOM重新渲染和打补丁, 在这之后会调用该钩子。</li><li>beforeDestroy 实例销毁之前调用。</li><li>destroyed 实例销毁后调用。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS不熟悉的操作</title>
      <link href="/lizibin1999.github.io/article/a57f12b6.html"/>
      <url>/lizibin1999.github.io/article/a57f12b6.html</url>
      
        <content type="html"><![CDATA[<h1 id="CSS不熟悉的操作"><a href="#CSS不熟悉的操作" class="headerlink" title="CSS不熟悉的操作"></a>CSS不熟悉的操作</h1><p><strong>在做项目的时候会用到很多不熟悉的CSS操作，那么何不把这些CSS样式整理一下呢？？</strong></p><h2 id="1-cursor-光标"><a href="#1-cursor-光标" class="headerlink" title="1.cursor 光标"></a>1.cursor 光标</h2><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>url</td><td>需使用的自定义光标的 URL。注释：请在此列表的末端始终定义一种普通的光标，以防没有由 URL 定义的可用光标。</td></tr><tr><td>default</td><td>默认光标（通常是一个箭头）</td></tr><tr><td>auto</td><td>默认。浏览器设置的光标。</td></tr><tr><td>crosshair</td><td>光标呈现为十字线。</td></tr><tr><td>pointer</td><td>光标呈现为指示链接的指针（一只手）</td></tr><tr><td>move</td><td>此光标指示某对象可被移动。</td></tr><tr><td></td><td>e-resize</td></tr><tr><td>ne-resize</td><td>此光标指示矩形框的边缘可被向上及向右移动（北/东）。</td></tr><tr><td>nw-resize</td><td>此光标指示矩形框的边缘可被向上及向左移动（北/西）。</td></tr><tr><td>n-resize</td><td>此光标指示矩形框的边缘可被向上（北）移动。</td></tr><tr><td>se-resize</td><td>此光标指示矩形框的边缘可被向下及向右移动（南/东）。</td></tr><tr><td>sw-resize</td><td>此光标指示矩形框的边缘可被向下及向左移动（南/西）。</td></tr><tr><td>s-resize</td><td>此光标指示矩形框的边缘可被向下移动（南）。</td></tr><tr><td>w-resize</td><td>此光标指示矩形框的边缘可被向左移动（西）。</td></tr><tr><td>text</td><td>此光标指示文本。</td></tr><tr><td>wait</td><td>此光标指示程序正忙（通常是一只表或沙漏）。</td></tr><tr><td>help</td><td>此光标指示可用的帮助（通常是一个问号或一个气球）。</td></tr></tbody></table><h2 id="flex"><a href="#flex" class="headerlink" title="flex"></a>flex</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">flex</span>;</span><br><span class="line">flex-wrap: wrap;//换行</span><br><span class="line"><span class="selector-tag">justify-content</span>: <span class="selector-tag">space-between</span>;</span><br></pre></td></tr></table></figure><h2 id="盒子不被撑大"><a href="#盒子不被撑大" class="headerlink" title="盒子不被撑大"></a>盒子不被撑大</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box-sizing</span>: <span class="selector-tag">border-box</span>;</span><br></pre></td></tr></table></figure><h2 id="子元素选择"><a href="#子元素选择" class="headerlink" title="子元素选择"></a>子元素选择</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">text</span>: <span class="selector-tag">nth-child</span>(2)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS不熟悉的操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue小案例--tab栏切换</title>
      <link href="/lizibin1999.github.io/article/2d1461cb.html"/>
      <url>/lizibin1999.github.io/article/2d1461cb.html</url>
      
        <content type="html"><![CDATA[<h1 id="Vue小案例–tab栏切换"><a href="#Vue小案例–tab栏切换" class="headerlink" title="Vue小案例–tab栏切换"></a>Vue小案例–tab栏切换</h1><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.tab</span> <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line">            overflow: hidden;</span><br><span class="line">            padding: 0;</span><br><span class="line">            margin: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.tab</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">            padding: 0;</span><br><span class="line">            float: left;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 45px;</span><br><span class="line">            line-height: 45px;</span><br><span class="line">            list-style: none;</span><br><span class="line">            text-align: center;</span><br><span class="line">            border-top: 1px solid blue;</span><br><span class="line">            border-right: 1px solid blue;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.tab</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line">            border-left: 1px solid blue;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.tab</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.active</span> &#123;</span></span><br><span class="line">            background-color: orange;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.tab</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line">            width: 500px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            display: none;</span><br><span class="line">            text-align: center;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">            line-height: 300px;</span><br><span class="line">            border: 1px solid blue;</span><br><span class="line">            border-top: 0px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.tab</span> <span class="selector-tag">div</span><span class="selector-class">.current</span> &#123;</span></span><br><span class="line">            display: block;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            增加tab栏 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-on:click</span>=<span class="string">'change(index)'</span> <span class="attr">:class</span>=<span class="string">'currentIndex==index?"active":""'</span> <span class="attr">:key</span>=<span class="string">'item.id'</span> <span class="attr">v-for</span>=<span class="string">'(item,index) in list'</span>&gt;</span>&#123;&#123;item.title&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">'currentIndex==index?"current":""'</span> <span class="attr">:key</span>=<span class="string">'item.id'</span> <span class="attr">v-for</span>=<span class="string">'(item, index) in list'</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"item.path"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">                                                              </span><br><span class="line">                                                            */</span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#app'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                currentIndex: <span class="number">0</span>, <span class="comment">// 选项卡当前的索引</span></span></span><br><span class="line">                list: [&#123;</span><br><span class="line">                    id: 1,</span><br><span class="line"><span class="actionscript">                    title: <span class="string">'apple'</span>,</span></span><br><span class="line"><span class="actionscript">                    path: <span class="string">'img/apple.png'</span></span></span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    id: 2,</span><br><span class="line"><span class="actionscript">                    title: <span class="string">'orange'</span>,</span></span><br><span class="line"><span class="actionscript">                    path: <span class="string">'img/orange.png'</span></span></span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    id: 3,</span><br><span class="line"><span class="actionscript">                    title: <span class="string">'lemon'</span>,</span></span><br><span class="line"><span class="actionscript">                    path: <span class="string">'img/lemon.png'</span></span></span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                change: <span class="function"><span class="keyword">function</span><span class="params">(index)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 在这里实现选项卡切换操作：本质就是操作类名</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 如何操作类名？就是通过currentIndex</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.currentIndex = index;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p><strong>效果:</strong><br><img src="https://s1.ax1x.com/2020/08/13/azjOoT.gif" alt="azjOoT.gif" border="0" /></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础(一)</title>
      <link href="/lizibin1999.github.io/article/cefdeca9.html"/>
      <url>/lizibin1999.github.io/article/cefdeca9.html</url>
      
        <content type="html"><![CDATA[<h1 id="Vue基本使用"><a href="#Vue基本使用" class="headerlink" title="Vue基本使用"></a>Vue基本使用</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">/*Vue基本使用步骤</span><br><span class="line">1.需要提供标签用于填充数据</span><br><span class="line">2.引入Vue.js库文件</span><br><span class="line">3.把vue提供的数据填充到标签里面</span><br><span class="line">*/</span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,<span class="comment">//标签id</span></span></span><br><span class="line">data: &#123;</span><br><span class="line"><span class="actionscript">msg:<span class="string">'hello vue'</span><span class="comment">//标签内容</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>el: 元素的挂载位置（值可以时CSS选择器或者Dom元素）</li><li>data: 模型数据（值是一个对象）</li><li>插值表达式:（将数据填充到HTMl标签中，支持基本的计算操作）</li></ul><hr><h2 id="1-指令"><a href="#1-指令" class="headerlink" title="1.指令"></a>1.指令</h2><ul><li>指令就是一个自定义属性</li><li>Vue中指令都是以 v-  开头</li></ul><hr><h3 id="1-1-v-clock-解决插值语法的闪烁问题"><a href="#1-1-v-clock-解决插值语法的闪烁问题" class="headerlink" title="1.1 v-clock 解决插值语法的闪烁问题"></a>1.1 v-clock 解决插值语法的闪烁问题</h3><p><em>演示：</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-attr">[v-cloak]</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">display</span><span class="selector-pseudo">:none</span>;</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-cloak</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">/*</span><br><span class="line">v-closk指令的用法</span><br><span class="line">1.提供样式</span><br><span class="line">  [v-cloak]&#123;</span><br><span class="line">display:none;</span><br><span class="line">  &#125;</span><br><span class="line"> 2.在插值表达式所在的标签中添加v-cloak命令</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,<span class="comment">//标签id</span></span></span><br><span class="line">data: &#123;</span><br><span class="line"><span class="actionscript">msg:<span class="string">'hello vue'</span><span class="comment">//标签内容</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="1-2-数据绑定指令"><a href="#1-2-数据绑定指令" class="headerlink" title="1.2 数据绑定指令"></a>1.2 数据绑定指令</h3><ul><li><strong>v-text填充纯文本</strong> 相比插值表达式更加简洁</li><li><strong>v-html填充HTML片段</strong> 存在安全问题，本网站内部数据可以使用,来自第三方的数据不可以用</li><li><strong>v-pre填充原始信息</strong> 显示原始信息,跳过编译过程(分析编译过程)</li></ul><p><strong>演示：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-text</span> =<span class="string">'msg'</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,<span class="comment">//标签id</span></span></span><br><span class="line">data: &#123;</span><br><span class="line"><span class="actionscript">msg:<span class="string">'hello vue'</span><span class="comment">//标签内容</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="1-3-数据响应式"><a href="#1-3-数据响应式" class="headerlink" title="1.3 数据响应式"></a>1.3 数据响应式</h3><ul><li><strong>如何理解响应式</strong>  htmI5中的响应式(屏幕尺寸的变化导致样式的变化)</li><li><strong>数据的响应式</strong> (数据的变化导致页面内容的变化)</li><li><strong>什么是数据绑定</strong>  数据绑定将数据填充到标签中</li><li><strong>v-once只编译一次</strong>  显示内容之后不再具有响应式功能<br><strong>v-once的应用场景</strong>:如果显示的信息后续不需要再修改，你们可以使用v-once,这样可以提高性能。</li></ul><hr><h3 id="1-4-双向数据绑定"><a href="#1-4-双向数据绑定" class="headerlink" title="1.4 双向数据绑定"></a>1.4 双向数据绑定</h3><ul><li>什么是双向数据绑定？<img src="https://s1.ax1x.com/2020/08/11/aX3xln.png" alt="aX3xln.png" border="0" /></li></ul><p><em>代码：</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">'msg'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,<span class="comment">//标签id</span></span></span><br><span class="line">data: &#123;</span><br><span class="line"><span class="actionscript">msg:<span class="string">'hello vue'</span><span class="comment">//标签内容</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="1-5-事件绑定"><a href="#1-5-事件绑定" class="headerlink" title="1.5 事件绑定"></a>1.5 事件绑定</h3><ul><li>Vue如何处理事件?</li></ul><ul><li>v-on指令用法<br><code>&lt;input type= &#39;button&#39; v-on:click=&#39;num+ +&#39;/&gt;</code></li><li>v-on简写形式<br><code>&lt;input type= &#39;button&#39; @click= &#39;num++&#39;/&gt;</code></li></ul><p><strong>案例：点击按钮实现累加</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">'handle'</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,<span class="comment">//标签id</span></span></span><br><span class="line">data: &#123;</span><br><span class="line">num: 0</span><br><span class="line">&#125;,</span><br><span class="line"><span class="actionscript"><span class="comment">//vue方法</span></span></span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="actionscript">handle:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">this</span>.num++</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果：</strong><br><img src="https://s1.ax1x.com/2020/08/12/ajQBj0.png" alt="ajQBj0.png" border="0" /></p><hr><ul><li>事件函数的调用方式</li><li>直接绑定函数名称<br><code>&lt;button v-on:click=&#39;say&#39;&gt;Hello&lt;/button&gt;</code></li><li>调用函数<br><code>&lt;button v-on:click=&#39;say()&#39;&gt;Say hi&lt;/button&gt;</code></li><li>事件函数参数传递,普通参数和事件对象<br><code>&lt;button v-on:click=&#39;say(&quot;hi&quot;, $event) &#39;&gt;Say hi &lt;/button&gt;</code></li></ul><p><strong>注意：</strong> 事件绑定-参数传递</p><ul><li>1、如果事件直接绑定函数名称，那么默认会传递事件对象作为事件函数的第一 个参数</li><li>2、如果事件绑定函数调用，那么事件对象必须作为最后-一个参数显示传递，并且事件对象的名称必须是$event</li></ul><hr><h3 id="1-6-事件修饰符"><a href="#1-6-事件修饰符" class="headerlink" title="1.6 事件修饰符"></a>1.6 事件修饰符</h3><ul><li>stop 阻止冒泡<br><code>&lt;a v-on:click.stop=&#39;handle&#39;&gt;跳转&lt;/a&gt;</code></li></ul><ul><li>prevent 阻止默认行为<br><code>&lt;a v-on:click.prevent=&#39;handle&#39;&gt;跳转&lt;/a&gt;</code></li></ul><hr><h3 id="1-7-按键修饰符"><a href="#1-7-按键修饰符" class="headerlink" title="1.7 按键修饰符"></a>1.7 按键修饰符</h3><ul><li>.enter回车键<br><code>&lt;input v-on:keyup.enter=&#39;submit&#39;&gt;</code></li></ul><p><strong>应用场景：</strong> 表单登录点回车</p><ul><li>.delete删除键<br><code>&lt;input v-on:keyup.delete=&#39;handle&#39;&gt;</code></li></ul><p><strong>应用场景：</strong> 表单点delete键删除全部内容</p><hr><h3 id="1-8-自定义按键修饰符"><a href="#1-8-自定义按键修饰符" class="headerlink" title="1.8 自定义按键修饰符"></a>1.8 自定义按键修饰符</h3><ul><li>全局config.keyCodes对象<br><code>Vue.config.keyCodes.f1 = 112</code></li></ul><hr><h3 id="1-9-属性绑定"><a href="#1-9-属性绑定" class="headerlink" title="1.9 属性绑定"></a>1.9 属性绑定</h3><ul><li>Vue如何动态处理属性?<br>V- bind指令用法<br><code>&lt;a v-bind:href=&#39;url&#39;&gt;跳转&lt;/a&gt;</code><br>缩写形式<br><code>&lt;a :href=&#39;url&#39;&gt;跳转&lt;/a&gt;</code></li></ul><p><strong>演示代码：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">"url"</span>&gt;</span>我的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,<span class="comment">//标签id</span></span></span><br><span class="line">data: &#123;</span><br><span class="line"><span class="actionscript">url: <span class="string">'http://www.lizibin.top/'</span></span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="actionscript"><span class="comment">//vue方法</span></span></span><br><span class="line">methods:&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="1-10-样式绑定"><a href="#1-10-样式绑定" class="headerlink" title="1.10 样式绑定"></a>1.10 样式绑定</h3><ul><li>class样式处理<br>对象语法<br><code>&lt;div v-bind:class=&quot;{active: isActive}&quot;&gt;&lt;/div&gt;</code></li></ul><p><strong>代码示例：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.active</span> &#123;</span></span><br><span class="line">border: 1px solid;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:class</span>=<span class="string">"&#123;active:isActive&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">'handle'</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--点击去掉样式--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,<span class="comment">//标签id</span></span></span><br><span class="line">data: &#123;</span><br><span class="line"><span class="actionscript">isActive: <span class="literal">true</span></span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="actionscript"><span class="comment">//vue方法</span></span></span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="actionscript">handle: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">this</span>.isActive = !<span class="keyword">this</span>.isActive;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>数组语法<br><code>&lt;div v-bind:class=&quot;[activeClass, errorClass]&quot;&gt;&lt;/div&gt;</code><br><strong>代码示例：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.active</span> &#123;</span></span><br><span class="line">border: 1px solid;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.error</span> &#123;</span></span><br><span class="line">background-color: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--数组样式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:class</span>=<span class="string">"[activeClass,errorClass]"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">'handle'</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--点击去掉error样式--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,<span class="comment">//标签id</span></span></span><br><span class="line">data: &#123;</span><br><span class="line"><span class="actionscript">activeClass: <span class="string">'active'</span>,</span></span><br><span class="line"><span class="actionscript">errorClass: <span class="string">'error'</span></span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="actionscript"><span class="comment">//vue方法</span></span></span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="actionscript">handle: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">this</span>.errorClass = <span class="string">''</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>style样式处理</li></ul><p><strong>style样式处理</strong><br>对象语法<br><code>&lt;div v-bindhstyle=&quot;{ color: activeColor, fontsize: fontsize }&quot;&gt;&lt;/div&gt;</code></p><p><strong>代码示例:</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">'objStyles'</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--具体样式在data内设置--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="comment">/*样式绑定之内联样式Style*/</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,<span class="comment">//标签id</span></span></span><br><span class="line">data: &#123;</span><br><span class="line">objStyles: &#123;</span><br><span class="line"><span class="actionscript">border: <span class="string">'1px solid blue'</span>,</span></span><br><span class="line"><span class="actionscript">width: <span class="string">'100px'</span>,</span></span><br><span class="line"><span class="actionscript">height: <span class="string">'100px'</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="actionscript"><span class="comment">//vue方法</span></span></span><br><span class="line">methods:&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>数组语法<br><code>&lt;div v-bind: style=&quot; [baseStyles, overridingStyles]&quot;&gt;&lt;/div&gt;</code></p><p><strong>注意：</strong> overridingStyles对于前面的baseStyles样式，有的会覆盖，没有的会添加</p><hr><h3 id="1-11-分支结构"><a href="#1-11-分支结构" class="headerlink" title="1.11 分支结构"></a>1.11 分支结构</h3><p><strong>分支结构</strong></p><ul><li>v-if</li><li>v- else</li><li>v else-if .</li><li>v-show</li><li><strong>v-if与v- show的区别</strong><br>v-if控制元素是否渲染到页面<br>V show控制元素是否显示(已经渲染到了页面)</li></ul><p><strong>代码示例：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">'score&gt;=90'</span>&gt;</span>优秀<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">'score&lt;90&amp;&amp;score&gt;=60'</span>&gt;</span>一般<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span>比较差<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,<span class="comment">//标签id</span></span></span><br><span class="line">data: &#123;</span><br><span class="line"><span class="actionscript">score: <span class="string">'90'</span></span></span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"><span class="actionscript"><span class="comment">//vue方法</span></span></span><br><span class="line">methods:&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="1-12-循环结构"><a href="#1-12-循环结构" class="headerlink" title="1.12 循环结构"></a>1.12 循环结构</h3><ul><li>v-for 遍历数组</li></ul><p><code>&lt;li v-for=&#39; item in list&#39;&gt;&lt;/li&gt;</code><br><code>&lt;li v-for=&#39; (item, index) in list&#39;&gt; + &#39;---&#39; +&lt;/li&gt;</code><br>●key的作用 :帮助Vue区分不同的元素,从而提高性能<br><code>&lt;li :key=&#39;item.id&#39; v-for=&#39; (item, index) in list&#39;&gt; + &#39;---&#39; &lt;/li&gt;</code><br><strong>注意</strong>: 数组有id就用id，没有id用index</p><p><strong>代码示例：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">:key</span>=<span class="string">'id'</span> <span class="attr">v-for</span>=<span class="string">'item in friut'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,</span></span><br><span class="line">data: &#123;</span><br><span class="line">friut:[</span><br><span class="line">&#123;</span><br><span class="line">id:0,</span><br><span class="line"><span class="actionscript">name: <span class="string">'apple'</span></span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">id:1,</span><br><span class="line"><span class="actionscript">name: <span class="string">'orange'</span></span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">id:2,</span><br><span class="line"><span class="actionscript">name: <span class="string">'banana'</span></span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line"><span class="actionscript"><span class="comment">//vue方法</span></span></span><br><span class="line">methods:&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://s1.ax1x.com/2020/08/12/avGLMd.png" alt="avGLMd.png" border="0" /><hr><ul><li>v-for 遍历对象</li></ul><p><code>&lt;div v-for=&#39; (value, key, index) in abject&#39;&gt;&lt;/div&gt;</code><br>v-if v-for结合使用<br><code>&lt;div v-if=&#39;value==12&#39; v-for=&#39; (value, key, index) in object&#39;&lt;/div&gt;</code></p><p><strong>代码示例:</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">'value==18'</span> <span class="attr">v-for</span>=<span class="string">'(value,key,index) in obj'</span>&gt;</span>&#123;&#123;value +'---' +key+'---'+index&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,<span class="comment">//标签id</span></span></span><br><span class="line">data: &#123;</span><br><span class="line">obj:&#123;</span><br><span class="line"><span class="actionscript">name:<span class="string">'李子彬'</span>,</span></span><br><span class="line">age: 18,</span><br><span class="line"><span class="actionscript">sex: <span class="string">'男'</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="actionscript"><span class="comment">//vue方法</span></span></span><br><span class="line">methods:&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git+GitHub 版本管理软件的使用</title>
      <link href="/lizibin1999.github.io/article/a8b7b059.html"/>
      <url>/lizibin1999.github.io/article/a8b7b059.html</url>
      
        <content type="html"><![CDATA[<h1 id="git的使用"><a href="#git的使用" class="headerlink" title="git的使用"></a>git的使用</h1><h2 id="一、git的使用前配置"><a href="#一、git的使用前配置" class="headerlink" title="一、git的使用前配置"></a>一、git的使用前配置</h2><ul><li>1.配置提交人姓名：<code>git config --global user.name</code>提交人姓名</li><li>2.配置提交人邮箱：<code>git config --global user.email</code> 提交人邮箱</li><li>3.查看git配置信息：<code>git config --list</code><br>注：修改提交人姓名和邮箱只需要重新写一遍即可<br><img src="https://s1.ax1x.com/2020/08/07/afi78g.png" alt="afi78g.png"></li></ul><h2 id="二、提交步骤"><a href="#二、提交步骤" class="headerlink" title="二、提交步骤"></a>二、提交步骤</h2><ul><li>1.<code>git init</code>  初始化git仓库</li><li>2.<code>git status</code> 查看文件状态</li><li>3.<code>git add 文件列表</code>  提交到暂存区</li><li>4.<code>git commit -m 提交说明</code>  把暂存区中的记录向仓库提交</li><li>5.<code>git log</code>  查看提交记录</li></ul><h2 id="三、恢复记录"><a href="#三、恢复记录" class="headerlink" title="三、恢复记录"></a>三、恢复记录</h2><ul><li>用暂存区的文件覆盖工作目录中的文件：<code>git checkout 文件名</code></li><li>将文件从暂存区中删除：<code>git rm --cached 文件名</code></li><li>将git仓库中指定的更新记录恢复出来，并且覆盖暂存区和工作区目录：<code>git rest --hard commitID</code><br><img src="https://s1.ax1x.com/2020/08/07/afMe81.png" alt="afMe81.png"></li></ul><h2 id="四、分支"><a href="#四、分支" class="headerlink" title="四、分支"></a>四、分支</h2><ul><li>为了便于理解，可以认为是当前工作区的副本</li><li>使用分支，可以从开发主线上分离出来，可以用分支开发新功能，可以修复原来的bug，还可以恢复分支前的工作区<br><img src="https://s1.ax1x.com/2020/08/07/aflApR.png" alt="aflApR.png"></li></ul><h3 id="1-主分支（master）"><a href="#1-主分支（master）" class="headerlink" title="1.主分支（master）"></a>1.主分支（master）</h3><p>   主分支：第一次向git仓库中提交更新记录时自动产生的一个分支</p><h3 id="2-开发分支（develop）"><a href="#2-开发分支（develop）" class="headerlink" title="2.开发分支（develop）"></a>2.开发分支（develop）</h3><p>   开发分支：作为开发的分支，基于master分支创建</p><h3 id="3-功能分支（feature）"><a href="#3-功能分支（feature）" class="headerlink" title="3.功能分支（feature）"></a>3.功能分支（feature）</h3><p>   功能分支：作为开发具体功能的分支，基于开发分支创建</p><h2 id="五、分支命令"><a href="#五、分支命令" class="headerlink" title="五、分支命令"></a>五、分支命令</h2><ul><li><code>git branch</code> 查看分支</li><li><code>git branch 分支名称</code>  创建分支</li><li><code>git checkout 分支名称</code>  切换分支</li><li><code>git merge 来源分支名</code>（被合并分支）    合并分支（在主分支上）</li><li><code>git branch -d 分支名称</code>   删除分支（分支合并后才允许删除 -D强制删除）</li></ul><h2 id="六、暂时保存更改"><a href="#六、暂时保存更改" class="headerlink" title="六、暂时保存更改"></a>六、暂时保存更改</h2><p>暂存区不能有东西才能切换分支，但是在开发中如果你在开发一个分支，项目经理告诉你原分支有bug必须马上改此时可以使用暂时保存更改，切换到原分支</p><ul><li>存储临时改动：<code>git stash</code></li><li>恢复改动：<code>git stash pop</code></li></ul><hr><h1 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h1><p>当单人开发时，本地仓库就够用了，但是大多数项目必须多人开发，此时需要用到Github</p><h2 id="一、注册（废话，过程不写了）"><a href="#一、注册（废话，过程不写了）" class="headerlink" title="一、注册（废话，过程不写了）"></a>一、注册（废话，过程不写了）</h2><h2 id="二、多人协作开发流程"><a href="#二、多人协作开发流程" class="headerlink" title="二、多人协作开发流程"></a>二、多人协作开发流程</h2><ul><li>A在自己的计算机中创建本地仓库</li><li>A在github中创建远程仓库</li><li>A将本地仓库推送到远程仓库</li><li>B克隆远程仓库到本地进行开发</li><li>B将本地仓库中开发的内容推送到远程仓库</li><li>A将远程仓库中的最新内容拉取到本地<br><a href="https://imgchr.com/i/af4E8g" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/08/07/af4E8g.png" alt="af4E8g.png"></a><br><a href="https://imgchr.com/i/af4APS" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/08/07/af4APS.png" alt="af4APS.png"></a><h2 id="三、上传远程仓库步骤"><a href="#三、上传远程仓库步骤" class="headerlink" title="三、上传远程仓库步骤"></a>三、上传远程仓库步骤</h2></li><li>1.初始化本地仓库 <code>git init</code></li><li>2.将项目上传本地仓库 <code>git commit -m 说明</code></li><li>3.建立远程仓库<br><img src="https://s1.ax1x.com/2020/08/07/af5rT0.png" alt="af5rT0.png"></li><li>4.本地仓库推送到GitHub远程仓库<br> <code>git push 远程仓库地址 分支名称</code><br> <code>git push 远程仓库地址别名 分支名称</code><br> <code>git push -u远程仓库地址别名 分支名称</code><br> -U记住推送地址及分支，下次推送只需要输入<code>git push</code>即可<br> <code>git remote add 远程仓库地址别名 远程仓库地址</code> 自定义远程仓库别名<br><img src="https://s1.ax1x.com/2020/08/07/afbTAA.png" alt="afbTAA.png"><h2 id="四、远程仓库克隆到本地仓库"><a href="#四、远程仓库克隆到本地仓库" class="headerlink" title="四、远程仓库克隆到本地仓库"></a>四、远程仓库克隆到本地仓库</h2></li><li><code>git clone 远程仓库地址</code><h2 id="五、B上传远程仓库-—GitHub添加合作者"><a href="#五、B上传远程仓库-—GitHub添加合作者" class="headerlink" title="五、B上传远程仓库 —GitHub添加合作者"></a>五、B上传远程仓库 —GitHub添加合作者</h2><img src="https://s1.ax1x.com/2020/08/07/ahbPKS.png" alt="ahbPKS.png"></li></ul><p><img src="https://s1.ax1x.com/2020/08/07/ahb3VJ.png" alt="ahb3VJ.png"><br>把邀请链接发送给B，然后B登陆自己的GitHub账号接受邀请链接<br><a href="https://imgchr.com/i/ahbfsS" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/08/07/ahbfsS.th.png" alt="ahbfsS.th.png"></a></p><h2 id="六、拉取远程仓库中最新的版本"><a href="#六、拉取远程仓库中最新的版本" class="headerlink" title="六、拉取远程仓库中最新的版本"></a>六、拉取远程仓库中最新的版本</h2><ul><li><code>git pull 远程仓库地址 分支名称</code><h2 id="七、解决冲突"><a href="#七、解决冲突" class="headerlink" title="七、解决冲突"></a>七、解决冲突</h2></li><li>在多人同时开发一个项目时， 如果两个人修改了同一-个文件的同-一个地方,就会发生冲突。冲突需要人为解决。</li><li>拉取最新文件，修改所需要的然后再次上传<h2 id="八、ssh免登录"><a href="#八、ssh免登录" class="headerlink" title="八、ssh免登录"></a>八、ssh免登录</h2></li><li><code>shh-keygen</code> </li><li>一路回车 使用默认值</li><li>生成了两个文件，用户/用户名/.ssh</li><li>一个公钥，一个私钥</li><li>视频教程：<br><a href="https://www.bilibili.com/video/BV1fi4y1u7h7" target="_blank" rel="noopener">视频教程地址</a></li></ul><h2 id="九、git忽略清单"><a href="#九、git忽略清单" class="headerlink" title="九、git忽略清单"></a>九、git忽略清单</h2><ul><li><p>在项目中新建 “.gitgnore”文件将不需要被git管理的文件名字添加到此文件中，在执行git命令的时候, git就会忽略这些文件。</p></li><li><p>将工作目录中的文件全部添加到暂存区: <code>git add .</code></p><h2 id="十、为仓库添加详细说明"><a href="#十、为仓库添加详细说明" class="headerlink" title="十、为仓库添加详细说明"></a>十、为仓库添加详细说明</h2></li><li><p>在项目中新建readme.md文件，在里面写对仓库的说明</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 版本控制软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git+github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css-flex布局</title>
      <link href="/lizibin1999.github.io/article/3f5aba1c.html"/>
      <url>/lizibin1999.github.io/article/3f5aba1c.html</url>
      
        <content type="html"><![CDATA[<h1 id="CSS-flex布局"><a href="#CSS-flex布局" class="headerlink" title="CSS-flex布局"></a>CSS-flex布局</h1><h2 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h2><p>移动端完美兼容，PC端IE11以上</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>当我们为父盒子设为flex布局后，子元素的float，clear和vertical-align属性将失效。</p><h2 id="常见父属性"><a href="#常见父属性" class="headerlink" title="常见父属性"></a>常见父属性</h2><ul><li>flex-direction：设置主轴的方向</li><li>justify-content：设置主轴上的子元素排列方式</li><li>flrx-wrap：设置元素是否换行</li><li>align-content：设置侧轴上的子元素的排列方式（多行）</li><li>align-items：设置侧轴上的子元素排列方式（单行）</li><li>flex-flow：复合属性，相当于同时设置了flex-direction和flex-wrap</li></ul><h3 id="1-flex-direction-设置主轴的方向"><a href="#1-flex-direction-设置主轴的方向" class="headerlink" title="1.flex-direction 设置主轴的方向"></a>1.flex-direction 设置主轴的方向</h3><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>row</td><td>默认值从左到</td></tr><tr><td>row-reverse</td><td>从右到左</td></tr><tr><td>column</td><td>从上到下</td></tr><tr><td>columo-reverse</td><td>从下到上</td></tr></tbody></table><h3 id="2-justify-content-设置主轴上的子元素排列方式"><a href="#2-justify-content-设置主轴上的子元素排列方式" class="headerlink" title="2.justify-content 设置主轴上的子元素排列方式"></a>2.justify-content 设置主轴上的子元素排列方式</h3><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>flex-start</td><td>默认从头部开始 如果主轴是x轴，则从左到右</td></tr><tr><td>flex-end</td><td>从尾部开始排列</td></tr><tr><td>center</td><td>在主轴居中对齐（如果主轴是x轴则水平居中）</td></tr><tr><td>space-around</td><td>平分剩余空间</td></tr><tr><td>space-between</td><td>先两边贴边，再评分剩余空间</td></tr></tbody></table><h3 id="3-flrx-wrap-设置元素是否换行"><a href="#3-flrx-wrap-设置元素是否换行" class="headerlink" title="3.flrx-wrap 设置元素是否换行"></a>3.flrx-wrap 设置元素是否换行</h3><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>nowrap</td><td>默认值，不换行</td></tr><tr><td>wrap</td><td>换行</td></tr></tbody></table><h3 id="4-align-items-设置侧轴上的子元素排列方式（单行）"><a href="#4-align-items-设置侧轴上的子元素排列方式（单行）" class="headerlink" title="4.align-items 设置侧轴上的子元素排列方式（单行）"></a>4.align-items 设置侧轴上的子元素排列方式（单行）</h3><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>flex-start</td><td>默认值，从上到下</td></tr><tr><td>flex-end</td><td>从下到上</td></tr><tr><td>center</td><td>挤在一起居中（垂直居中）</td></tr><tr><td>stretch</td><td>拉伸</td></tr></tbody></table><h3 id="5-align-content-设置侧轴上的子元素的排列方式（多行）"><a href="#5-align-content-设置侧轴上的子元素的排列方式（多行）" class="headerlink" title="5.align-content 设置侧轴上的子元素的排列方式（多行）"></a>5.align-content 设置侧轴上的子元素的排列方式（多行）</h3><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>flex-start</td><td>默认值再侧轴的头部开始排列</td></tr><tr><td>flex-end</td><td>再侧轴的尾部开始排列</td></tr><tr><td>center</td><td>在侧轴中间显示</td></tr><tr><td>space-around</td><td>子项在侧轴平分空间</td></tr><tr><td>space-between</td><td>子项在侧轴先分布在两头，再平分剩余空间</td></tr><tr><td>stretch</td><td>设置子项元素高度平分元素高度</td></tr></tbody></table><h3 id="6-flex-flow-复合属性，相当于同时设置了flex-direction和flex-wrap"><a href="#6-flex-flow-复合属性，相当于同时设置了flex-direction和flex-wrap" class="headerlink" title="6.flex-flow 复合属性，相当于同时设置了flex-direction和flex-wrap"></a>6.flex-flow 复合属性，相当于同时设置了flex-direction和flex-wrap</h3><p>flex-flow:row wrap;</p><h2 id="常见子属性"><a href="#常见子属性" class="headerlink" title="常见子属性"></a>常见子属性</h2><ul><li>flex子项目占的份数</li><li>align-self控制子项目的排列方式</li><li>order属性定义子项目的排列顺序（前后顺序）</li></ul>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息资源管理知识点留念</title>
      <link href="/lizibin1999.github.io/article/c0ed2e04.html"/>
      <url>/lizibin1999.github.io/article/c0ed2e04.html</url>
      
        <content type="html"><![CDATA[<h3 id="上大学以来唯一一次需要全书背诵才能考过的科目。。。"><a href="#上大学以来唯一一次需要全书背诵才能考过的科目。。。" class="headerlink" title="上大学以来唯一一次需要全书背诵才能考过的科目。。。"></a>上大学以来唯一一次需要全书背诵才能考过的科目。。。</h3><h4 id="找到了当年背政治的赶脚。。。"><a href="#找到了当年背政治的赶脚。。。" class="headerlink" title="找到了当年背政治的赶脚。。。"></a>找到了当年背政治的赶脚。。。</h4><p>手写的，字忽略吧，当草稿写的。。。</p><hr><div><img src=https://s1.ax1x.com/2020/07/30/aK7fRU.jpg /></div><div><img src=https://s1.ax1x.com/2020/07/30/aK7RiV.jpg /></div><div><img src=https://s1.ax1x.com/2020/07/30/aK7WGT.jpg /></div><div><img src=https://s1.ax1x.com/2020/07/30/aK7caq.jpg /></div><div><img src=https://s1.ax1x.com/2020/07/30/aK7gI0.jpg /></div><div><img src=https://s1.ax1x.com/2020/07/30/aK75M4.jpg /></div><h4 id="后天就考试了，留个纪念，也预祝自己能考好！！"><a href="#后天就考试了，留个纪念，也预祝自己能考好！！" class="headerlink" title="后天就考试了，留个纪念，也预祝自己能考好！！"></a>后天就考试了，留个纪念，也预祝自己能考好！！</h4>]]></content>
      
      
      <categories>
          
          <category> Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端学习路线图</title>
      <link href="/lizibin1999.github.io/article/b5baa0c8.html"/>
      <url>/lizibin1999.github.io/article/b5baa0c8.html</url>
      
        <content type="html"><![CDATA[<div><img src=https://gitee.com/lizibin1999/img/raw/master/imgs/20210222210034.png/></div>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习路线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML定位--绝对定位和相对定位、固定定位</title>
      <link href="/lizibin1999.github.io/article/58516b01.html"/>
      <url>/lizibin1999.github.io/article/58516b01.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/u010297791/article/details/53176027" target="_blank" rel="noopener">原文链接</a></p><h1 id="一、position：relative-相对定位"><a href="#一、position：relative-相对定位" class="headerlink" title="一、position：relative  相对定位"></a>一、position：relative  相对定位</h1><p>特点：</p><pre><code>1）不影响元素本身的特性；2）不使元素脱离文档流（元素移动之后原始位置会被保留）；3）如果没有定位偏移量，对元素本身没有任何影响；4）提升层级。</code></pre><p>注：定位元素位置控制：top/right/bottom/left  定位元素偏移量</p><h1 id="二、position：absolute-绝对定位"><a href="#二、position：absolute-绝对定位" class="headerlink" title="二、position：absolute  绝对定位"></a>二、position：absolute  绝对定位</h1><p>特点：</p><pre><code>1）使元素完全脱离文档流；2）使内嵌支持宽高；3）块属性标签内容撑开宽度；4）如果有定位父级相对于定位父级发生偏移，没有定位父级相对于document发生偏移；5）相对定位一般都是配合绝对定位元素使用；6）提升层级子绝父相</code></pre><p>注意：</p><p>z-index:[number]；  定位层级<br>      a、定位元素默认后者层级高于前者；<br>      b、建议在兄弟标签之间比较层级</p><h1 id="三、position：fixed-固定定位"><a href="#三、position：fixed-固定定位" class="headerlink" title="三、position：fixed  固定定位"></a>三、position：fixed  固定定位</h1><p>与绝对定位的特性基本一致，唯一的差别是始终相对整个文档进行定位；</p><pre><code>问题：IE6不支持固定定位；</code></pre><h1 id="四、其他定位"><a href="#四、其他定位" class="headerlink" title="四、其他定位"></a>四、其他定位</h1><pre><code>position:static ； 默认值position:inherit ;  从父元素继承定位属性的值 (不兼容)</code></pre><h1 id="五、三个比较重要的属性："><a href="#五、三个比较重要的属性：" class="headerlink" title="五、三个比较重要的属性："></a>五、三个比较重要的属性：</h1><pre><code>a】position  定位b】z-index  定位层级c】opacity 透明度</code></pre>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 定位 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown基本语法</title>
      <link href="/lizibin1999.github.io/article/47caaf1e.html"/>
      <url>/lizibin1999.github.io/article/47caaf1e.html</url>
      
        <content type="html"><![CDATA[<h1 id="markdown基本语法"><a href="#markdown基本语法" class="headerlink" title="markdown基本语法"></a>markdown基本语法</h1><p><a href="https://www.jianshu.com/p/191d1e21f7ed/" target="_blank" rel="noopener">Markdown语法介绍（详细）</a></p><h1 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h1><p>在想要设置为标题的文字前面加#来表示<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p><p>注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。</p><h1 id="二、字体"><a href="#二、字体" class="headerlink" title="二、字体"></a>二、字体</h1><ul><li><strong>加粗</strong><br>要加粗的文字左右分别用两个*号包起来</li><li><strong>斜体</strong><br>要倾斜的文字左右分别用一个*号包起来</li><li><strong>斜体加粗</strong><br>要倾斜和加粗的文字左右分别用三个*号包起来</li><li><strong>删除线</strong><br>要加删除线的文字左右分别用两个~~号包起来</li></ul><h1 id="三、引用"><a href="#三、引用" class="headerlink" title="三、引用"></a>三、引用</h1><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…<br>貌似可以一直加下去，但没神马卵用</p><h1 id="四、分割线"><a href="#四、分割线" class="headerlink" title="四、分割线"></a>四、分割线</h1><p>三个或者三个以上的 - 或者 * 都可以。</p><h1 id="五、图片"><a href="#五、图片" class="headerlink" title="五、图片"></a>五、图片</h1><p><code>![图片alt](图片地址 &#39;&#39;图片title&#39;&#39;)</code></p><p>图片alt就是显示在图片下面的文字，相当于对图片内容的解释。<br>图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</p><h1 id="六、超链接"><a href="#六、超链接" class="headerlink" title="六、超链接"></a>六、超链接</h1><p><code>[超链接名](超链接地址 &quot;超链接title&quot;)</code><br>title可加可不加</p><h1 id="七、列表"><a href="#七、列表" class="headerlink" title="七、列表"></a>七、列表</h1><p><strong>无序列表</strong><br>语法：<br>无序列表用 - + * 任何一种都可以</p><p><strong>有序列表</strong><br>语法：<br>数字加点</p><p><strong>列表嵌套</strong></p><p>上一级和下一级之间敲三个空格即可</p><h1 id="八、表格"><a href="#八、表格" class="headerlink" title="八、表格"></a>八、表格</h1><p><strong>表头|表头|表头</strong><br><strong>—|:–:|—:</strong><br><strong>内容|内容|内容</strong><br><strong>内容|内容|内容</strong></p><p>第二行分割表头和内容。</p><ul><li>有一个就行，为了对齐，多加了几个<br>文字默认居左</li><li>两边加：表示文字居中</li><li>右边加：表示文字居右<br>注：原生的语法两边都要用 | 包起来。此处省略</li></ul><h1 id="九、代码"><a href="#九、代码" class="headerlink" title="九、代码"></a>九、代码</h1><p>语法：<br>单行代码：代码之间分别用一个反引号包起来</p><p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p><h1 id="十、流程图"><a href="#十、流程图" class="headerlink" title="十、流程图"></a>十、流程图</h1><p><strong>```flow</strong><br><strong>st=&gt;start: 开始</strong><br><strong>op=&gt;operation: My Operation</strong><br><strong>cond=&gt;condition: Yes or No?</strong><br><strong>e=&gt;end</strong><br><strong>st-&gt;op-&gt;cond</strong><br><strong>cond(yes)-&gt;e</strong><br><strong>cond(no)-&gt;op</strong><br><strong>&amp;```</strong></p>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript ES6 知识点汇总</title>
      <link href="/lizibin1999.github.io/article/e16c82ea.html"/>
      <url>/lizibin1999.github.io/article/e16c82ea.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript-ES6-知识点汇总"><a href="#JavaScript-ES6-知识点汇总" class="headerlink" title="JavaScript ES6 知识点汇总"></a>JavaScript ES6 知识点汇总</h1><h2 id="let关键字"><a href="#let关键字" class="headerlink" title="let关键字"></a>let关键字</h2><ul><li>ES6中新增的用于声明变量的关键字</li><li>let声明的变量只在所处于的块级有效(即大括号内)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> a=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(a) <span class="comment">// a is not defined</span></span><br></pre></td></tr></table></figure></li><li>不存在变量提升，只能先声明再使用</li><li>暂时性死区，在块级作用域使用let声明变量，变量会绑定块级作用域</li></ul><hr><h2 id="const关键字"><a href="#const关键字" class="headerlink" title="const关键字"></a>const关键字</h2><p><strong>作用</strong>:声明常量，常量就是值(内存地址)不能变化的量。</p><ul><li><p>具有块级作用域</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> a = <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span><span class="number">.1</span>og(a) <span class="comment">// a is not defined</span></span><br></pre></td></tr></table></figure></li><li><p>声明常量时必须赋值<br><code>const PI; // Missing initializer in const declaration</code></p></li><li><p>常量赋值后, 值不能修改。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> PI = <span class="number">3.14</span>;</span><br><span class="line">PI = <span class="number">100</span>; <span class="comment">// Assignment to constant variable.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ary = [<span class="number">100</span>， <span class="number">200</span>];</span><br><span class="line">ary[<span class="number">0</span>] = <span class="string">'a'</span> ;</span><br><span class="line">ary[<span class="number">1</span>] = <span class="string">'b'</span> ;<span class="comment">//可以用下标重新赋值</span></span><br><span class="line"><span class="built_in">console</span> <span class="number">.1</span>og(ary); <span class="comment">// ['a', 'b'];</span></span><br><span class="line">ary = [<span class="string">'a'</span>, <span class="string">'b'</span>]; <span class="comment">// Assignment to constant variable.</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h2><ul><li>数组解构允许我们按照一一对应的关系从数组中提取值<br>然后将值赋值给变量</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Let ary = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">Let [a, b, c] = ary;</span><br></pre></td></tr></table></figure><ul><li>对象解构<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123; <span class="attr">name</span>: <span class="string">' zhangsan'</span>，age: <span class="number">20</span> &#125; ;</span><br><span class="line"><span class="keyword">let</span> &#123; name, age &#125; = person;</span><br><span class="line"><span class="built_in">console</span><span class="number">.1</span>og (name) ; <span class="comment">//' zhangsan'</span></span><br><span class="line"><span class="built_in">console</span>.log(age); <span class="comment">// 20</span></span><br><span class="line"><span class="comment">//另一种写法</span></span><br><span class="line"><span class="keyword">let</span> &#123;<span class="attr">name</span>: myName, <span class="attr">age</span>: myAge&#125; = person; <span class="comment">//myName myAge属于别名</span></span><br><span class="line"><span class="built_in">console</span> . log (myName) ; <span class="comment">// ' zhangsan'</span></span><br><span class="line"><span class="built_in">console</span> . log (myAge); <span class="comment">// 20</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><p><strong>作用：</strong>简化函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fn</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">123</span>)</span><br><span class="line">fn();</span><br></pre></td></tr></table></figure><ul><li>函数体中只有一句代码,且代码的执行结果就是返回值，可省略大括号</li><li>如果形参只有一个，可以省略小括号</li><li>箭头函数不绑定this,箭头函数没有自己的this关键字,如果在箭头函数中使用this,this关键字将指向箭头函数定义位置中的this</li></ul><hr><h2 id="剩余参数"><a href="#剩余参数" class="headerlink" title="剩余参数"></a>剩余参数</h2><p><strong>作用：</strong>剩余参数语法允许我们将一个不定数量的参数表示为一个数组。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span> (<span class="params">first, ...args</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>. log(first); <span class="comment">// 10</span></span><br><span class="line"><span class="built_in">console</span>. log(args) ; <span class="comment">// [20， 30]</span></span><br><span class="line">&#125;</span><br><span class="line">sum(<span class="number">10</span>，<span class="number">20</span>，<span class="number">30</span>)</span><br></pre></td></tr></table></figure><ul><li>剩余参数与解构配合使用<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Let ary1 = [<span class="string">'张三'</span>,<span class="string">'李四'</span>，<span class="string">'王五'</span>];</span><br><span class="line">Let [s1, ...s2] = ary1;</span><br><span class="line"><span class="built_in">console</span>.log(s1)</span><br><span class="line"><span class="built_in">console</span>.log(s2)</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="数组的扩展方法"><a href="#数组的扩展方法" class="headerlink" title="数组的扩展方法"></a>数组的扩展方法</h1><h2 id="扩展运算符"><a href="#扩展运算符" class="headerlink" title="扩展运算符"></a>扩展运算符</h2><p><strong>作用：</strong>扩展运算符可以将数组拆分成以逗号分隔的参数序列</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Let ary = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>];</span><br><span class="line"><span class="built_in">console</span><span class="number">.1</span>og(.. ,ary)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"a"</span>, <span class="string">"b"</span>,<span class="string">"c"</span> ) <span class="comment">//结果都是 a b c</span></span><br></pre></td></tr></table></figure><ul><li><p>应用：数组合并</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法一</span></span><br><span class="line"><span class="keyword">let</span> ary1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> ary2 = [<span class="number">3</span>，<span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">let</span> ary3 = [...ary1, ...ary2];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//方法二</span></span><br><span class="line">ary1.push(...ary2);</span><br></pre></td></tr></table></figure></li><li><p>将类数组或可遍历对象转换为真正的数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> oDivs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'div'</span>) ;</span><br><span class="line">oDivs = [...oDivs];</span><br></pre></td></tr></table></figure></li></ul><h2 id="构造函数方法"><a href="#构造函数方法" class="headerlink" title="构造函数方法"></a>构造函数方法</h2><ul><li>Array.from </li><li>将类数组或可遍历对象转换为真正的数组<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arrayLike = &#123;</span><br><span class="line">    <span class="string">'O'</span>: <span class="string">'a'</span>,</span><br><span class="line">    <span class="string">'1'</span>: <span class="string">'b'</span>,</span><br><span class="line">    <span class="string">'2'</span>: <span class="string">'C'</span>,</span><br><span class="line">    length: <span class="number">3</span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="keyword">let</span> arr2 = <span class="built_in">Array</span>. from(arrayLike) ; <span class="comment">// ['a', 'b', 'c']</span></span><br><span class="line"><span class="keyword">let</span> arr2 = <span class="built_in">Array</span>. from(arrayLike ，item =&gt; item*<span class="number">2</span>) ; <span class="comment">// ['a', 'b', 'c']</span></span><br><span class="line"><span class="comment">//还可以传入第二个值，类似map方法，对每个元素进行处理</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="find方法"><a href="#find方法" class="headerlink" title="find方法"></a>find方法</h2><p><strong>作用：</strong>用于找出第-一个符合条件的数组成员,如果没有找到返回undefined</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ary = [&#123;</span><br><span class="line">    id: <span class="number">1</span>,</span><br><span class="line">    name: <span class="string">'张三'</span></span><br><span class="line">    &#125;，&#123;</span><br><span class="line">    id: <span class="number">2</span>,</span><br><span class="line">    name: <span class="string">'李四'</span></span><br><span class="line">    &#125;] ;</span><br><span class="line"><span class="keyword">let</span> target = ary. find (item, index) =&gt; item.id == <span class="number">2</span>);</span><br></pre></td></tr></table></figure><h2 id="findindex（）"><a href="#findindex（）" class="headerlink" title="findindex（）"></a>findindex（）</h2><p><strong>作用：</strong>用于找出第一一个符合条件的数组成员的位置,如果没有找到返回-1</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ary = [<span class="number">1</span>, <span class="number">5</span>, <span class="number">10</span>，<span class="number">15</span>];</span><br><span class="line"><span class="keyword">let</span> index = ary. findIndex (<span class="function">(<span class="params">value, index</span>) =&gt;</span> value &gt; <span class="number">9</span>) ;</span><br><span class="line"><span class="built_in">console</span>. log (index) ; <span class="comment">// 2</span></span><br></pre></td></tr></table></figure><hr><h2 id="include"><a href="#include" class="headerlink" title="include()"></a>include()</h2><p><strong>作用：</strong>表示某个数组是否包含给定的值，返回布尔值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Let ary = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>];</span><br><span class="line">Let result = ary.includes(<span class="string">'a'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure><hr><h1 id="String的扩展方法"><a href="#String的扩展方法" class="headerlink" title="String的扩展方法"></a>String的扩展方法</h1><h2 id="模板字符串中可以解析变量。"><a href="#模板字符串中可以解析变量。" class="headerlink" title="模板字符串中可以解析变量。"></a>模板字符串中可以解析变量。</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name =<span class="string">'张三'</span>;</span><br><span class="line"><span class="keyword">let</span> sayHello = <span class="string">'hello,my name is $&#123;name&#125;'</span>; <span class="comment">// hello, my name is zhangsan</span></span><br></pre></td></tr></table></figure><hr><h2 id="startsWith-endsWith"><a href="#startsWith-endsWith" class="headerlink" title="startsWith() endsWith()"></a>startsWith() endsWith()</h2><ul><li>startsWith(): 表示参数字符串是否在原字符串的头部，返回布尔值</li><li>endsWith(): 表示参数字符串是否在原字符串的尾部，返回布尔值</li></ul><hr><h2 id="repeat"><a href="#repeat" class="headerlink" title="repeat()"></a>repeat()</h2><ul><li>repeat方法表示将原字符串重复n次，返回一个新字符串。<br><code>&#39;x&#39;.repeat (3)</code></li></ul><hr><h2 id="Set数据结构"><a href="#Set数据结构" class="headerlink" title="Set数据结构"></a>Set数据结构</h2><ul><li>ES6提供了新的数据结构Set.它类似于数组，但是成员的值都是唯一的，没有重复的值。</li><li>Set本身是-个构造函故，用来生成Set数据结构。<br><code>const s = new Set();</code></li><li>Set函数可以接受一个数组作为参数， 用来初始化。<br><code>aonst set = new set([1, 2, 3, 4, 4]);</code></li></ul><p><strong>应用：</strong>数组去重</p><p><strong>实例方法：</strong></p><ul><li>add(value): 添加某个值,返回Set结构本身</li><li>delete(value): 删除某个值，返回-个布尔值，表示删除是否成功</li><li>has(value): 返回一个布尔值，表示该值是否为Set的成员</li><li>clear(): 清除所有成员，没有返回值</li></ul><p><strong>遍历</strong></p><ul><li>Set结构的实例与数组一样,也拥有forEach方法， 用于对每个成员执行某种操作，没有返回值<br><code>s.forEach(value =&gt; console.1og (value) )</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript ES6 知识点汇总 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
